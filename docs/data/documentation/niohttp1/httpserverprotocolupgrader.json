{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPServerProtocolUpgrader"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/niohttp1\/httpserverprotocolupgrader"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/org.swift.docc\/documentation\/NIOHTTP1\/HTTPServerProtocolUpgrader","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"An object that implements "},{"type":"codeVoice","code":"HTTPServerProtocolUpgrader"},{"type":"text","text":" knows how to handle HTTP upgrade to"},{"type":"text","text":" "},{"type":"text","text":"a protocol on a server-side channel."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPServerProtocolUpgrader"}],"title":"HTTPServerProtocolUpgrader","roleHeading":"Protocol","role":"symbol","symbolKind":"protocol","externalID":"s:8NIOHTTP126HTTPServerProtocolUpgraderP","modules":[{"name":"NIOHTTP1"}],"navigatorTitle":[{"kind":"identifier","text":"HTTPServerProtocolUpgrader"}]},"hierarchy":{"paths":[["doc:\/\/org.swift.docc\/documentation\/NIOHTTP1"]]},"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/org.swift.docc\/documentation\/NIOHTTP1\/HTTPServerProtocolUpgrader\/requiredUpgradeHeaders","doc:\/\/org.swift.docc\/documentation\/NIOHTTP1\/HTTPServerProtocolUpgrader\/supportedProtocol"]},{"title":"Instance Methods","identifiers":["doc:\/\/org.swift.docc\/documentation\/NIOHTTP1\/HTTPServerProtocolUpgrader\/buildUpgradeResponse(channel:upgradeRequest:initialResponseHeaders:)","doc:\/\/org.swift.docc\/documentation\/NIOHTTP1\/HTTPServerProtocolUpgrader\/upgrade(context:upgradeRequest:)"]}],"references":{"doc://org.swift.docc/documentation/NIOHTTP1/HTTPServerProtocolUpgrader/requiredUpgradeHeaders":{"role":"symbol","title":"requiredUpgradeHeaders","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"requiredUpgradeHeaders"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"]"}],"abstract":[{"type":"text","text":"All the header fields the protocol needs in the request to successfully upgrade. These header fields"},{"type":"text","text":" "},{"type":"text","text":"will be provided to the handler when it is asked to handle the upgrade. They will also be validated"},{"type":"text","text":" "},{"type":"text","text":"against the inbound requestâ€™s Connection header field."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIOHTTP1\/HTTPServerProtocolUpgrader\/requiredUpgradeHeaders","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/niohttp1\/httpserverprotocolupgrader\/requiredupgradeheaders"},"doc://org.swift.docc/documentation/NIOHTTP1/HTTPServerProtocolUpgrader/upgrade(context:upgradeRequest:)":{"role":"symbol","title":"upgrade(context:upgradeRequest:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"upgrade"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:3NIO21ChannelHandlerContextC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"upgradeRequest"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HTTPRequestHead","preciseIdentifier":"s:8NIOHTTP115HTTPRequestHeadV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:3NIO15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Called when the upgrade response has been flushed. At this time it is safe to mutate the channel pipeline"},{"type":"text","text":" "},{"type":"text","text":"to add whatever channel handlers are required. Until the returned "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" succeeds, all received"},{"type":"text","text":" "},{"type":"text","text":"data will be buffered."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIOHTTP1\/HTTPServerProtocolUpgrader\/upgrade(context:upgradeRequest:)","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/niohttp1\/httpserverprotocolupgrader\/upgrade(context:upgraderequest:)"},"doc://org.swift.docc/documentation/NIOHTTP1/HTTPServerProtocolUpgrader/buildUpgradeResponse(channel:upgradeRequest:initialResponseHeaders:)":{"role":"symbol","title":"buildUpgradeResponse(channel:upgradeRequest:initialResponseHeaders:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"buildUpgradeResponse"},{"kind":"text","text":"("},{"kind":"externalParam","text":"channel"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Channel","preciseIdentifier":"s:3NIO7ChannelP"},{"kind":"text","text":", "},{"kind":"externalParam","text":"upgradeRequest"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HTTPRequestHead","preciseIdentifier":"s:8NIOHTTP115HTTPRequestHeadV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"initialResponseHeaders"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HTTPHeaders","preciseIdentifier":"s:8NIOHTTP111HTTPHeadersV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:3NIO15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"HTTPHeaders","preciseIdentifier":"s:8NIOHTTP111HTTPHeadersV"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Builds the upgrade response headers. Should return any headers that need to be supplied to the client"},{"type":"text","text":" "},{"type":"text","text":"in the 101 Switching Protocols response. If upgrade cannot proceed for any reason, this function should"},{"type":"text","text":" "},{"type":"text","text":"fail the future."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIOHTTP1\/HTTPServerProtocolUpgrader\/buildUpgradeResponse(channel:upgradeRequest:initialResponseHeaders:)","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/niohttp1\/httpserverprotocolupgrader\/buildupgraderesponse(channel:upgraderequest:initialresponseheaders:)"},"doc://org.swift.docc/documentation/NIOHTTP1/HTTPServerProtocolUpgrader/supportedProtocol":{"role":"symbol","title":"supportedProtocol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"supportedProtocol"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"abstract":[{"type":"text","text":"The protocol this upgrader knows how to support."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIOHTTP1\/HTTPServerProtocolUpgrader\/supportedProtocol","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/niohttp1\/httpserverprotocolupgrader\/supportedprotocol"},"doc://org.swift.docc/documentation/NIOHTTP1/HTTPServerProtocolUpgrader":{"role":"symbol","title":"HTTPServerProtocolUpgrader","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPServerProtocolUpgrader"}],"abstract":[{"type":"text","text":"An object that implements "},{"type":"codeVoice","code":"HTTPServerProtocolUpgrader"},{"type":"text","text":" knows how to handle HTTP upgrade to"},{"type":"text","text":" "},{"type":"text","text":"a protocol on a server-side channel."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIOHTTP1\/HTTPServerProtocolUpgrader","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HTTPServerProtocolUpgrader"}],"url":"\/documentation\/niohttp1\/httpserverprotocolupgrader"},"doc://org.swift.docc/documentation/NIOHTTP1":{"role":"collection","title":"NIOHTTP1","abstract":[],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIOHTTP1","kind":"symbol","type":"topic","url":"\/documentation\/niohttp1"}}}