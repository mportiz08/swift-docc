{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPServerUpgradeHandler"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This handler behaves a bit differently from its Netty counterpart because it does not allow upgrade"},{"type":"text","text":" "},{"type":"text","text":"on any request but the first on a connection. This is primarily to handle clients that pipeline: itâ€™s"},{"type":"text","text":" "},{"type":"text","text":"sufficiently difficult to ensure that the upgrade happens at a safe time while dealing with pipelined"},{"type":"text","text":" "},{"type":"text","text":"requests that we choose to punt on it entirely and not allow it. As it happens this is mostly fine:"},{"type":"text","text":" "},{"type":"text","text":"the odds of someone needing to upgrade midway through the lifetime of a connection are very low."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/niohttp1\/httpserverupgradehandler"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelHandler","doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelInboundHandler","doc:\/\/org.swift.docc\/documentation\/NIO\/RemovableChannelHandler"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/org.swift.docc\/documentation\/NIOHTTP1\/HTTPServerUpgradeHandler","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A server-side channel handler that receives HTTP requests and optionally performs a HTTP-upgrade."},{"type":"text","text":" "},{"type":"text","text":"Removes itself from the channel pipeline after the first inbound request on the connection, regardless of"},{"type":"text","text":" "},{"type":"text","text":"whether the upgrade succeeded or not."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPServerUpgradeHandler"}],"title":"HTTPServerUpgradeHandler","roleHeading":"Class","role":"symbol","symbolKind":"class","externalID":"s:8NIOHTTP124HTTPServerUpgradeHandlerC","modules":[{"name":"NIOHTTP1"}],"navigatorTitle":[{"kind":"identifier","text":"HTTPServerUpgradeHandler"}]},"hierarchy":{"paths":[["doc:\/\/org.swift.docc\/documentation\/NIOHTTP1"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/org.swift.docc\/documentation\/NIOHTTP1\/HTTPServerUpgradeHandler\/init(upgraders:httpEncoder:extraHTTPHandlers:upgradeCompletionHandler:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/org.swift.docc\/documentation\/NIOHTTP1\/HTTPServerUpgradeHandler\/channelRead(context:data:)","doc:\/\/org.swift.docc\/documentation\/NIOHTTP1\/HTTPServerUpgradeHandler\/removeHandler(context:removalToken:)"]},{"title":"Type Aliases","identifiers":["doc:\/\/org.swift.docc\/documentation\/NIOHTTP1\/HTTPServerUpgradeHandler\/InboundIn","doc:\/\/org.swift.docc\/documentation\/NIOHTTP1\/HTTPServerUpgradeHandler\/InboundOut","doc:\/\/org.swift.docc\/documentation\/NIOHTTP1\/HTTPServerUpgradeHandler\/OutboundOut"]},{"title":"Default Implementations","identifiers":["doc:\/\/org.swift.docc\/documentation\/NIOHTTP1\/HTTPServerUpgradeHandler\/ChannelHandler-Implementations","doc:\/\/org.swift.docc\/documentation\/NIOHTTP1\/HTTPServerUpgradeHandler\/ChannelInboundHandler-Implementations"],"generated":true}],"references":{"doc://org.swift.docc/documentation/NIOHTTP1/HTTPServerUpgradeHandler/InboundOut":{"role":"symbol","title":"HTTPServerUpgradeHandler.InboundOut","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"InboundOut"}],"abstract":[{"type":"text","text":"The type of the inbound data which will be forwarded to the next "},{"type":"codeVoice","code":"ChannelInboundHandler"},{"type":"text","text":" in the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIOHTTP1\/HTTPServerUpgradeHandler\/InboundOut","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"InboundOut"}],"url":"\/documentation\/niohttp1\/httpserverupgradehandler\/inboundout"},"doc://org.swift.docc/documentation/NIOHTTP1/HTTPServerUpgradeHandler/OutboundOut":{"role":"symbol","title":"HTTPServerUpgradeHandler.OutboundOut","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"OutboundOut"}],"abstract":[{"type":"text","text":"The type of the outbound data which will be forwarded to the next "},{"type":"codeVoice","code":"ChannelOutboundHandler"},{"type":"text","text":" in the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIOHTTP1\/HTTPServerUpgradeHandler\/OutboundOut","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"OutboundOut"}],"url":"\/documentation\/niohttp1\/httpserverupgradehandler\/outboundout"},"doc://org.swift.docc/documentation/NIOHTTP1/HTTPServerUpgradeHandler/init(upgraders:httpEncoder:extraHTTPHandlers:upgradeCompletionHandler:)":{"role":"symbol","title":"init(upgraders:httpEncoder:extraHTTPHandlers:upgradeCompletionHandler:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"upgraders"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"HTTPServerProtocolUpgrader","preciseIdentifier":"s:8NIOHTTP126HTTPServerProtocolUpgraderP"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"httpEncoder"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HTTPResponseEncoder","preciseIdentifier":"s:8NIOHTTP119HTTPResponseEncoderC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"extraHTTPHandlers"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"RemovableChannelHandler","preciseIdentifier":"s:3NIO23RemovableChannelHandlerP"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"upgradeCompletionHandler"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:3NIO21ChannelHandlerContextC"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Create a "},{"type":"codeVoice","code":"HTTPServerUpgradeHandler"},{"type":"text","text":"."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIOHTTP1\/HTTPServerUpgradeHandler\/init(upgraders:httpEncoder:extraHTTPHandlers:upgradeCompletionHandler:)","kind":"symbol","type":"topic","url":"\/documentation\/niohttp1\/httpserverupgradehandler\/init(upgraders:httpencoder:extrahttphandlers:upgradecompletionhandler:)"},"doc://org.swift.docc/documentation/NIO/ChannelHandler":{"role":"symbol","title":"ChannelHandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelHandler"}],"abstract":[{"type":"text","text":"You should "},{"type":"emphasis","inlineContent":[{"type":"text","text":"never"}]},{"type":"text","text":" implement this protocol directly. Please implement one of its sub-protocols."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelHandler","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ChannelHandler"}],"url":"\/documentation\/nio\/channelhandler"},"doc://org.swift.docc/documentation/NIO/ChannelInboundHandler":{"role":"symbol","title":"ChannelInboundHandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelInboundHandler"}],"abstract":[{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" which handles inbound I\/O events for a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelInboundHandler","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ChannelInboundHandler"}],"url":"\/documentation\/nio\/channelinboundhandler"},"doc://org.swift.docc/documentation/NIOHTTP1/HTTPServerUpgradeHandler/ChannelInboundHandler-Implementations":{"role":"collectionGroup","title":"ChannelInboundHandler Implementations","abstract":[],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIOHTTP1\/HTTPServerUpgradeHandler\/ChannelInboundHandler-Implementations","kind":"article","type":"topic","url":"\/documentation\/niohttp1\/httpserverupgradehandler\/channelinboundhandler-implementations"},"doc://org.swift.docc/documentation/NIOHTTP1/HTTPServerUpgradeHandler":{"role":"symbol","title":"HTTPServerUpgradeHandler","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPServerUpgradeHandler"}],"abstract":[{"type":"text","text":"A server-side channel handler that receives HTTP requests and optionally performs a HTTP-upgrade."},{"type":"text","text":" "},{"type":"text","text":"Removes itself from the channel pipeline after the first inbound request on the connection, regardless of"},{"type":"text","text":" "},{"type":"text","text":"whether the upgrade succeeded or not."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIOHTTP1\/HTTPServerUpgradeHandler","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HTTPServerUpgradeHandler"}],"url":"\/documentation\/niohttp1\/httpserverupgradehandler"},"doc://org.swift.docc/documentation/NIO/RemovableChannelHandler":{"role":"symbol","title":"RemovableChannelHandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RemovableChannelHandler"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"RemovableChannelHandler"},{"type":"text","text":" is a "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" that can be dynamically removed from a "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" whilst"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" is operating normally."},{"type":"text","text":" "},{"type":"text","text":"A "},{"type":"codeVoice","code":"RemovableChannelHandler"},{"type":"text","text":" is required to remove itself from the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" (using"},{"type":"text","text":" "},{"type":"codeVoice","code":"ChannelHandlerContext.removeHandler"},{"type":"text","text":") as soon as possible."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/RemovableChannelHandler","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"RemovableChannelHandler"}],"url":"\/documentation\/nio\/removablechannelhandler"},"doc://org.swift.docc/documentation/NIOHTTP1/HTTPServerUpgradeHandler/channelRead(context:data:)":{"role":"symbol","title":"channelRead(context:data:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"channelRead"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:3NIO21ChannelHandlerContextC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NIOAny","preciseIdentifier":"s:3NIO6NIOAnyV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Called when some data has been read from the remote peer."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIOHTTP1\/HTTPServerUpgradeHandler\/channelRead(context:data:)","kind":"symbol","type":"topic","url":"\/documentation\/niohttp1\/httpserverupgradehandler\/channelread(context:data:)"},"doc://org.swift.docc/documentation/NIOHTTP1":{"role":"collection","title":"NIOHTTP1","abstract":[],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIOHTTP1","kind":"symbol","type":"topic","url":"\/documentation\/niohttp1"},"doc://org.swift.docc/documentation/NIOHTTP1/HTTPServerUpgradeHandler/removeHandler(context:removalToken:)":{"role":"symbol","title":"removeHandler(context:removalToken:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"removeHandler"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:3NIO21ChannelHandlerContextC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"removalToken"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:3NIO21ChannelHandlerContextC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"RemovalToken","preciseIdentifier":"s:3NIO21ChannelHandlerContextC12RemovalTokenV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Ask the receiving "},{"type":"codeVoice","code":"RemovableChannelHandler"},{"type":"text","text":" to remove itself from the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" as soon as possible."},{"type":"text","text":" "},{"type":"text","text":"The receiving "},{"type":"codeVoice","code":"RemovableChannelHandler"},{"type":"text","text":" may elect to remove itself sometime after this method call, rather than"},{"type":"text","text":" "},{"type":"text","text":"immediately, but if it does so it must take the necessary precautions to handle events arriving between the"},{"type":"text","text":" "},{"type":"text","text":"invocation of this method and the call to "},{"type":"codeVoice","code":"ChannelHandlerContext.removeHandler"},{"type":"text","text":" that triggers the actual"},{"type":"text","text":" "},{"type":"text","text":"removal."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIOHTTP1\/HTTPServerUpgradeHandler\/removeHandler(context:removalToken:)","kind":"symbol","type":"topic","url":"\/documentation\/niohttp1\/httpserverupgradehandler\/removehandler(context:removaltoken:)"},"doc://org.swift.docc/documentation/NIOHTTP1/HTTPServerUpgradeHandler/ChannelHandler-Implementations":{"role":"collectionGroup","title":"ChannelHandler Implementations","abstract":[],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIOHTTP1\/HTTPServerUpgradeHandler\/ChannelHandler-Implementations","kind":"article","type":"topic","url":"\/documentation\/niohttp1\/httpserverupgradehandler\/channelhandler-implementations"},"doc://org.swift.docc/documentation/NIOHTTP1/HTTPServerUpgradeHandler/InboundIn":{"role":"symbol","title":"HTTPServerUpgradeHandler.InboundIn","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"InboundIn"}],"abstract":[{"type":"text","text":"The type of the inbound data which is wrapped in "},{"type":"codeVoice","code":"NIOAny"},{"type":"text","text":"."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIOHTTP1\/HTTPServerUpgradeHandler\/InboundIn","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"InboundIn"}],"url":"\/documentation\/niohttp1\/httpserverupgradehandler\/inboundin"}}}