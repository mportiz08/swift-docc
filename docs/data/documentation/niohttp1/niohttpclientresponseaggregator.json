{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOHTTPClientResponseAggregator"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is achieved by buffering the contents of all received "},{"type":"codeVoice","code":"HTTPClientResponsePart"},{"type":"text","text":" "},{"type":"text","text":"messages until "},{"type":"codeVoice","code":"HTTPClientResponsePart.end"},{"type":"text","text":" is received, then assembling the"},{"type":"text","text":" "},{"type":"text","text":"full message and firing a channel read upstream with it. Useful when you do not"},{"type":"text","text":" "},{"type":"text","text":"want to deal with chunked messages and just want to receive everything at once, and"},{"type":"text","text":" "},{"type":"text","text":"are happy with the additional memory used and delay handling of the message until"},{"type":"text","text":" "},{"type":"text","text":"everything has been received."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"NIOHTTPClientResponseAggregator"},{"type":"text","text":" encounters a message larger than"},{"type":"text","text":" "},{"type":"codeVoice","code":"maxContentLength"},{"type":"text","text":", it discards the aggregated contents until the next"},{"type":"text","text":" "},{"type":"codeVoice","code":"HTTPClientResponsePart.end"},{"type":"text","text":" and signals that via"},{"type":"text","text":" "},{"type":"codeVoice","code":"fireUserInboundEventTriggered"},{"type":"text","text":"."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/niohttp1\/niohttpclientresponseaggregator"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelHandler","doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelInboundHandler","doc:\/\/org.swift.docc\/documentation\/NIO\/RemovableChannelHandler"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/org.swift.docc\/documentation\/NIOHTTP1\/NIOHTTPClientResponseAggregator","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"ChannelInboundHandler"},{"type":"text","text":" that handles HTTP chunked "},{"type":"codeVoice","code":"HTTPClientResponsePart"},{"type":"text","text":" "},{"type":"text","text":"messages by aggregating individual message chunks into a single"},{"type":"text","text":" "},{"type":"codeVoice","code":"NIOHTTPClientResponseFull"},{"type":"text","text":"."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOHTTPClientResponseAggregator"}],"title":"NIOHTTPClientResponseAggregator","roleHeading":"Class","role":"symbol","symbolKind":"class","externalID":"s:8NIOHTTP131NIOHTTPClientResponseAggregatorC","modules":[{"name":"NIOHTTP1"}],"navigatorTitle":[{"kind":"identifier","text":"NIOHTTPClientResponseAggregator"}]},"hierarchy":{"paths":[["doc:\/\/org.swift.docc\/documentation\/NIOHTTP1"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/org.swift.docc\/documentation\/NIOHTTP1\/NIOHTTPClientResponseAggregator\/init(maxContentLength:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/org.swift.docc\/documentation\/NIOHTTP1\/NIOHTTPClientResponseAggregator\/channelRead(context:data:)","doc:\/\/org.swift.docc\/documentation\/NIOHTTP1\/NIOHTTPClientResponseAggregator\/handlerAdded(context:)"]},{"title":"Type Aliases","identifiers":["doc:\/\/org.swift.docc\/documentation\/NIOHTTP1\/NIOHTTPClientResponseAggregator\/InboundIn","doc:\/\/org.swift.docc\/documentation\/NIOHTTP1\/NIOHTTPClientResponseAggregator\/InboundOut"]},{"title":"Default Implementations","identifiers":["doc:\/\/org.swift.docc\/documentation\/NIOHTTP1\/NIOHTTPClientResponseAggregator\/ChannelHandler-Implementations","doc:\/\/org.swift.docc\/documentation\/NIOHTTP1\/NIOHTTPClientResponseAggregator\/ChannelInboundHandler-Implementations","doc:\/\/org.swift.docc\/documentation\/NIOHTTP1\/NIOHTTPClientResponseAggregator\/RemovableChannelHandler-Implementations"],"generated":true}],"references":{"doc://org.swift.docc/documentation/NIO/ChannelInboundHandler":{"role":"symbol","title":"ChannelInboundHandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelInboundHandler"}],"abstract":[{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" which handles inbound I\/O events for a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelInboundHandler","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ChannelInboundHandler"}],"url":"\/documentation\/nio\/channelinboundhandler"},"doc://org.swift.docc/documentation/NIOHTTP1/NIOHTTPClientResponseAggregator/handlerAdded(context:)":{"role":"symbol","title":"handlerAdded(context:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"handlerAdded"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:3NIO21ChannelHandlerContextC"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Called when this "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" is added to the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIOHTTP1\/NIOHTTPClientResponseAggregator\/handlerAdded(context:)","kind":"symbol","type":"topic","url":"\/documentation\/niohttp1\/niohttpclientresponseaggregator\/handleradded(context:)"},"doc://org.swift.docc/documentation/NIOHTTP1/NIOHTTPClientResponseAggregator/InboundIn":{"role":"symbol","title":"NIOHTTPClientResponseAggregator.InboundIn","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"InboundIn"}],"abstract":[{"type":"text","text":"The type of the inbound data which is wrapped in "},{"type":"codeVoice","code":"NIOAny"},{"type":"text","text":"."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIOHTTP1\/NIOHTTPClientResponseAggregator\/InboundIn","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"InboundIn"}],"url":"\/documentation\/niohttp1\/niohttpclientresponseaggregator\/inboundin"},"doc://org.swift.docc/documentation/NIOHTTP1/NIOHTTPClientResponseAggregator/ChannelInboundHandler-Implementations":{"role":"collectionGroup","title":"ChannelInboundHandler Implementations","abstract":[],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIOHTTP1\/NIOHTTPClientResponseAggregator\/ChannelInboundHandler-Implementations","kind":"article","type":"topic","url":"\/documentation\/niohttp1\/niohttpclientresponseaggregator\/channelinboundhandler-implementations"},"doc://org.swift.docc/documentation/NIOHTTP1/NIOHTTPClientResponseAggregator/ChannelHandler-Implementations":{"role":"collectionGroup","title":"ChannelHandler Implementations","abstract":[],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIOHTTP1\/NIOHTTPClientResponseAggregator\/ChannelHandler-Implementations","kind":"article","type":"topic","url":"\/documentation\/niohttp1\/niohttpclientresponseaggregator\/channelhandler-implementations"},"doc://org.swift.docc/documentation/NIOHTTP1/NIOHTTPClientResponseAggregator":{"role":"symbol","title":"NIOHTTPClientResponseAggregator","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOHTTPClientResponseAggregator"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"ChannelInboundHandler"},{"type":"text","text":" that handles HTTP chunked "},{"type":"codeVoice","code":"HTTPClientResponsePart"},{"type":"text","text":" "},{"type":"text","text":"messages by aggregating individual message chunks into a single"},{"type":"text","text":" "},{"type":"codeVoice","code":"NIOHTTPClientResponseFull"},{"type":"text","text":"."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIOHTTP1\/NIOHTTPClientResponseAggregator","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"NIOHTTPClientResponseAggregator"}],"url":"\/documentation\/niohttp1\/niohttpclientresponseaggregator"},"doc://org.swift.docc/documentation/NIOHTTP1/NIOHTTPClientResponseAggregator/InboundOut":{"role":"symbol","title":"NIOHTTPClientResponseAggregator.InboundOut","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"InboundOut"}],"abstract":[{"type":"text","text":"The type of the inbound data which will be forwarded to the next "},{"type":"codeVoice","code":"ChannelInboundHandler"},{"type":"text","text":" in the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIOHTTP1\/NIOHTTPClientResponseAggregator\/InboundOut","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"InboundOut"}],"url":"\/documentation\/niohttp1\/niohttpclientresponseaggregator\/inboundout"},"doc://org.swift.docc/documentation/NIOHTTP1":{"role":"collection","title":"NIOHTTP1","abstract":[],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIOHTTP1","kind":"symbol","type":"topic","url":"\/documentation\/niohttp1"},"doc://org.swift.docc/documentation/NIOHTTP1/NIOHTTPClientResponseAggregator/channelRead(context:data:)":{"role":"symbol","title":"channelRead(context:data:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"channelRead"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:3NIO21ChannelHandlerContextC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NIOAny","preciseIdentifier":"s:3NIO6NIOAnyV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Called when some data has been read from the remote peer."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIOHTTP1\/NIOHTTPClientResponseAggregator\/channelRead(context:data:)","kind":"symbol","type":"topic","url":"\/documentation\/niohttp1\/niohttpclientresponseaggregator\/channelread(context:data:)"},"doc://org.swift.docc/documentation/NIOHTTP1/NIOHTTPClientResponseAggregator/RemovableChannelHandler-Implementations":{"role":"collectionGroup","title":"RemovableChannelHandler Implementations","abstract":[],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIOHTTP1\/NIOHTTPClientResponseAggregator\/RemovableChannelHandler-Implementations","kind":"article","type":"topic","url":"\/documentation\/niohttp1\/niohttpclientresponseaggregator\/removablechannelhandler-implementations"},"doc://org.swift.docc/documentation/NIOHTTP1/NIOHTTPClientResponseAggregator/init(maxContentLength:)":{"role":"symbol","title":"init(maxContentLength:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"maxContentLength"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"abstract":[],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIOHTTP1\/NIOHTTPClientResponseAggregator\/init(maxContentLength:)","kind":"symbol","type":"topic","url":"\/documentation\/niohttp1\/niohttpclientresponseaggregator\/init(maxcontentlength:)"},"doc://org.swift.docc/documentation/NIO/RemovableChannelHandler":{"role":"symbol","title":"RemovableChannelHandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RemovableChannelHandler"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"RemovableChannelHandler"},{"type":"text","text":" is a "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" that can be dynamically removed from a "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" whilst"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" is operating normally."},{"type":"text","text":" "},{"type":"text","text":"A "},{"type":"codeVoice","code":"RemovableChannelHandler"},{"type":"text","text":" is required to remove itself from the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" (using"},{"type":"text","text":" "},{"type":"codeVoice","code":"ChannelHandlerContext.removeHandler"},{"type":"text","text":") as soon as possible."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/RemovableChannelHandler","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"RemovableChannelHandler"}],"url":"\/documentation\/nio\/removablechannelhandler"},"doc://org.swift.docc/documentation/NIO/ChannelHandler":{"role":"symbol","title":"ChannelHandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelHandler"}],"abstract":[{"type":"text","text":"You should "},{"type":"emphasis","inlineContent":[{"type":"text","text":"never"}]},{"type":"text","text":" implement this protocol directly. Please implement one of its sub-protocols."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelHandler","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ChannelHandler"}],"url":"\/documentation\/nio\/channelhandler"}}}