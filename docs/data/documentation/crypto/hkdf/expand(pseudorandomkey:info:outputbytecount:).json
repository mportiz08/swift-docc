{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"expand"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"PRK"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Info"},{"kind":"text","text":">("},{"kind":"externalParam","text":"pseudoRandomKey"},{"kind":"text","text":" "},{"kind":"internalParam","text":"prk"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"PRK"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Info"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"outputByteCount"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/org.swift.docc\/documentation\/Crypto\/SymmetricKey","preciseIdentifier":"s:9CryptoKit12SymmetricKeyV","text":"SymmetricKey"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"PRK"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"ContiguousBytes","preciseIdentifier":"s:10Foundation15ContiguousBytesP"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Info"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"DataProtocol","preciseIdentifier":"s:10Foundation12DataProtocolP"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The expanded key bytes."}]}]},{"kind":"parameters","parameters":[{"name":"pseudoRandomKey","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The extracted pseudorandom key. This value is expected to be a high-entropy secret. In the HKDF specification it is obtained from the input key material and the salt using the extract method."}]}]},{"name":"info","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Context and application specific information."}]}]},{"name":"outputByteCount","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The desired number of output bytes."}]}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/crypto\/hkdf\/expand(pseudorandomkey:info:outputbytecount:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/org.swift.docc\/documentation\/Crypto\/HKDF\/expand(pseudoRandomKey:info:outputByteCount:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"The expand function as defined by the specification."},{"type":"text","text":" "},{"type":"text","text":"The goal of the expand function is to expand the pseudorandom key to the desired length."},{"type":"text","text":" "},{"type":"text","text":"Unless required by a specification, it is recommended to use the one-shot “deriveKey” API instead that performs both extraction and expansion."}],"kind":"symbol","metadata":{"role":"symbol","title":"expand(pseudoRandomKey:info:outputByteCount:)","roleHeading":"Type Method","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"expand"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"PRK"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Info"},{"kind":"text","text":">("},{"kind":"externalParam","text":"pseudoRandomKey"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"PRK"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Info"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"outputByteCount"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"SymmetricKey","preciseIdentifier":"s:9CryptoKit12SymmetricKeyV"}],"symbolKind":"method","externalID":"s:9CryptoKit4HKDFV6expand15pseudoRandomKey4info15outputByteCountAA09SymmetricG0Vqd___qd_0_SgSit10Foundation15ContiguousBytesRd__AK12DataProtocolRd_0_r0_lFZ","modules":[{"name":"Crypto"}],"platforms":[{"beta":false,"unavailable":false,"name":"iOS","introducedAt":"14.0","deprecated":false},{"beta":false,"unavailable":false,"name":"macOS","introducedAt":"11.0","deprecated":false},{"beta":false,"unavailable":false,"name":"Mac Catalyst","introducedAt":"14.0","deprecated":false},{"beta":false,"unavailable":false,"name":"tvOS","introducedAt":"14.0","deprecated":false},{"beta":false,"unavailable":false,"name":"watchOS","introducedAt":"7.0","deprecated":false}]},"hierarchy":{"paths":[["doc:\/\/org.swift.docc\/documentation\/Crypto","doc:\/\/org.swift.docc\/documentation\/Crypto\/HKDF"]]},"references":{"doc://org.swift.docc/documentation/Crypto/HKDF/expand(pseudoRandomKey:info:outputByteCount:)":{"role":"symbol","title":"expand(pseudoRandomKey:info:outputByteCount:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"expand"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"PRK"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Info"},{"kind":"text","text":">("},{"kind":"externalParam","text":"pseudoRandomKey"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"PRK"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Info"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"outputByteCount"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"SymmetricKey","preciseIdentifier":"s:9CryptoKit12SymmetricKeyV"}],"abstract":[{"type":"text","text":"The expand function as defined by the specification."},{"type":"text","text":" "},{"type":"text","text":"The goal of the expand function is to expand the pseudorandom key to the desired length."},{"type":"text","text":" "},{"type":"text","text":"Unless required by a specification, it is recommended to use the one-shot “deriveKey” API instead that performs both extraction and expansion."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/Crypto\/HKDF\/expand(pseudoRandomKey:info:outputByteCount:)","kind":"symbol","type":"topic","url":"\/documentation\/crypto\/hkdf\/expand(pseudorandomkey:info:outputbytecount:)"},"doc://org.swift.docc/documentation/Crypto/HKDF":{"role":"symbol","title":"HKDF","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HKDF"}],"abstract":[{"type":"text","text":"The HMAC-based Extract-and-Expand Key Derivation Function (IETF RFC 5869)"},{"type":"text","text":" "},{"type":"text","text":"https:\/\/tools.ietf.org\/html\/rfc5869"}],"identifier":"doc:\/\/org.swift.docc\/documentation\/Crypto\/HKDF","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HKDF"}],"url":"\/documentation\/crypto\/hkdf"},"doc://org.swift.docc/documentation/Crypto":{"role":"collection","title":"Crypto","abstract":[],"identifier":"doc:\/\/org.swift.docc\/documentation\/Crypto","kind":"symbol","type":"topic","url":"\/documentation\/crypto"},"doc://org.swift.docc/documentation/Crypto/SymmetricKey":{"role":"symbol","title":"SymmetricKey","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SymmetricKey"}],"abstract":[{"type":"text","text":"A symmetric key for use with software implementations of cryptographic algorithms."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/Crypto\/SymmetricKey","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SymmetricKey"}],"url":"\/documentation\/crypto\/symmetrickey"}}}