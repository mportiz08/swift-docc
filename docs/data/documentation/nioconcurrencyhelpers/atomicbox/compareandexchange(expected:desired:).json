{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"compareAndExchange"},{"kind":"text","text":"("},{"kind":"externalParam","text":"expected"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:21NIOConcurrencyHelpers9AtomicBoxC1Txmfp"},{"kind":"text","text":", "},{"kind":"externalParam","text":"desired"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:21NIOConcurrencyHelpers9AtomicBoxC1Txmfp"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"True"},{"type":"text","text":" if the exchange occurred, or "},{"type":"codeVoice","code":"False"},{"type":"text","text":" if "},{"type":"codeVoice","code":"expected"},{"type":"text","text":" did not"},{"type":"text","text":" "},{"type":"text","text":"match the current value and so no exchange occurred."}]}]},{"kind":"parameters","parameters":[{"name":"expected","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The value that this object must currently hold for the"},{"type":"text","text":" "},{"type":"text","text":"compare-and-swap to succeed."}]}]},{"name":"desired","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The new value that this object will hold if the compare"},{"type":"text","text":" "},{"type":"text","text":"succeeds."}]}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This implementation conforms to C11’s "},{"type":"codeVoice","code":"atomic_compare_exchange_strong"},{"type":"text","text":". This"},{"type":"text","text":" "},{"type":"text","text":"means that the compare-and-swap will always succeed if "},{"type":"codeVoice","code":"expected"},{"type":"text","text":" is equal to"},{"type":"text","text":" "},{"type":"text","text":"value. Additionally, it uses a "},{"type":"emphasis","inlineContent":[{"type":"text","text":"sequentially consistent ordering"}]},{"type":"text","text":". For more"},{"type":"text","text":" "},{"type":"text","text":"details on atomic memory models, check the documentation for C11’s"},{"type":"text","text":" "},{"type":"codeVoice","code":"stdatomic.h"},{"type":"text","text":"."}]},{"style":"warning","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The implementation of "},{"type":"codeVoice","code":"exchange"},{"type":"text","text":" contains a "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Compare and Exchange loop"}]},{"type":"text","text":", ie. it may busy wait with"},{"type":"text","text":" "},{"type":"text","text":"100% CPU load."}]}],"type":"aside","name":"Warning"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/nioconcurrencyhelpers\/atomicbox\/compareandexchange(expected:desired:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/org.swift.docc\/documentation\/NIOConcurrencyHelpers\/AtomicBox\/compareAndExchange(expected:desired:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Atomically compares the value against "},{"type":"codeVoice","code":"expected"},{"type":"text","text":" and, if they are equal,"},{"type":"text","text":" "},{"type":"text","text":"replaces the value with "},{"type":"codeVoice","code":"desired"},{"type":"text","text":"."}],"kind":"symbol","metadata":{"role":"symbol","title":"compareAndExchange(expected:desired:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"compareAndExchange"},{"kind":"text","text":"("},{"kind":"externalParam","text":"expected"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:21NIOConcurrencyHelpers9AtomicBoxC1Txmfp"},{"kind":"text","text":", "},{"kind":"externalParam","text":"desired"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:21NIOConcurrencyHelpers9AtomicBoxC1Txmfp"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"symbolKind":"method","externalID":"s:21NIOConcurrencyHelpers9AtomicBoxC18compareAndExchange8expected7desiredSbx_xtF","modules":[{"name":"NIOConcurrencyHelpers"}],"platforms":[]},"hierarchy":{"paths":[["doc:\/\/org.swift.docc\/documentation\/NIOConcurrencyHelpers","doc:\/\/org.swift.docc\/documentation\/NIOConcurrencyHelpers\/AtomicBox"]]},"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"AtomicBox is deprecated without replacement because the original implementation doesn't work."}]}],"references":{"doc://org.swift.docc/documentation/NIOConcurrencyHelpers":{"role":"collection","title":"NIOConcurrencyHelpers","abstract":[],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIOConcurrencyHelpers","kind":"symbol","type":"topic","url":"\/documentation\/nioconcurrencyhelpers"},"doc://org.swift.docc/documentation/NIOConcurrencyHelpers/AtomicBox/compareAndExchange(expected:desired:)":{"role":"symbol","title":"compareAndExchange(expected:desired:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"compareAndExchange"},{"kind":"text","text":"("},{"kind":"externalParam","text":"expected"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:21NIOConcurrencyHelpers9AtomicBoxC1Txmfp"},{"kind":"text","text":", "},{"kind":"externalParam","text":"desired"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:21NIOConcurrencyHelpers9AtomicBoxC1Txmfp"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Atomically compares the value against "},{"type":"codeVoice","code":"expected"},{"type":"text","text":" and, if they are equal,"},{"type":"text","text":" "},{"type":"text","text":"replaces the value with "},{"type":"codeVoice","code":"desired"},{"type":"text","text":"."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIOConcurrencyHelpers\/AtomicBox\/compareAndExchange(expected:desired:)","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/nioconcurrencyhelpers\/atomicbox\/compareandexchange(expected:desired:)"},"doc://org.swift.docc/documentation/NIOConcurrencyHelpers/AtomicBox":{"deprecated":true,"role":"symbol","title":"AtomicBox","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomicBox"}],"abstract":[{"type":"codeVoice","code":"AtomicBox"},{"type":"text","text":" is a heap-allocated box which allows lock-free access to an instance of a Swift class."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIOConcurrencyHelpers\/AtomicBox","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AtomicBox"}],"url":"\/documentation\/nioconcurrencyhelpers\/atomicbox"}}}