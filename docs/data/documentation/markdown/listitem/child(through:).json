{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"child"},{"kind":"text","text":"("},{"kind":"externalParam","text":"through"},{"kind":"text","text":" "},{"kind":"internalParam","text":"path"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/org.swift.docc\/documentation\/Markdown\/TypedChildIndexPath","preciseIdentifier":"s:8Markdown19TypedChildIndexPathV","text":"TypedChildIndexPath"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/org.swift.docc\/documentation\/Markdown\/Markup","preciseIdentifier":"s:8Markdown6MarkupP","text":"Markup"},{"kind":"text","text":"?"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, given the following tree:"}]},{"type":"codeListing","syntax":"markdown","code":["Document"," └─ Paragraph","   ├─ Text \"This is \"","   ├─ Emphasis","   │  └─ Text \"emphasized\"","   └─ Text \".\""]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To get the "},{"type":"codeVoice","code":"Text \"emphasized\""},{"type":"text","text":" element, you could provide the following path:"}]},{"type":"codeListing","syntax":"swift","code":["[","  (0, Paragraph.self), \/\/ Document's child 0, a Paragraph element","  (1, Emphasis.self),  \/\/ Paragraph's child 1, an Emphasis element","  (0, Text.self),      \/\/ Emphasis's child 0, the `Text \"emphasized\"` element.","]"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Using a "},{"type":"codeVoice","code":"TypedChildIndexPath"},{"type":"text","text":" without any expected types:"}]},{"type":"codeListing","syntax":"swift","code":["[","  (0, nil),","  (1, nil),","  (0, nil),","]"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"would also provide a match."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"An example of a path that wouldn’t match the "},{"type":"codeVoice","code":"Text \"emphasized\""},{"type":"text","text":" element would be:"}]},{"type":"codeListing","syntax":"swift","code":["[","  (0, Paragraph.self),","  \/\/ The search would fail here because this element","  \/\/ isn't `Strong` but `Emphasized`.","  (1, Strong.self),","  (0, Text.self),","]"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/markdown\/listitem\/child(through:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/org.swift.docc\/documentation\/Markdown\/ListItem\/child(through:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Traverse this markup tree by descending into the child at the index of each path element, returning "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if there is no child at that index or if the expected type for that path element doesn’t match."}],"kind":"symbol","metadata":{"role":"symbol","title":"child(through:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"child"},{"kind":"text","text":"("},{"kind":"externalParam","text":"through"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TypedChildIndexPath","preciseIdentifier":"s:8Markdown19TypedChildIndexPathV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Markup","preciseIdentifier":"s:8Markdown6MarkupP"},{"kind":"text","text":"?"}],"symbolKind":"method","externalID":"s:8Markdown6MarkupPAAE5child7throughAaB_pSgAA19TypedChildIndexPathV_tF::SYNTHESIZED::s:8Markdown8ListItemV","extendedModule":"Markdown","modules":[{"name":"Markdown"}]},"hierarchy":{"paths":[["doc:\/\/org.swift.docc\/documentation\/Markdown","doc:\/\/org.swift.docc\/documentation\/Markdown\/ListItem","doc:\/\/org.swift.docc\/documentation\/Markdown\/ListItem\/Markup-Implementations"]]},"references":{"doc://org.swift.docc/documentation/Markdown/ListItem":{"role":"symbol","title":"ListItem","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ListItem"}],"abstract":[{"type":"text","text":"A list item in an ordered or unordered list."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/Markdown\/ListItem","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ListItem"}],"url":"\/documentation\/markdown\/listitem"},"doc://org.swift.docc/documentation/Markdown/ListItem/child(through:)":{"role":"symbol","title":"child(through:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"child"},{"kind":"text","text":"("},{"kind":"externalParam","text":"through"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TypedChildIndexPath","preciseIdentifier":"s:8Markdown19TypedChildIndexPathV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Markup","preciseIdentifier":"s:8Markdown6MarkupP"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Traverse this markup tree by descending into the child at the index of each path element, returning "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if there is no child at that index or if the expected type for that path element doesn’t match."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/Markdown\/ListItem\/child(through:)","kind":"symbol","type":"topic","url":"\/documentation\/markdown\/listitem\/child(through:)"},"doc://org.swift.docc/documentation/Markdown/ListItem/Markup-Implementations":{"role":"collectionGroup","title":"Markup Implementations","abstract":[],"identifier":"doc:\/\/org.swift.docc\/documentation\/Markdown\/ListItem\/Markup-Implementations","kind":"article","type":"topic","url":"\/documentation\/markdown\/listitem\/markup-implementations"},"doc://org.swift.docc/documentation/Markdown/TypedChildIndexPath":{"role":"symbol","title":"TypedChildIndexPath","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TypedChildIndexPath"}],"abstract":[{"type":"text","text":"A description of a traversal through a markup tree by index and optional expected type."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/Markdown\/TypedChildIndexPath","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TypedChildIndexPath"}],"url":"\/documentation\/markdown\/typedchildindexpath"},"doc://org.swift.docc/documentation/Markdown":{"role":"collection","title":"Markdown","abstract":[],"identifier":"doc:\/\/org.swift.docc\/documentation\/Markdown","kind":"symbol","type":"topic","url":"\/documentation\/markdown"},"doc://org.swift.docc/documentation/Markdown/Markup":{"role":"symbol","title":"Markup","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Markup"}],"abstract":[{"type":"text","text":"A markup element."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/Markdown\/Markup","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Markup"}],"url":"\/documentation\/markdown\/markup"}}}