{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"finish"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/EmbeddedChannel\/LeftOverState","preciseIdentifier":"s:3NIO15EmbeddedChannelC13LeftOverStateO","text":"LeftOverState"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"LeftOverState"},{"type":"text","text":" of the "},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":". If all the inbound and outbound events have been"},{"type":"text","text":" "},{"type":"text","text":"consumed (using "},{"type":"codeVoice","code":"readInbound"},{"type":"text","text":" \/ "},{"type":"codeVoice","code":"readOutbound"},{"type":"text","text":") and there are no pending outbound events (unflushed"},{"type":"text","text":" "},{"type":"text","text":"writes) this will be "},{"type":"codeVoice","code":".clean"},{"type":"text","text":". If there are any unconsumed inbound, outbound, or pending outbound"},{"type":"text","text":" "},{"type":"text","text":"events, the "},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":" will returns those as "},{"type":"codeVoice","code":".leftOvers(inbound:outbound:pendingOutbound:)"},{"type":"text","text":"."}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method will throw if the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" hit any unconsumed errors or if the "},{"type":"codeVoice","code":"close"},{"type":"text","text":" fails. Errors in the"},{"type":"text","text":" "},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":" can be consumed using "},{"type":"codeVoice","code":"throwIfErrorCaught"},{"type":"text","text":"."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/nio\/embeddedchannel\/finish()"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/org.swift.docc\/documentation\/NIO\/EmbeddedChannel\/finish()","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Synchronously closes the "},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":"."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"finish"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"LeftOverState","preciseIdentifier":"s:3NIO15EmbeddedChannelC13LeftOverStateO"}],"title":"finish()","roleHeading":"Instance Method","role":"symbol","symbolKind":"method","externalID":"s:3NIO15EmbeddedChannelC6finishAC13LeftOverStateOyKF","modules":[{"name":"NIO"}]},"hierarchy":{"paths":[["doc:\/\/org.swift.docc\/documentation\/NIO","doc:\/\/org.swift.docc\/documentation\/NIO\/EmbeddedChannel"]]},"references":{"doc://org.swift.docc/documentation/NIO/EmbeddedChannel/LeftOverState":{"role":"symbol","title":"EmbeddedChannel.LeftOverState","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"LeftOverState"}],"abstract":[{"type":"codeVoice","code":"LeftOverState"},{"type":"text","text":" represents any left-over inbound, outbound, and pending outbound events that hit the"},{"type":"text","text":" "},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":" and were not consumed when "},{"type":"codeVoice","code":"finish"},{"type":"text","text":" was called on the "},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":"."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/EmbeddedChannel\/LeftOverState","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"LeftOverState"}],"url":"\/documentation\/nio\/embeddedchannel\/leftoverstate"},"doc://org.swift.docc/documentation/NIO/EmbeddedChannel":{"role":"symbol","title":"EmbeddedChannel","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmbeddedChannel"}],"abstract":[{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":" is a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" implementation that does neither any"},{"type":"text","text":" "},{"type":"text","text":"actual IO nor has a proper eventing mechanism. The prime use-case for"},{"type":"text","text":" "},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":" is in unit tests when you want to feed the inbound events"},{"type":"text","text":" "},{"type":"text","text":"and check the outbound events manually."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/EmbeddedChannel","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EmbeddedChannel"}],"url":"\/documentation\/nio\/embeddedchannel"},"doc://org.swift.docc/documentation/NIO":{"role":"collection","title":"NIO","abstract":[],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO","kind":"symbol","type":"topic","url":"\/documentation\/nio"},"doc://org.swift.docc/documentation/NIO/EmbeddedChannel/finish()":{"role":"symbol","title":"finish()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"finish"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"LeftOverState","preciseIdentifier":"s:3NIO15EmbeddedChannelC13LeftOverStateO"}],"abstract":[{"type":"text","text":"Synchronously closes the "},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":"."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/EmbeddedChannel\/finish()","kind":"symbol","type":"topic","url":"\/documentation\/nio\/embeddedchannel\/finish()"}}}