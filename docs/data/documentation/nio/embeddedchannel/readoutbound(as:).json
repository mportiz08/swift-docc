{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"readOutbound"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"as"},{"kind":"text","text":" "},{"kind":"internalParam","text":"type"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:3NIO15EmbeddedChannelC12readOutbound2asxSgxm_tKlF1TL_xmfp"},{"kind":"text","text":".Type = T.self) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:3NIO15EmbeddedChannelC12readOutbound2asxSgxm_tKlF1TL_xmfp"},{"kind":"text","text":"?"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Data hits the "},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":"’s outbound buffer when data was written using "},{"type":"codeVoice","code":"write"},{"type":"text","text":", then "},{"type":"codeVoice","code":"flush"},{"type":"text","text":"ed, and"},{"type":"text","text":" "},{"type":"text","text":"then travelled the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" all the way too the front. For data to hit the outbound buffer, the very"},{"type":"text","text":" "},{"type":"text","text":"first "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" must have written and flushed it either explicitly (by calling"},{"type":"text","text":" "},{"type":"codeVoice","code":"ChannelHandlerContext.write"},{"type":"text","text":" and "},{"type":"codeVoice","code":"flush"},{"type":"text","text":") or implicitly by not implementing "},{"type":"codeVoice","code":"write"},{"type":"text","text":"\/"},{"type":"codeVoice","code":"flush"},{"type":"text","text":"."}]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Outbound events travel the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" "},{"type":"emphasis","inlineContent":[{"type":"text","text":"back to front"}]},{"type":"text","text":"."}]}],"type":"aside","name":"Note"},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"EmbeddedChannel.writeOutbound"},{"type":"text","text":" will "},{"type":"codeVoice","code":"write"},{"type":"text","text":" data through the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":", starting with last"},{"type":"text","text":" "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"."}]}],"type":"aside","name":"Note"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/nio\/embeddedchannel\/readoutbound(as:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/org.swift.docc\/documentation\/NIO\/EmbeddedChannel\/readOutbound(as:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"If available, this method reads one element of type "},{"type":"codeVoice","code":"T"},{"type":"text","text":" out of the "},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":"’s outbound buffer. If the"},{"type":"text","text":" "},{"type":"text","text":"first element was of a different type than requested, "},{"type":"codeVoice","code":"EmbeddedChannel.WrongTypeError"},{"type":"text","text":" will be thrown, if there"},{"type":"text","text":" "},{"type":"text","text":"are no elements in the outbound buffer, "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" will be returned."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"readOutbound"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"as"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:3NIO15EmbeddedChannelC12readOutbound2asxSgxm_tKlF1TL_xmfp"},{"kind":"text","text":".Type) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:3NIO15EmbeddedChannelC12readOutbound2asxSgxm_tKlF1TL_xmfp"},{"kind":"text","text":"?"}],"title":"readOutbound(as:)","roleHeading":"Instance Method","role":"symbol","symbolKind":"method","externalID":"s:3NIO15EmbeddedChannelC12readOutbound2asxSgxm_tKlF","modules":[{"name":"NIO"}]},"hierarchy":{"paths":[["doc:\/\/org.swift.docc\/documentation\/NIO","doc:\/\/org.swift.docc\/documentation\/NIO\/EmbeddedChannel"]]},"references":{"doc://org.swift.docc/documentation/NIO/EmbeddedChannel/readOutbound(as:)":{"role":"symbol","title":"readOutbound(as:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"readOutbound"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"as"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:3NIO15EmbeddedChannelC12readOutbound2asxSgxm_tKlF1TL_xmfp"},{"kind":"text","text":".Type) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:3NIO15EmbeddedChannelC12readOutbound2asxSgxm_tKlF1TL_xmfp"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"If available, this method reads one element of type "},{"type":"codeVoice","code":"T"},{"type":"text","text":" out of the "},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":"’s outbound buffer. If the"},{"type":"text","text":" "},{"type":"text","text":"first element was of a different type than requested, "},{"type":"codeVoice","code":"EmbeddedChannel.WrongTypeError"},{"type":"text","text":" will be thrown, if there"},{"type":"text","text":" "},{"type":"text","text":"are no elements in the outbound buffer, "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" will be returned."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/EmbeddedChannel\/readOutbound(as:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/embeddedchannel\/readoutbound(as:)"},"doc://org.swift.docc/documentation/NIO":{"role":"collection","title":"NIO","abstract":[],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO","kind":"symbol","type":"topic","url":"\/documentation\/nio"},"doc://org.swift.docc/documentation/NIO/EmbeddedChannel":{"role":"symbol","title":"EmbeddedChannel","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmbeddedChannel"}],"abstract":[{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":" is a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" implementation that does neither any"},{"type":"text","text":" "},{"type":"text","text":"actual IO nor has a proper eventing mechanism. The prime use-case for"},{"type":"text","text":" "},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":" is in unit tests when you want to feed the inbound events"},{"type":"text","text":" "},{"type":"text","text":"and check the outbound events manually."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/EmbeddedChannel","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EmbeddedChannel"}],"url":"\/documentation\/nio\/embeddedchannel"}}}