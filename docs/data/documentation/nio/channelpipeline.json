{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelPipeline"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"Creation-of-a-pipeline","level":1,"type":"heading","text":"Creation of a pipeline"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Each "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" has its own "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" and it is created automatically when a new "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" is created."}]},{"anchor":"How-an-event-flows-in-a-pipeline","level":1,"type":"heading","text":"How an event flows in a pipeline"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The following diagram describes how I\/O events are typically processed by "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"s in a "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"An I\/O event is handled by either a "},{"type":"codeVoice","code":"ChannelInboundHandler"},{"type":"text","text":" or a "},{"type":"codeVoice","code":"ChannelOutboundHandler"},{"type":"text","text":" "},{"type":"text","text":"and is forwarded to the next handler in the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" by calling the event propagation methods defined in"},{"type":"text","text":" "},{"type":"codeVoice","code":"ChannelHandlerContext"},{"type":"text","text":", such as "},{"type":"codeVoice","code":"ChannelHandlerContext.fireChannelRead"},{"type":"text","text":" and"},{"type":"text","text":" "},{"type":"codeVoice","code":"ChannelHandlerContext.write"},{"type":"text","text":"."}]},{"type":"codeListing","syntax":"markdown","code":["                                                   I\/O Request","                                                   via `Channel` or","                                                   `ChannelHandlerContext`","                                                     |"," +---------------------------------------------------+---------------+"," |                           ChannelPipeline         |               |"," |                                TAIL              \\|\/              |"," |    +---------------------+            +-----------+----------+    |"," |    | Inbound Handler  N  |            | Outbound Handler  1  |    |"," |    +----------+----------+            +-----------+----------+    |"," |              \/|\\                                  |               |"," |               |                                  \\|\/              |"," |    +----------+----------+            +-----------+----------+    |"," |    | Inbound Handler N-1 |            | Outbound Handler  2  |    |"," |    +----------+----------+            +-----------+----------+    |"," |              \/|\\                                  .               |"," |               .                                   .               |"," | ChannelHandlerContext.fireIN_EVT() ChannelHandlerContext.OUT_EVT()|"," |        [ method call]                       [method call]         |"," |               .                                   .               |"," |               .                                  \\|\/              |"," |    +----------+----------+            +-----------+----------+    |"," |    | Inbound Handler  2  |            | Outbound Handler M-1 |    |"," |    +----------+----------+            +-----------+----------+    |"," |              \/|\\                                  |               |"," |               |                                  \\|\/              |"," |    +----------+----------+            +-----------+----------+    |"," |    | Inbound Handler  1  |            | Outbound Handler  M  |    |"," |    +----------+----------+            +-----------+----------+    |"," |              \/|\\             HEAD                 |               |"," +---------------+-----------------------------------+---------------+","                 |                                  \\|\/"," +---------------+-----------------------------------+---------------+"," |               |                                   |               |"," |       [ Socket.read ]                    [ Socket.write ]         |"," |                                                                   |"," |  SwiftNIO Internal I\/O Threads (Transport Implementation)         |"," +-------------------------------------------------------------------+"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"An inbound event is handled by the inbound handlers in the head-to-tail direction as shown on the left side of the"},{"type":"text","text":" "},{"type":"text","text":"diagram. An inbound handler usually handles the inbound data generated by the I\/O thread on the bottom of the"},{"type":"text","text":" "},{"type":"text","text":"diagram. The inbound data is often read from a remote peer via the actual input operation such as"},{"type":"text","text":" "},{"type":"codeVoice","code":"Socket.read"},{"type":"text","text":". If an inbound event goes beyond the tail inbound handler, it is discarded"},{"type":"text","text":" "},{"type":"text","text":"silently, or logged if it needs your attention."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"An outbound event is handled by the outbound handlers in the tail-to-head direction as shown on the right side of the"},{"type":"text","text":" "},{"type":"text","text":"diagram. An outbound handler usually generates or transforms the outbound traffic such as write requests."},{"type":"text","text":" "},{"type":"text","text":"If an outbound event goes beyond the head outbound handler, it is handled by an I\/O thread associated with the"},{"type":"text","text":" "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":". The I\/O thread often performs the actual output operation such as "},{"type":"codeVoice","code":"Socket.write"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, let us assume that we created the following pipeline:"}]},{"type":"codeListing","syntax":"markdown","code":["ChannelPipeline p = ...","let future = p.add(name: \"1\", handler: InboundHandlerA()).flatMap {","  p.add(name: \"2\", handler: InboundHandlerB())","}.flatMap {","  p.add(name: \"3\", handler: OutboundHandlerA())","}.flatMap {","  p.add(name: \"4\", handler: OutboundHandlerB())","}.flatMap {","  p.add(name: \"5\", handler: InboundOutboundHandlerX())","}","\/\/ Handle the future as well ...."]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In the example above, a class whose name starts with "},{"type":"codeVoice","code":"Inbound"},{"type":"text","text":" is an inbound handler."},{"type":"text","text":" "},{"type":"text","text":"A class whose name starts with "},{"type":"codeVoice","code":"Outbound"},{"type":"text","text":" is an outbound handler."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In the given example configuration, the handler evaluation order is 1, 2, 3, 4, 5 when an event goes inbound."},{"type":"text","text":" "},{"type":"text","text":"When an event goes outbound, the order is 5, 4, 3, 2, 1.  On top of this principle, "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" skips"},{"type":"text","text":" "},{"type":"text","text":"the evaluation of certain handlers to shorten the stack depth:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"3 and 4 don’t implement "},{"type":"codeVoice","code":"ChannelInboundHandler"},{"type":"text","text":", and therefore the actual evaluation order of an inbound event will be: 1, 2, and 5."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"1 and 2 don’t implement "},{"type":"codeVoice","code":"ChannelOutboundHandler"},{"type":"text","text":", and therefore the actual evaluation order of a outbound event will be: 5, 4, and 3."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If 5 implements both "},{"type":"codeVoice","code":"ChannelInboundHandler"},{"type":"text","text":" and "},{"type":"codeVoice","code":"ChannelOutboundHandler"},{"type":"text","text":", the evaluation order of an inbound and a outbound event could be 125 and 543 respectively."}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note:   Handlers may choose not to propagate messages down the pipeline immediately.  For example a handler may need to wait"},{"type":"text","text":" "},{"type":"text","text":"for additional data before sending a protocol event to the next handler in the pipeline.  Due to this you can’t assume that later handlers"},{"type":"text","text":" "},{"type":"text","text":"in the pipeline will receive the same number of events as were sent, or that events of different types will arrive in the same order."},{"type":"text","text":" "},{"type":"text","text":"For example - a user event could overtake a data event if a handler is aggregating data events before propagating but immediately"},{"type":"text","text":" "},{"type":"text","text":"propagating user events."}]},{"anchor":"Forwarding-an-event-to-the-next-handler","level":1,"type":"heading","text":"Forwarding an event to the next handler"},{"type":"paragraph","inlineContent":[{"type":"text","text":"As you might noticed in the diagram above, a handler has to invoke the event propagation methods in"},{"type":"text","text":" "},{"type":"codeVoice","code":"ChannelHandlerContext"},{"type":"text","text":" to forward an event to its next handler."},{"type":"text","text":" "},{"type":"text","text":"Those methods include:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Inbound event propagation methods defined in "},{"type":"codeVoice","code":"ChannelInboundInvoker"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Outbound event propagation methods defined in "},{"type":"codeVoice","code":"ChannelOutboundInvoker"},{"type":"text","text":"."}]}]}]},{"anchor":"Building-a-pipeline","level":1,"type":"heading","text":"Building a pipeline"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A user is supposed to have one or more "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"s in a "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" to receive I\/O events (e.g. read) and"},{"type":"text","text":" "},{"type":"text","text":"to request I\/O operations (e.g. write and close).  For example, a typical server will have the following handlers"},{"type":"text","text":" "},{"type":"text","text":"in each channel’s pipeline, but your mileage may vary depending on the complexity and characteristics of the"},{"type":"text","text":" "},{"type":"text","text":"protocol and business logic:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Protocol Decoder - translates binary data (e.g. "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":") into a struct \/ class"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Protocol Encoder - translates a struct \/ class into binary data (e.g. "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":")"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Business Logic Handler - performs the actual business logic (e.g. database access)"}]}]}]},{"anchor":"Thread-safety","level":1,"type":"heading","text":"Thread safety"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" can be added or removed at any time because a "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" is thread safe."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/nio\/channelpipeline"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelInboundInvoker","doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelInvoker","doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelOutboundInvoker","doc:\/\/org.swift.docc\/s28CustomDebugStringConvertibleP"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A list of "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"s that handle or intercept inbound events and outbound operations of a"},{"type":"text","text":" "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":". "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" implements an advanced form of the Intercepting Filter pattern"},{"type":"text","text":" "},{"type":"text","text":"to give a user full control over how an event is handled and how the "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"s in a pipeline"},{"type":"text","text":" "},{"type":"text","text":"interact with each other."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelPipeline"}],"title":"ChannelPipeline","roleHeading":"Class","role":"symbol","symbolKind":"class","externalID":"s:3NIO15ChannelPipelineC","modules":[{"name":"NIO"}],"navigatorTitle":[{"kind":"identifier","text":"ChannelPipeline"}]},"hierarchy":{"paths":[["doc:\/\/org.swift.docc\/documentation\/NIO"]]},"topicSections":[{"title":"Structures","identifiers":["doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/SynchronousOperations"]},{"title":"Initializers","identifiers":["doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/init(channel:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/eventLoop","doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/syncOperations"]},{"title":"Instance Methods","identifiers":["doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/addHTTPClientHandlers(position:leftOverBytesStrategy:)","doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/addHTTPClientHandlers(position:leftOverBytesStrategy:withClientUpgrade:)","doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/addHandler(_:name:position:)","doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/addHandlers(_:position:)-6vzfb","doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/addHandlers(_:position:)-ciai","doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/bind(to:promise:)","doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/close(mode:promise:)","doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/configureHTTPServerPipeline(position:withPipeliningAssistance:withServerUpgrade:withErrorHandling:)","doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/connect(to:promise:)","doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/context(handler:)","doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/context(handlerType:)","doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/context(name:)","doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/fireChannelActive()","doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/fireChannelInactive()","doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/fireChannelRead(_:)","doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/fireChannelReadComplete()","doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/fireChannelRegistered()","doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/fireChannelUnregistered()","doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/fireChannelWritabilityChanged()","doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/fireErrorCaught(_:)","doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/fireUserInboundEventTriggered(_:)","doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/flush()","doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/handler(type:)","doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/read()","doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/register(promise:)","doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/removeHandler(_:)","doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/removeHandler(_:promise:)","doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/removeHandler(context:)","doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/removeHandler(context:promise:)","doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/removeHandler(name:)","doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/removeHandler(name:promise:)","doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/triggerUserOutboundEvent(_:promise:)","doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/write(_:promise:)","doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/writeAndFlush(_:promise:)"]},{"title":"Enumerations","identifiers":["doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/Position"]},{"title":"Default Implementations","identifiers":["doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/ChannelOutboundInvoker-Implementations","doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/CustomDebugStringConvertible-Implementations"],"generated":true}],"references":{"doc://org.swift.docc/documentation/NIO/ChannelPipeline/removeHandler(_:)":{"role":"symbol","title":"removeHandler(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"removeHandler"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"RemovableChannelHandler","preciseIdentifier":"s:3NIO23RemovableChannelHandlerP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:3NIO15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Remove a "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" from the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/removeHandler(_:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/channelpipeline\/removehandler(_:)"},"doc://org.swift.docc/documentation/NIO/ChannelPipeline/register(promise:)":{"role":"symbol","title":"register(promise:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"register"},{"kind":"text","text":"("},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoopPromise","preciseIdentifier":"s:3NIO16EventLoopPromiseV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Register on an "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" and so have all its IO handled."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/register(promise:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/channelpipeline\/register(promise:)"},"doc://org.swift.docc/documentation/NIO/ChannelPipeline/SynchronousOperations":{"role":"symbol","title":"ChannelPipeline.SynchronousOperations","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SynchronousOperations"}],"abstract":[{"type":"text","text":"A view of a "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" which may be used to invoke synchronous operations."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/SynchronousOperations","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SynchronousOperations"}],"url":"\/documentation\/nio\/channelpipeline\/synchronousoperations"},"doc://org.swift.docc/documentation/NIO/ChannelPipeline/bind(to:promise:)":{"role":"symbol","title":"bind(to:promise:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"bind"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SocketAddress","preciseIdentifier":"s:3NIO13SocketAddressO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoopPromise","preciseIdentifier":"s:3NIO16EventLoopPromiseV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Bind to a "},{"type":"codeVoice","code":"SocketAddress"},{"type":"text","text":"."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/bind(to:promise:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/channelpipeline\/bind(to:promise:)"},"doc://org.swift.docc/documentation/NIO/ChannelPipeline/fireChannelReadComplete()":{"role":"symbol","title":"fireChannelReadComplete()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fireChannelReadComplete"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Called once there is no more data to read immediately on a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":". Any new data received will be handled later."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/fireChannelReadComplete()","kind":"symbol","type":"topic","url":"\/documentation\/nio\/channelpipeline\/firechannelreadcomplete()"},"doc://org.swift.docc/documentation/NIO/ChannelPipeline":{"role":"symbol","title":"ChannelPipeline","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelPipeline"}],"abstract":[{"type":"text","text":"A list of "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"s that handle or intercept inbound events and outbound operations of a"},{"type":"text","text":" "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":". "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" implements an advanced form of the Intercepting Filter pattern"},{"type":"text","text":" "},{"type":"text","text":"to give a user full control over how an event is handled and how the "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"s in a pipeline"},{"type":"text","text":" "},{"type":"text","text":"interact with each other."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ChannelPipeline"}],"url":"\/documentation\/nio\/channelpipeline"},"doc://org.swift.docc/documentation/NIO/ChannelInvoker":{"role":"symbol","title":"ChannelInvoker","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelInvoker"}],"abstract":[{"type":"text","text":"A protocol that signals that outbound and inbound events are triggered by this invoker."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelInvoker","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ChannelInvoker"}],"url":"\/documentation\/nio\/channelinvoker"},"doc://org.swift.docc/documentation/NIO/ChannelPipeline/read()":{"role":"symbol","title":"read()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"read"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Signal that we want to read from the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" once there is data ready."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/read()","kind":"symbol","type":"topic","url":"\/documentation\/nio\/channelpipeline\/read()"},"doc://org.swift.docc/documentation/NIO/ChannelPipeline/removeHandler(name:promise:)":{"role":"symbol","title":"removeHandler(name:promise:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"removeHandler"},{"kind":"text","text":"("},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoopPromise","preciseIdentifier":"s:3NIO16EventLoopPromiseV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Remove a "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" from the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/removeHandler(name:promise:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/channelpipeline\/removehandler(name:promise:)"},"doc://org.swift.docc/documentation/NIO/ChannelPipeline/write(_:promise:)":{"role":"symbol","title":"write(_:promise:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"write"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"NIOAny","preciseIdentifier":"s:3NIO6NIOAnyV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoopPromise","preciseIdentifier":"s:3NIO16EventLoopPromiseV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Write data to the remote peer."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/write(_:promise:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/channelpipeline\/write(_:promise:)"},"doc://org.swift.docc/documentation/NIO/ChannelPipeline/removeHandler(name:)":{"role":"symbol","title":"removeHandler(name:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"removeHandler"},{"kind":"text","text":"("},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:3NIO15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Remove a "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" from the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/removeHandler(name:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/channelpipeline\/removehandler(name:)"},"doc://org.swift.docc/documentation/NIO/ChannelPipeline/syncOperations":{"role":"symbol","title":"syncOperations","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"syncOperations"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SynchronousOperations","preciseIdentifier":"s:3NIO15ChannelPipelineC21SynchronousOperationsV"}],"abstract":[{"type":"text","text":"Returns a view of operations which can be performed synchronously on this pipeline. All"},{"type":"text","text":" "},{"type":"text","text":"operations "},{"type":"strong","inlineContent":[{"type":"text","text":"must"}]},{"type":"text","text":" be called on the event loop."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/syncOperations","kind":"symbol","type":"topic","url":"\/documentation\/nio\/channelpipeline\/syncoperations"},"doc://org.swift.docc/documentation/NIO":{"role":"collection","title":"NIO","abstract":[],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO","kind":"symbol","type":"topic","url":"\/documentation\/nio"},"doc://org.swift.docc/documentation/NIO/ChannelPipeline/fireChannelRegistered()":{"role":"symbol","title":"fireChannelRegistered()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fireChannelRegistered"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Called once a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" was registered to its "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" and so IO will be processed."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/fireChannelRegistered()","kind":"symbol","type":"topic","url":"\/documentation\/nio\/channelpipeline\/firechannelregistered()"},"doc://org.swift.docc/documentation/NIO/ChannelPipeline/handler(type:)":{"role":"symbol","title":"handler(type:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"handler"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Handler"},{"kind":"text","text":">("},{"kind":"externalParam","text":"type"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Handler","preciseIdentifier":"s:3NIO15ChannelPipelineC7handler4typeAA15EventLoopFutureCyxGxm_tAA0B7HandlerRzlF0I0L_xmfp"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:3NIO15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Handler","preciseIdentifier":"s:3NIO15ChannelPipelineC7handler4typeAA15EventLoopFutureCyxGxm_tAA0B7HandlerRzlF0I0L_xmfp"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Returns the first "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" of the given type."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/handler(type:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/channelpipeline\/handler(type:)"},"doc://org.swift.docc/documentation/NIO/ChannelPipeline/eventLoop":{"role":"symbol","title":"eventLoop","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"eventLoop"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoop","preciseIdentifier":"s:3NIO9EventLoopP"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" that is used by the underlying "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/eventLoop","kind":"symbol","type":"topic","url":"\/documentation\/nio\/channelpipeline\/eventloop"},"doc://org.swift.docc/documentation/NIO/ChannelPipeline/addHandlers(_:position:)-ciai":{"role":"symbol","title":"addHandlers(_:position:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addHandlers"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"ChannelHandler","preciseIdentifier":"s:3NIO14ChannelHandlerP"},{"kind":"text","text":"..., "},{"kind":"externalParam","text":"position"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelPipeline","preciseIdentifier":"s:3NIO15ChannelPipelineC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Position","preciseIdentifier":"s:3NIO15ChannelPipelineC8PositionO"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:3NIO15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Adds the provided channel handlers to the pipeline in the order given, taking account"},{"type":"text","text":" "},{"type":"text","text":"of the behaviour of "},{"type":"codeVoice","code":"ChannelHandler.add(first:)"},{"type":"text","text":"."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/addHandlers(_:position:)-ciai","kind":"symbol","type":"topic","url":"\/documentation\/nio\/channelpipeline\/addhandlers(_:position:)-ciai"},"doc://org.swift.docc/documentation/NIO/ChannelOutboundInvoker":{"role":"symbol","title":"ChannelOutboundInvoker","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelOutboundInvoker"}],"abstract":[{"type":"text","text":"Allows users to invoke an “outbound” operation related to a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" that will flow through the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" until"},{"type":"text","text":" "},{"type":"text","text":"it will finally be executed by the the "},{"type":"codeVoice","code":"ChannelCore"},{"type":"text","text":" implementation."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelOutboundInvoker","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ChannelOutboundInvoker"}],"url":"\/documentation\/nio\/channeloutboundinvoker"},"doc://org.swift.docc/documentation/NIO/ChannelPipeline/init(channel:)":{"role":"symbol","title":"init(channel:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"channel"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Channel","preciseIdentifier":"s:3NIO7ChannelP"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Create "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" for a given "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":". This method should never be called by the end-user"},{"type":"text","text":" "},{"type":"text","text":"directly: it is only intended for use with custom "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" implementations. Users should always use"},{"type":"text","text":" "},{"type":"codeVoice","code":"channel.pipeline"},{"type":"text","text":" to access the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" for a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/init(channel:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/channelpipeline\/init(channel:)"},"doc://org.swift.docc/documentation/NIO/ChannelPipeline/fireChannelInactive()":{"role":"symbol","title":"fireChannelInactive()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fireChannelInactive"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Called once a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" becomes inactive."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/fireChannelInactive()","kind":"symbol","type":"topic","url":"\/documentation\/nio\/channelpipeline\/firechannelinactive()"},"doc://org.swift.docc/documentation/NIO/ChannelPipeline/CustomDebugStringConvertible-Implementations":{"role":"collectionGroup","title":"CustomDebugStringConvertible Implementations","abstract":[],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/CustomDebugStringConvertible-Implementations","kind":"article","type":"topic","url":"\/documentation\/nio\/channelpipeline\/customdebugstringconvertible-implementations"},"doc://org.swift.docc/documentation/NIO/ChannelPipeline/connect(to:promise:)":{"role":"symbol","title":"connect(to:promise:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"connect"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SocketAddress","preciseIdentifier":"s:3NIO13SocketAddressO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoopPromise","preciseIdentifier":"s:3NIO16EventLoopPromiseV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Connect to a "},{"type":"codeVoice","code":"SocketAddress"},{"type":"text","text":"."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/connect(to:promise:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/channelpipeline\/connect(to:promise:)"},"doc://org.swift.docc/s28CustomDebugStringConvertibleP":{"type":"unresolvable","title":"Swift.CustomDebugStringConvertible","identifier":"doc:\/\/org.swift.docc\/s28CustomDebugStringConvertibleP"},"doc://org.swift.docc/documentation/NIO/ChannelInboundInvoker":{"role":"symbol","title":"ChannelInboundInvoker","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelInboundInvoker"}],"abstract":[{"type":"text","text":"Fire inbound events related to a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" through the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" until its end is reached or it’s consumed by a "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelInboundInvoker","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ChannelInboundInvoker"}],"url":"\/documentation\/nio\/channelinboundinvoker"},"doc://org.swift.docc/documentation/NIO/ChannelPipeline/addHTTPClientHandlers(position:leftOverBytesStrategy:)":{"role":"symbol","title":"addHTTPClientHandlers(position:leftOverBytesStrategy:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addHTTPClientHandlers"},{"kind":"text","text":"("},{"kind":"externalParam","text":"position"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Position","preciseIdentifier":"s:3NIO15ChannelPipelineC8PositionO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"leftOverBytesStrategy"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"RemoveAfterUpgradeStrategy","preciseIdentifier":"s:8NIOHTTP126RemoveAfterUpgradeStrategyO"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:3NIO15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Configure a "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" for use as a HTTP client."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/addHTTPClientHandlers(position:leftOverBytesStrategy:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/channelpipeline\/addhttpclienthandlers(position:leftoverbytesstrategy:)"},"doc://org.swift.docc/documentation/NIO/ChannelPipeline/configureHTTPServerPipeline(position:withPipeliningAssistance:withServerUpgrade:withErrorHandling:)":{"role":"symbol","title":"configureHTTPServerPipeline(position:withPipeliningAssistance:withServerUpgrade:withErrorHandling:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"configureHTTPServerPipeline"},{"kind":"text","text":"("},{"kind":"externalParam","text":"position"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelPipeline","preciseIdentifier":"s:3NIO15ChannelPipelineC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Position","preciseIdentifier":"s:3NIO15ChannelPipelineC8PositionO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"withPipeliningAssistance"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"kind":"externalParam","text":"withServerUpgrade"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NIOHTTPServerUpgradeConfiguration","preciseIdentifier":"s:8NIOHTTP133NIOHTTPServerUpgradeConfigurationa"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"withErrorHandling"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:3NIO15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Configure a "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" for use as a HTTP server."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/configureHTTPServerPipeline(position:withPipeliningAssistance:withServerUpgrade:withErrorHandling:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/channelpipeline\/configurehttpserverpipeline(position:withpipeliningassistance:withserverupgrade:witherrorhandling:)"},"doc://org.swift.docc/documentation/NIO/ChannelPipeline/context(handlerType:)":{"role":"symbol","title":"context(handlerType:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"context"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Handler"},{"kind":"text","text":">("},{"kind":"externalParam","text":"handlerType"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Handler","preciseIdentifier":"s:3NIO15ChannelPipelineC7context11handlerTypeAA15EventLoopFutureCyAA0B14HandlerContextCGxm_tAA0bJ0RzlF0J0L_xmfp"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:3NIO15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:3NIO21ChannelHandlerContextC"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Returns the "},{"type":"codeVoice","code":"ChannelHandlerContext"},{"type":"text","text":" that belongs to a "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" of the given type."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/context(handlerType:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/channelpipeline\/context(handlertype:)"},"doc://org.swift.docc/documentation/NIO/ChannelPipeline/context(name:)":{"role":"symbol","title":"context(name:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"context"},{"kind":"text","text":"("},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:3NIO15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:3NIO21ChannelHandlerContextC"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Returns the "},{"type":"codeVoice","code":"ChannelHandlerContext"},{"type":"text","text":" that belongs to a "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/context(name:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/channelpipeline\/context(name:)"},"doc://org.swift.docc/documentation/NIO/ChannelPipeline/flush()":{"role":"symbol","title":"flush()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"flush"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Flush data that was previously written via "},{"type":"codeVoice","code":"write"},{"type":"text","text":" to the remote peer."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/flush()","kind":"symbol","type":"topic","url":"\/documentation\/nio\/channelpipeline\/flush()"},"doc://org.swift.docc/documentation/NIO/ChannelPipeline/triggerUserOutboundEvent(_:promise:)":{"role":"symbol","title":"triggerUserOutboundEvent(_:promise:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"triggerUserOutboundEvent"},{"kind":"text","text":"("},{"kind":"keyword","text":"Any"},{"kind":"text","text":", "},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoopPromise","preciseIdentifier":"s:3NIO16EventLoopPromiseV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Trigger a custom user outbound event which will flow through the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/triggerUserOutboundEvent(_:promise:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/channelpipeline\/triggeruseroutboundevent(_:promise:)"},"doc://org.swift.docc/documentation/NIO/ChannelPipeline/addHandler(_:name:position:)":{"role":"symbol","title":"addHandler(_:name:position:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addHandler"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"ChannelHandler","preciseIdentifier":"s:3NIO14ChannelHandlerP"},{"kind":"text","text":", "},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"position"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelPipeline","preciseIdentifier":"s:3NIO15ChannelPipelineC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Position","preciseIdentifier":"s:3NIO15ChannelPipelineC8PositionO"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:3NIO15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Add a "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" to the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/addHandler(_:name:position:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/channelpipeline\/addhandler(_:name:position:)"},"doc://org.swift.docc/documentation/NIO/ChannelPipeline/fireChannelWritabilityChanged()":{"role":"symbol","title":"fireChannelWritabilityChanged()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fireChannelWritabilityChanged"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Called when a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"’s writable state changes."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/fireChannelWritabilityChanged()","kind":"symbol","type":"topic","url":"\/documentation\/nio\/channelpipeline\/firechannelwritabilitychanged()"},"doc://org.swift.docc/documentation/NIO/ChannelPipeline/fireChannelActive()":{"role":"symbol","title":"fireChannelActive()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fireChannelActive"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Called once a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" becomes active."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/fireChannelActive()","kind":"symbol","type":"topic","url":"\/documentation\/nio\/channelpipeline\/firechannelactive()"},"doc://org.swift.docc/documentation/NIO/ChannelPipeline/fireChannelUnregistered()":{"role":"symbol","title":"fireChannelUnregistered()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fireChannelUnregistered"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Called once a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" was unregistered from its "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" which means no IO will be handled for a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" anymore."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/fireChannelUnregistered()","kind":"symbol","type":"topic","url":"\/documentation\/nio\/channelpipeline\/firechannelunregistered()"},"doc://org.swift.docc/documentation/NIO/ChannelPipeline/close(mode:promise:)":{"role":"symbol","title":"close(mode:promise:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"close"},{"kind":"text","text":"("},{"kind":"externalParam","text":"mode"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CloseMode","preciseIdentifier":"s:3NIO9CloseModeO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoopPromise","preciseIdentifier":"s:3NIO16EventLoopPromiseV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Close the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" and so the connection if one exists."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/close(mode:promise:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/channelpipeline\/close(mode:promise:)"},"doc://org.swift.docc/documentation/NIO/ChannelPipeline/writeAndFlush(_:promise:)":{"role":"symbol","title":"writeAndFlush(_:promise:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"writeAndFlush"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"NIOAny","preciseIdentifier":"s:3NIO6NIOAnyV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoopPromise","preciseIdentifier":"s:3NIO16EventLoopPromiseV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Shortcut for calling "},{"type":"codeVoice","code":"write"},{"type":"text","text":" and "},{"type":"codeVoice","code":"flush"},{"type":"text","text":"."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/writeAndFlush(_:promise:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/channelpipeline\/writeandflush(_:promise:)"},"doc://org.swift.docc/documentation/NIO/ChannelPipeline/fireChannelRead(_:)":{"role":"symbol","title":"fireChannelRead(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fireChannelRead"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"NIOAny","preciseIdentifier":"s:3NIO6NIOAnyV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Called once there is some data read for a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" that needs processing."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/fireChannelRead(_:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/channelpipeline\/firechannelread(_:)"},"doc://org.swift.docc/documentation/NIO/ChannelPipeline/addHTTPClientHandlers(position:leftOverBytesStrategy:withClientUpgrade:)":{"role":"symbol","title":"addHTTPClientHandlers(position:leftOverBytesStrategy:withClientUpgrade:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addHTTPClientHandlers"},{"kind":"text","text":"("},{"kind":"externalParam","text":"position"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Position","preciseIdentifier":"s:3NIO15ChannelPipelineC8PositionO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"leftOverBytesStrategy"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"RemoveAfterUpgradeStrategy","preciseIdentifier":"s:8NIOHTTP126RemoveAfterUpgradeStrategyO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"withClientUpgrade"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NIOHTTPClientUpgradeConfiguration","preciseIdentifier":"s:8NIOHTTP133NIOHTTPClientUpgradeConfigurationa"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:3NIO15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Configure a "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" for use as a HTTP client with a client upgrader configuration."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/addHTTPClientHandlers(position:leftOverBytesStrategy:withClientUpgrade:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/channelpipeline\/addhttpclienthandlers(position:leftoverbytesstrategy:withclientupgrade:)"},"doc://org.swift.docc/documentation/NIO/ChannelPipeline/context(handler:)":{"role":"symbol","title":"context(handler:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"context"},{"kind":"text","text":"("},{"kind":"externalParam","text":"handler"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelHandler","preciseIdentifier":"s:3NIO14ChannelHandlerP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:3NIO15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:3NIO21ChannelHandlerContextC"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Returns the "},{"type":"codeVoice","code":"ChannelHandlerContext"},{"type":"text","text":" that belongs to a "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/context(handler:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/channelpipeline\/context(handler:)"},"doc://org.swift.docc/documentation/NIO/ChannelPipeline/removeHandler(_:promise:)":{"role":"symbol","title":"removeHandler(_:promise:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"removeHandler"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"RemovableChannelHandler","preciseIdentifier":"s:3NIO23RemovableChannelHandlerP"},{"kind":"text","text":", "},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoopPromise","preciseIdentifier":"s:3NIO16EventLoopPromiseV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Remove a "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" from the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/removeHandler(_:promise:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/channelpipeline\/removehandler(_:promise:)"},"doc://org.swift.docc/documentation/NIO/ChannelPipeline/addHandlers(_:position:)-6vzfb":{"role":"symbol","title":"addHandlers(_:position:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addHandlers"},{"kind":"text","text":"(["},{"kind":"typeIdentifier","text":"ChannelHandler","preciseIdentifier":"s:3NIO14ChannelHandlerP"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"position"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelPipeline","preciseIdentifier":"s:3NIO15ChannelPipelineC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Position","preciseIdentifier":"s:3NIO15ChannelPipelineC8PositionO"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:3NIO15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Adds the provided channel handlers to the pipeline in the order given, taking account"},{"type":"text","text":" "},{"type":"text","text":"of the behaviour of "},{"type":"codeVoice","code":"ChannelHandler.add(first:)"},{"type":"text","text":"."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/addHandlers(_:position:)-6vzfb","kind":"symbol","type":"topic","url":"\/documentation\/nio\/channelpipeline\/addhandlers(_:position:)-6vzfb"},"doc://org.swift.docc/documentation/NIO/ChannelPipeline/ChannelOutboundInvoker-Implementations":{"role":"collectionGroup","title":"ChannelOutboundInvoker Implementations","abstract":[],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/ChannelOutboundInvoker-Implementations","kind":"article","type":"topic","url":"\/documentation\/nio\/channelpipeline\/channeloutboundinvoker-implementations"},"doc://org.swift.docc/documentation/NIO/ChannelPipeline/fireErrorCaught(_:)":{"role":"symbol","title":"fireErrorCaught(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fireErrorCaught"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Called when an inbound operation "},{"type":"codeVoice","code":"Error"},{"type":"text","text":" was caught."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/fireErrorCaught(_:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/channelpipeline\/fireerrorcaught(_:)"},"doc://org.swift.docc/documentation/NIO/ChannelPipeline/Position":{"role":"symbol","title":"ChannelPipeline.Position","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Position"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"Position"},{"type":"text","text":" within the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" used to insert handlers into the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/Position","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Position"}],"url":"\/documentation\/nio\/channelpipeline\/position"},"doc://org.swift.docc/documentation/NIO/ChannelPipeline/fireUserInboundEventTriggered(_:)":{"role":"symbol","title":"fireUserInboundEventTriggered(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fireUserInboundEventTriggered"},{"kind":"text","text":"("},{"kind":"keyword","text":"Any"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Trigger a custom user inbound event which will flow through the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/fireUserInboundEventTriggered(_:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/channelpipeline\/fireuserinboundeventtriggered(_:)"},"doc://org.swift.docc/documentation/NIO/ChannelPipeline/removeHandler(context:)":{"role":"symbol","title":"removeHandler(context:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"removeHandler"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:3NIO21ChannelHandlerContextC"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:3NIO15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Remove a "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" from the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/removeHandler(context:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/channelpipeline\/removehandler(context:)"},"doc://org.swift.docc/documentation/NIO/ChannelPipeline/removeHandler(context:promise:)":{"role":"symbol","title":"removeHandler(context:promise:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"removeHandler"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:3NIO21ChannelHandlerContextC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoopPromise","preciseIdentifier":"s:3NIO16EventLoopPromiseV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Remove a "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" from the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelPipeline\/removeHandler(context:promise:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/channelpipeline\/removehandler(context:promise:)"}}}