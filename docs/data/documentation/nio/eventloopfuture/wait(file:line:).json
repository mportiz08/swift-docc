{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"wait"},{"kind":"text","text":"("},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":" = "},{"kind":"keyword","text":"#file"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":" = "},{"kind":"keyword","text":"#line"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:3NIO15EventLoopFutureC5Valuexmfp"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The value of the "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" when it completes."}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" resolves with a value, that value is returned from "},{"type":"codeVoice","code":"wait()"},{"type":"text","text":". If"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" resolves with an error, that error will be thrown instead."},{"type":"text","text":" "},{"type":"codeVoice","code":"wait()"},{"type":"text","text":" will block whatever thread it is called on, so it must not be called on event loop"},{"type":"text","text":" "},{"type":"text","text":"threads: it is primarily useful for testing, or for building interfaces between blocking"},{"type":"text","text":" "},{"type":"text","text":"and non-blocking code."}]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The error value of the "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" if it errors."}]}],"type":"aside","name":"Throws"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/nio\/eventloopfuture\/wait(file:line:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/wait(file:line:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Wait for the resolution of this "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" by blocking the current thread until it"},{"type":"text","text":" "},{"type":"text","text":"resolves."}],"kind":"symbol","metadata":{"role":"symbol","title":"wait(file:line:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"wait"},{"kind":"text","text":"("},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:3NIO15EventLoopFutureC5Valuexmfp"}],"symbolKind":"method","externalID":"s:3NIO15EventLoopFutureC4wait4file4linexs12StaticStringV_SutKF","extendedModule":"NIO","modules":[{"name":"NIO"}]},"hierarchy":{"paths":[["doc:\/\/org.swift.docc\/documentation\/NIO","doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture"]]},"references":{"doc://org.swift.docc/documentation/NIO/EventLoopFuture/wait(file:line:)":{"role":"symbol","title":"wait(file:line:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"wait"},{"kind":"text","text":"("},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:3NIO15EventLoopFutureC5Valuexmfp"}],"abstract":[{"type":"text","text":"Wait for the resolution of this "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" by blocking the current thread until it"},{"type":"text","text":" "},{"type":"text","text":"resolves."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/wait(file:line:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/eventloopfuture\/wait(file:line:)"},"doc://org.swift.docc/documentation/NIO":{"role":"collection","title":"NIO","abstract":[],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO","kind":"symbol","type":"topic","url":"\/documentation\/nio"},"doc://org.swift.docc/documentation/NIO/EventLoopFuture":{"role":"symbol","title":"EventLoopFuture","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFuture"}],"abstract":[{"type":"text","text":"Holder for a result that will be provided later."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EventLoopFuture"}],"url":"\/documentation\/nio\/eventloopfuture"}}}