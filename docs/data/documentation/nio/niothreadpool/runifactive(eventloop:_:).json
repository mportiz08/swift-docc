{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"runIfActive"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"eventLoop"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoop","preciseIdentifier":"s:3NIO9EventLoopP","text":"EventLoop"},{"kind":"text","text":", "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"body"},{"kind":"text","text":": "},{"kind":"attribute","text":"@escaping"},{"kind":"text","text":" () "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:3NIO13NIOThreadPoolC11runIfActive9eventLoop_AA05EventH6FutureCyxGAA0iH0_p_xyKctlF1TL_xmfp"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture","preciseIdentifier":"s:3NIO15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:3NIO13NIOThreadPoolC11runIfActive9eventLoop_AA05EventH6FutureCyxGAA0iH0_p_xyKctlF1TL_xmfp"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" of "},{"type":"codeVoice","code":"promise"},{"type":"text","text":" fulfilled with the result (or error) of the passed closure."}]}]},{"kind":"parameters","parameters":[{"name":"eventLoop","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" the returned "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" will fire on."}]}]},{"name":"body","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The closure which performs some blocking work to be done on the thread pool."}]}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/nio\/niothreadpool\/runifactive(eventloop:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/org.swift.docc\/documentation\/NIO\/NIOThreadPool\/runIfActive(eventLoop:_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Runs the submitted closure if the thread pool is still active, otherwise fails the promise."},{"type":"text","text":" "},{"type":"text","text":"The closure will be run on the thread pool so can do blocking work."}],"kind":"symbol","metadata":{"role":"symbol","title":"runIfActive(eventLoop:_:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"runIfActive"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"eventLoop"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoop","preciseIdentifier":"s:3NIO9EventLoopP"},{"kind":"text","text":", () "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:3NIO13NIOThreadPoolC11runIfActive9eventLoop_AA05EventH6FutureCyxGAA0iH0_p_xyKctlF1TL_xmfp"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:3NIO15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:3NIO13NIOThreadPoolC11runIfActive9eventLoop_AA05EventH6FutureCyxGAA0iH0_p_xyKctlF1TL_xmfp"},{"kind":"text","text":">"}],"symbolKind":"method","externalID":"s:3NIO13NIOThreadPoolC11runIfActive9eventLoop_AA05EventH6FutureCyxGAA0iH0_p_xyKctlF","extendedModule":"NIO","modules":[{"name":"NIO"}]},"hierarchy":{"paths":[["doc:\/\/org.swift.docc\/documentation\/NIO","doc:\/\/org.swift.docc\/documentation\/NIO\/NIOThreadPool"]]},"references":{"doc://org.swift.docc/documentation/NIO/EventLoopFuture":{"role":"symbol","title":"EventLoopFuture","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFuture"}],"abstract":[{"type":"text","text":"Holder for a result that will be provided later."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EventLoopFuture"}],"url":"\/documentation\/nio\/eventloopfuture"},"doc://org.swift.docc/documentation/NIO/EventLoop":{"role":"symbol","title":"EventLoop","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoop"}],"abstract":[{"type":"text","text":"An EventLoop processes IO \/ tasks in an endless loop for "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"s until itâ€™s closed."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoop","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EventLoop"}],"url":"\/documentation\/nio\/eventloop"},"doc://org.swift.docc/documentation/NIO":{"role":"collection","title":"NIO","abstract":[],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO","kind":"symbol","type":"topic","url":"\/documentation\/nio"},"doc://org.swift.docc/documentation/NIO/NIOThreadPool":{"role":"symbol","title":"NIOThreadPool","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOThreadPool"}],"abstract":[{"type":"text","text":"A thread pool that should be used if some (kernel thread) blocking work"},{"type":"text","text":" "},{"type":"text","text":"needs to be performed for which no non-blocking API exists."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/NIOThreadPool","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"NIOThreadPool"}],"url":"\/documentation\/nio\/niothreadpool"},"doc://org.swift.docc/documentation/NIO/NIOThreadPool/runIfActive(eventLoop:_:)":{"role":"symbol","title":"runIfActive(eventLoop:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"runIfActive"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"eventLoop"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoop","preciseIdentifier":"s:3NIO9EventLoopP"},{"kind":"text","text":", () "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:3NIO13NIOThreadPoolC11runIfActive9eventLoop_AA05EventH6FutureCyxGAA0iH0_p_xyKctlF1TL_xmfp"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:3NIO15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:3NIO13NIOThreadPoolC11runIfActive9eventLoop_AA05EventH6FutureCyxGAA0iH0_p_xyKctlF1TL_xmfp"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Runs the submitted closure if the thread pool is still active, otherwise fails the promise."},{"type":"text","text":" "},{"type":"text","text":"The closure will be run on the thread pool so can do blocking work."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/NIOThreadPool\/runIfActive(eventLoop:_:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/niothreadpool\/runifactive(eventloop:_:)"}}}