{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"childChannelInitializer"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"initializer"},{"kind":"text","text":": "},{"kind":"attribute","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/Channel","preciseIdentifier":"s:3NIO7ChannelP","text":"Channel"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture","preciseIdentifier":"s:3NIO15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Self"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"initializer","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that initializes the provided "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"."}]}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"style":"warning","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"initializer"},{"type":"text","text":" will be invoked once for every accepted connection. Therefore itâ€™s usually the"},{"type":"text","text":" "},{"type":"text","text":"right choice to instantiate stateful "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"s within the closure to make sure they are not"},{"type":"text","text":" "},{"type":"text","text":"accidentally shared across "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"s. There are expert use-cases where stateful handler need to be"},{"type":"text","text":" "},{"type":"text","text":"shared across "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"s in which case the user is responsible to synchronise the state access"},{"type":"text","text":" "},{"type":"text","text":"appropriately."}]}],"type":"aside","name":"Warning"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The accepted "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" will operate on "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" as inbound and "},{"type":"codeVoice","code":"IOData"},{"type":"text","text":" as outbound messages."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/nio\/serverbootstrap\/childchannelinitializer(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/org.swift.docc\/documentation\/NIO\/ServerBootstrap\/childChannelInitializer(_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Initialize the accepted "},{"type":"codeVoice","code":"SocketChannel"},{"type":"text","text":"s with "},{"type":"codeVoice","code":"initializer"},{"type":"text","text":". The most common task in initializer is to add"},{"type":"text","text":" "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"s to the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":". Note that if the "},{"type":"codeVoice","code":"initializer"},{"type":"text","text":" fails then the error will be"},{"type":"text","text":" "},{"type":"text","text":"fired in the "},{"type":"emphasis","inlineContent":[{"type":"text","text":"parent"}]},{"type":"text","text":" channel."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"childChannelInitializer"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Channel","preciseIdentifier":"s:3NIO7ChannelP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:3NIO15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Self"}],"title":"childChannelInitializer(_:)","roleHeading":"Instance Method","role":"symbol","symbolKind":"method","externalID":"s:3NIO15ServerBootstrapC23childChannelInitializeryACXDAA15EventLoopFutureCyytGAA0E0_pcF","modules":[{"name":"NIO"}]},"hierarchy":{"paths":[["doc:\/\/org.swift.docc\/documentation\/NIO","doc:\/\/org.swift.docc\/documentation\/NIO\/ServerBootstrap"]]},"references":{"doc://org.swift.docc/documentation/NIO/ServerBootstrap/childChannelInitializer(_:)":{"role":"symbol","title":"childChannelInitializer(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"childChannelInitializer"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Channel","preciseIdentifier":"s:3NIO7ChannelP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:3NIO15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"type":"text","text":"Initialize the accepted "},{"type":"codeVoice","code":"SocketChannel"},{"type":"text","text":"s with "},{"type":"codeVoice","code":"initializer"},{"type":"text","text":". The most common task in initializer is to add"},{"type":"text","text":" "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"s to the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":". Note that if the "},{"type":"codeVoice","code":"initializer"},{"type":"text","text":" fails then the error will be"},{"type":"text","text":" "},{"type":"text","text":"fired in the "},{"type":"emphasis","inlineContent":[{"type":"text","text":"parent"}]},{"type":"text","text":" channel."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/ServerBootstrap\/childChannelInitializer(_:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/serverbootstrap\/childchannelinitializer(_:)"},"doc://org.swift.docc/documentation/NIO/ServerBootstrap":{"role":"symbol","title":"ServerBootstrap","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ServerBootstrap"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"ServerBootstrap"},{"type":"text","text":" is an easy way to bootstrap a "},{"type":"codeVoice","code":"ServerSocketChannel"},{"type":"text","text":" when creating network servers."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/ServerBootstrap","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ServerBootstrap"}],"url":"\/documentation\/nio\/serverbootstrap"},"doc://org.swift.docc/documentation/NIO":{"role":"collection","title":"NIO","abstract":[],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO","kind":"symbol","type":"topic","url":"\/documentation\/nio"},"doc://org.swift.docc/documentation/NIO/Channel":{"role":"symbol","title":"Channel","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Channel"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" is easiest thought of as a network socket. But it can be anything that is capable of I\/O operations such"},{"type":"text","text":" "},{"type":"text","text":"as read, write, connect, and bind."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/Channel","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Channel"}],"url":"\/documentation\/nio\/channel"},"doc://org.swift.docc/documentation/NIO/EventLoopFuture":{"role":"symbol","title":"EventLoopFuture","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFuture"}],"abstract":[{"type":"text","text":"Holder for a result that will be provided later."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EventLoopFuture"}],"url":"\/documentation\/nio\/eventloopfuture"}}}