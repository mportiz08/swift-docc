{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOAny"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The most important use-cases for "},{"type":"codeVoice","code":"NIOAny"},{"type":"text","text":" are values travelling through the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" whose type can’t"},{"type":"text","text":" "},{"type":"text","text":"be calculated at compile time. For example:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"the "},{"type":"codeVoice","code":"channelRead"},{"type":"text","text":" of any "},{"type":"codeVoice","code":"ChannelInboundHandler"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"the "},{"type":"codeVoice","code":"write"},{"type":"text","text":" method of a "},{"type":"codeVoice","code":"ChannelOutboundHandler"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The abstraction that delivers a "},{"type":"codeVoice","code":"NIOAny"},{"type":"text","text":" to user code must provide a mechanism to unwrap a "},{"type":"codeVoice","code":"NIOAny"},{"type":"text","text":" as a"},{"type":"text","text":" "},{"type":"text","text":"certain type known at run-time. Canonical example:"}]},{"type":"codeListing","syntax":"markdown","code":["class SandwichHandler: ChannelInboundHandler {","    typealias InboundIn = Bacon \/* we expected to be delivered `Bacon` ... *\/","    typealias InboundOut = Sandwich \/* ... and we will make and deliver a `Sandwich` from that *\/","","    func channelRead(context: ChannelHandlerContext, data: NIOAny) {","         \/* we receive the `Bacon` as a `NIOAny` as at compile-time the exact configuration of the channel","            pipeline can't be computed. The pipeline can't be computed at compile time as it can change","            dynamically at run-time. Yet, we assert that in any configuration the channel handler before","            `SandwichHandler` does actually send us a stream of `Bacon`.","         *\/","         let bacon = self.unwrapInboundIn(data) \/* `Bacon` or crash *\/","         let sandwich = makeSandwich(bacon)","         context.fireChannelRead(self.wrapInboundOut(sandwich)) \/* as promised we deliver a wrapped `Sandwich` *\/","    }","}"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/nio\/nioany"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/org.swift.docc\/s23CustomStringConvertibleP"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/org.swift.docc\/documentation\/NIO\/NIOAny","interfaceLanguage":"swift"},"abstract":[{"type":"codeVoice","code":"NIOAny"},{"type":"text","text":" is an opaque container for values of "},{"type":"emphasis","inlineContent":[{"type":"text","text":"any"}]},{"type":"text","text":" type, similar to Swift’s builtin "},{"type":"codeVoice","code":"Any"},{"type":"text","text":" type. Contrary to"},{"type":"text","text":" "},{"type":"codeVoice","code":"Any"},{"type":"text","text":" the overhead of "},{"type":"codeVoice","code":"NIOAny"},{"type":"text","text":" depends on the the type of the wrapped value. Certain types that are important"},{"type":"text","text":" "},{"type":"text","text":"for the performance of a SwiftNIO application like "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":", "},{"type":"codeVoice","code":"FileRegion"},{"type":"text","text":" and "},{"type":"codeVoice","code":"AddressEnvelope<ByteBuffer>"},{"type":"text","text":" can be expected"},{"type":"text","text":" "},{"type":"text","text":"to be wrapped almost without overhead. All others will have similar performance as if they were passed as an "},{"type":"codeVoice","code":"Any"},{"type":"text","text":" as"},{"type":"text","text":" "},{"type":"codeVoice","code":"NIOAny"},{"type":"text","text":" just like "},{"type":"codeVoice","code":"Any"},{"type":"text","text":" will contain them within an existential container."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOAny"}],"title":"NIOAny","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:3NIO6NIOAnyV","modules":[{"name":"NIO"}],"navigatorTitle":[{"kind":"identifier","text":"NIOAny"}]},"hierarchy":{"paths":[["doc:\/\/org.swift.docc\/documentation\/NIO"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/org.swift.docc\/documentation\/NIO\/NIOAny\/init(_:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/org.swift.docc\/documentation\/NIO\/NIOAny\/CustomStringConvertible-Implementations"],"generated":true}],"references":{"doc://org.swift.docc/documentation/NIO/NIOAny/CustomStringConvertible-Implementations":{"role":"collectionGroup","title":"CustomStringConvertible Implementations","abstract":[],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/NIOAny\/CustomStringConvertible-Implementations","kind":"article","type":"topic","url":"\/documentation\/nio\/nioany\/customstringconvertible-implementations"},"doc://org.swift.docc/documentation/NIO":{"role":"collection","title":"NIO","abstract":[],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO","kind":"symbol","type":"topic","url":"\/documentation\/nio"},"doc://org.swift.docc/documentation/NIO/NIOAny/init(_:)":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:3NIO6NIOAnyVyACxclufc1TL_xmfp"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Wrap a value in a "},{"type":"codeVoice","code":"NIOAny"},{"type":"text","text":". In most cases you should not create a "},{"type":"codeVoice","code":"NIOAny"},{"type":"text","text":" directly using this constructor."},{"type":"text","text":" "},{"type":"text","text":"The abstraction that accepts values of type "},{"type":"codeVoice","code":"NIOAny"},{"type":"text","text":" must also provide a mechanism to do the wrapping. An"},{"type":"text","text":" "},{"type":"text","text":"example is a "},{"type":"codeVoice","code":"ChannelInboundHandler"},{"type":"text","text":" which provides "},{"type":"codeVoice","code":"self.wrapInboundOut(aValueOfTypeInboundOut)"},{"type":"text","text":"."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/NIOAny\/init(_:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/nioany\/init(_:)"},"doc://org.swift.docc/documentation/NIO/NIOAny":{"role":"symbol","title":"NIOAny","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOAny"}],"abstract":[{"type":"codeVoice","code":"NIOAny"},{"type":"text","text":" is an opaque container for values of "},{"type":"emphasis","inlineContent":[{"type":"text","text":"any"}]},{"type":"text","text":" type, similar to Swift’s builtin "},{"type":"codeVoice","code":"Any"},{"type":"text","text":" type. Contrary to"},{"type":"text","text":" "},{"type":"codeVoice","code":"Any"},{"type":"text","text":" the overhead of "},{"type":"codeVoice","code":"NIOAny"},{"type":"text","text":" depends on the the type of the wrapped value. Certain types that are important"},{"type":"text","text":" "},{"type":"text","text":"for the performance of a SwiftNIO application like "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":", "},{"type":"codeVoice","code":"FileRegion"},{"type":"text","text":" and "},{"type":"codeVoice","code":"AddressEnvelope<ByteBuffer>"},{"type":"text","text":" can be expected"},{"type":"text","text":" "},{"type":"text","text":"to be wrapped almost without overhead. All others will have similar performance as if they were passed as an "},{"type":"codeVoice","code":"Any"},{"type":"text","text":" as"},{"type":"text","text":" "},{"type":"codeVoice","code":"NIOAny"},{"type":"text","text":" just like "},{"type":"codeVoice","code":"Any"},{"type":"text","text":" will contain them within an existential container."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/NIOAny","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"NIOAny"}],"url":"\/documentation\/nio\/nioany"},"doc://org.swift.docc/s23CustomStringConvertibleP":{"type":"unresolvable","title":"Swift.CustomStringConvertible","identifier":"doc:\/\/org.swift.docc\/s23CustomStringConvertibleP"}}}