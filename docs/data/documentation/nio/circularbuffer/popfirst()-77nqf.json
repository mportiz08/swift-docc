{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"mutating"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"popFirst"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:3NIO14CircularBufferV7Elementxmfp"},{"kind":"text","text":"?"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The first element of the "},{"type":"codeVoice","code":"CircularBuffer"},{"type":"text","text":" if the "},{"type":"codeVoice","code":"CircularBuffer"},{"type":"text","text":" is not"},{"type":"text","text":" "},{"type":"text","text":"empty; otherwise, "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Calling this method may invalidate all saved indices of this"},{"type":"text","text":" "},{"type":"codeVoice","code":"CircularBuffer"},{"type":"text","text":". Do not rely on a previously stored index value after"},{"type":"text","text":" "},{"type":"text","text":"altering a "},{"type":"codeVoice","code":"CircularBuffer"},{"type":"text","text":" with any operation that can change its length."}]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"O(1)"}]}],"type":"aside","name":"Complexity"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/nio\/circularbuffer\/popfirst()-77nqf"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/org.swift.docc\/documentation\/NIO\/CircularBuffer\/popFirst()-77nqf","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Removes and returns the first element of the "},{"type":"codeVoice","code":"CircularBuffer"},{"type":"text","text":"."}],"kind":"symbol","metadata":{"role":"symbol","title":"popFirst()","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"popFirst"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:3NIO14CircularBufferV7Elementxmfp"},{"kind":"text","text":"?"}],"symbolKind":"method","externalID":"s:3NIO14CircularBufferV8popFirstxSgyF","extendedModule":"NIO","modules":[{"name":"NIO"}]},"hierarchy":{"paths":[["doc:\/\/org.swift.docc\/documentation\/NIO","doc:\/\/org.swift.docc\/documentation\/NIO\/CircularBuffer"]]},"references":{"doc://org.swift.docc/documentation/NIO/CircularBuffer/popFirst()-77nqf":{"role":"symbol","title":"popFirst()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"popFirst"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:3NIO14CircularBufferV7Elementxmfp"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Removes and returns the first element of the "},{"type":"codeVoice","code":"CircularBuffer"},{"type":"text","text":"."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/CircularBuffer\/popFirst()-77nqf","kind":"symbol","type":"topic","url":"\/documentation\/nio\/circularbuffer\/popfirst()-77nqf"},"doc://org.swift.docc/documentation/NIO/CircularBuffer":{"role":"symbol","title":"CircularBuffer","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CircularBuffer"}],"abstract":[{"type":"text","text":"An automatically expanding ring buffer implementation backed by a "},{"type":"codeVoice","code":"ContiguousArray"},{"type":"text","text":". Even though this implementation"},{"type":"text","text":" "},{"type":"text","text":"will automatically expand if more elements than "},{"type":"codeVoice","code":"initialCapacity"},{"type":"text","text":" are stored, itâ€™s advantageous to prevent"},{"type":"text","text":" "},{"type":"text","text":"expansions from happening frequently. Expansions will always force an allocation and a copy to happen."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/CircularBuffer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CircularBuffer"}],"url":"\/documentation\/nio\/circularbuffer"},"doc://org.swift.docc/documentation/NIO":{"role":"collection","title":"NIO","abstract":[],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO","kind":"symbol","type":"topic","url":"\/documentation\/nio"}}}