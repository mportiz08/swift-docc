{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"initialCapacity"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/nio\/circularbuffer\/init(initialcapacity:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/org.swift.docc\/documentation\/NIO\/CircularBuffer\/init(initialCapacity:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Allocates a buffer that can hold up to "},{"type":"codeVoice","code":"initialCapacity"},{"type":"text","text":" elements and initialise an empty ring backed by"},{"type":"text","text":" "},{"type":"text","text":"the buffer. When the ring grows to more than "},{"type":"codeVoice","code":"initialCapacity"},{"type":"text","text":" elements the buffer will be expanded."}],"kind":"symbol","metadata":{"role":"symbol","title":"init(initialCapacity:)","roleHeading":"Initializer","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"initialCapacity"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"symbolKind":"init","externalID":"s:3NIO14CircularBufferV15initialCapacityACyxGSi_tcfc","extendedModule":"NIO","modules":[{"name":"NIO"}]},"hierarchy":{"paths":[["doc:\/\/org.swift.docc\/documentation\/NIO","doc:\/\/org.swift.docc\/documentation\/NIO\/CircularBuffer"]]},"references":{"doc://org.swift.docc/documentation/NIO":{"role":"collection","title":"NIO","abstract":[],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO","kind":"symbol","type":"topic","url":"\/documentation\/nio"},"doc://org.swift.docc/documentation/NIO/CircularBuffer/init(initialCapacity:)":{"role":"symbol","title":"init(initialCapacity:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"initialCapacity"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Allocates a buffer that can hold up to "},{"type":"codeVoice","code":"initialCapacity"},{"type":"text","text":" elements and initialise an empty ring backed by"},{"type":"text","text":" "},{"type":"text","text":"the buffer. When the ring grows to more than "},{"type":"codeVoice","code":"initialCapacity"},{"type":"text","text":" elements the buffer will be expanded."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/CircularBuffer\/init(initialCapacity:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/circularbuffer\/init(initialcapacity:)"},"doc://org.swift.docc/documentation/NIO/CircularBuffer":{"role":"symbol","title":"CircularBuffer","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CircularBuffer"}],"abstract":[{"type":"text","text":"An automatically expanding ring buffer implementation backed by a "},{"type":"codeVoice","code":"ContiguousArray"},{"type":"text","text":". Even though this implementation"},{"type":"text","text":" "},{"type":"text","text":"will automatically expand if more elements than "},{"type":"codeVoice","code":"initialCapacity"},{"type":"text","text":" are stored, itâ€™s advantageous to prevent"},{"type":"text","text":" "},{"type":"text","text":"expansions from happening frequently. Expansions will always force an allocation and a copy to happen."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/CircularBuffer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CircularBuffer"}],"url":"\/documentation\/nio\/circularbuffer"}}}