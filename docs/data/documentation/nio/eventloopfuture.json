{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Functions that promise to do work asynchronously can return an "},{"type":"codeVoice","code":"EventLoopFuture<Value>"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"The recipient of such an object can then observe it to be notified when the operation completes."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The provider of a "},{"type":"codeVoice","code":"EventLoopFuture<Value>"},{"type":"text","text":" can create and return a placeholder object"},{"type":"text","text":" "},{"type":"text","text":"before the actual result is available. For example:"}]},{"type":"codeListing","syntax":"markdown","code":["func getNetworkData(args) -> EventLoopFuture<NetworkResponse> {","    let promise = eventLoop.makePromise(of: NetworkResponse.self)","    queue.async {","        . . . do some work . . .","        promise.succeed(response)","        . . . if it fails, instead . . .","        promise.fail(error)","    }","    return promise.futureResult","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note that this function returns immediately; the promise object will be given a value"},{"type":"text","text":" "},{"type":"text","text":"later on. This behaviour is common to Future\/Promise implementations in many programming"},{"type":"text","text":" "},{"type":"text","text":"languages. If you are unfamiliar with this kind of object, the following resources may be"},{"type":"text","text":" "},{"type":"text","text":"helpful:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/JavaScript\/Guide\/Using_promises"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"http:\/\/docs.scala-lang.org\/overviews\/core\/futures.html"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/docs.google.com\/document\/d\/10WOZgLQaYNpOrag-eTbUm-JUCCfdyfravZ4qSOQPg1M\/edit"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you receive a "},{"type":"codeVoice","code":"EventLoopFuture<Value>"},{"type":"text","text":" from another function, you have a number of options:"},{"type":"text","text":" "},{"type":"text","text":"The most common operation is to use "},{"type":"codeVoice","code":"flatMap()"},{"type":"text","text":" or "},{"type":"codeVoice","code":"map()"},{"type":"text","text":" to add a function that will be called"},{"type":"text","text":" "},{"type":"text","text":"with the eventual result.  Both methods returns a new "},{"type":"codeVoice","code":"EventLoopFuture<Value>"},{"type":"text","text":" immediately"},{"type":"text","text":" "},{"type":"text","text":"that will receive the return value from your function, but they behave differently. If you have"},{"type":"text","text":" "},{"type":"text","text":"a function that can return synchronously, the "},{"type":"codeVoice","code":"map"},{"type":"text","text":" function will transform the result of type"},{"type":"text","text":" "},{"type":"codeVoice","code":"Value"},{"type":"text","text":" to a the new result of type "},{"type":"codeVoice","code":"NewValue"},{"type":"text","text":" and return an "},{"type":"codeVoice","code":"EventLoopFuture<NewValue>"},{"type":"text","text":"."}]},{"type":"codeListing","syntax":"markdown","code":["let networkData = getNetworkData(args)","","\/\/ When network data is received, convert it.","let processedResult: EventLoopFuture<Processed> = networkData.map { (n: NetworkResponse) -> Processed in","    ... parse network data ....","    return processedResult","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If however you need to do more asynchronous processing, you can call "},{"type":"codeVoice","code":"flatMap()"},{"type":"text","text":". The return value of the"},{"type":"text","text":" "},{"type":"text","text":"function passed to "},{"type":"codeVoice","code":"flatMap"},{"type":"text","text":" must be a new "},{"type":"codeVoice","code":"EventLoopFuture<NewValue>"},{"type":"text","text":" object: the return value of "},{"type":"codeVoice","code":"flatMap()"},{"type":"text","text":" is"},{"type":"text","text":" "},{"type":"text","text":"a new "},{"type":"codeVoice","code":"EventLoopFuture<NewValue>"},{"type":"text","text":" that will contain the eventual result of both the original operation and"},{"type":"text","text":" "},{"type":"text","text":"the subsequent one."}]},{"type":"codeListing","syntax":"markdown","code":["\/\/ When converted network data is available, begin the database operation.","let databaseResult: EventLoopFuture<DBResult> = processedResult.flatMap { (p: Processed) -> EventLoopFuture<DBResult> in","    return someDatabaseOperation(p)","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In essence, future chains created via "},{"type":"codeVoice","code":"flatMap()"},{"type":"text","text":" provide a form of data-driven asynchronous programming"},{"type":"text","text":" "},{"type":"text","text":"that allows you to dynamically declare data dependencies for your various operations."}]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" chains created via "},{"type":"codeVoice","code":"flatMap()"},{"type":"text","text":" are sufficient for most purposes. All of the registered"},{"type":"text","text":" "},{"type":"text","text":"functions will eventually run in order. If one of those functions throws an error, that error will"},{"type":"text","text":" "},{"type":"text","text":"bypass the remaining functions. You can use "},{"type":"codeVoice","code":"flatMapError()"},{"type":"text","text":" to handle and optionally recover from"},{"type":"text","text":" "},{"type":"text","text":"errors in the middle of a chain."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"At the end of an "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" chain, you can use "},{"type":"codeVoice","code":"whenSuccess()"},{"type":"text","text":" or "},{"type":"codeVoice","code":"whenFailure()"},{"type":"text","text":" to add an"},{"type":"text","text":" "},{"type":"text","text":"observer callback that will be invoked with the result or error at that point. (Note: If you ever"},{"type":"text","text":" "},{"type":"text","text":"find yourself invoking "},{"type":"codeVoice","code":"promise.succeed()"},{"type":"text","text":" from inside a "},{"type":"codeVoice","code":"whenSuccess()"},{"type":"text","text":" callback, you probably should"},{"type":"text","text":" "},{"type":"text","text":"use "},{"type":"codeVoice","code":"flatMap()"},{"type":"text","text":" or "},{"type":"codeVoice","code":"cascade(to:)"},{"type":"text","text":" instead.)"}]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" objects are typically obtained by:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Using "},{"type":"codeVoice","code":".flatMap()"},{"type":"text","text":" on an existing future to create a new future for the next step in a series of operations."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Initializing an "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" that already has a value or an error"}]}]}]},{"anchor":"Threading-and-Futures","level":3,"type":"heading","text":"Threading and Futures"},{"type":"paragraph","inlineContent":[{"type":"text","text":"One of the major performance advantages of NIO over something like Node.js or Python’s asyncio is that NIO will"},{"type":"text","text":" "},{"type":"text","text":"by default run multiple event loops at once, on different threads. As most network protocols do not require"},{"type":"text","text":" "},{"type":"text","text":"blocking operation, at least in their low level implementations, this provides enormous speedups on machines"},{"type":"text","text":" "},{"type":"text","text":"with many cores such as most modern servers."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"However, it can present a challenge at higher levels of abstraction when coordination between those threads"},{"type":"text","text":" "},{"type":"text","text":"becomes necessary. This is usually the case whenever the events on one connection (that is, one "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":") depend"},{"type":"text","text":" "},{"type":"text","text":"on events on another one. As these "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"s may be scheduled on different event loops (and so different threads)"},{"type":"text","text":" "},{"type":"text","text":"care needs to be taken to ensure that communication between the two loops is done in a thread-safe manner that"},{"type":"text","text":" "},{"type":"text","text":"avoids concurrent mutation of shared state from multiple loops at once."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The main primitives NIO provides for this use are the "},{"type":"codeVoice","code":"EventLoopPromise"},{"type":"text","text":" and "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":". As their names"},{"type":"text","text":" "},{"type":"text","text":"suggest, these two objects are aware of event loops, and so can help manage the safety and correctness of your"},{"type":"text","text":" "},{"type":"text","text":"programs. However, understanding the exact semantics of these objects is critical to ensuring the safety of your code."}]},{"anchor":"Callbacks","level":4,"type":"heading","text":"Callbacks"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The most important principle of the "},{"type":"codeVoice","code":"EventLoopPromise"},{"type":"text","text":" and "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" is this: all callbacks registered on"},{"type":"text","text":" "},{"type":"text","text":"an "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" will execute on the thread corresponding to the event loop that created the "},{"type":"codeVoice","code":"Future"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"emphasis","inlineContent":[{"type":"text","text":"regardless"}]},{"type":"text","text":" of what thread succeeds or fails the corresponding "},{"type":"codeVoice","code":"EventLoopPromise"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This means that if "},{"type":"emphasis","inlineContent":[{"type":"text","text":"your code"}]},{"type":"text","text":" created the "},{"type":"codeVoice","code":"EventLoopPromise"},{"type":"text","text":", you can be extremely confident of what thread the"},{"type":"text","text":" "},{"type":"text","text":"callback will execute on: after all, you held the event loop in hand when you created the "},{"type":"codeVoice","code":"EventLoopPromise"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"However, if your code is handed an "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" or "},{"type":"codeVoice","code":"EventLoopPromise"},{"type":"text","text":", and you want to register callbacks"},{"type":"text","text":" "},{"type":"text","text":"on those objects, you cannot be confident that those callbacks will execute on the same "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" that your"},{"type":"text","text":" "},{"type":"text","text":"code does."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This presents a problem: how do you ensure thread-safety when registering callbacks on an arbitrary"},{"type":"text","text":" "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":"? The short answer is that when you are holding an "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":", you can always obtain a"},{"type":"text","text":" "},{"type":"text","text":"new "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" whose callbacks will execute on your event loop. You do this by calling"},{"type":"text","text":" "},{"type":"codeVoice","code":"EventLoopFuture.hop(to:)"},{"type":"text","text":". This function returns a new "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" whose callbacks are guaranteed"},{"type":"text","text":" "},{"type":"text","text":"to fire on the provided event loop. As an added bonus, "},{"type":"codeVoice","code":"hopTo"},{"type":"text","text":" will check whether the provided "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" "},{"type":"text","text":"was already scheduled to dispatch on the event loop in question, and avoid doing any work if that was the case."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This means that for any "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" that your code did not create itself (via"},{"type":"text","text":" "},{"type":"codeVoice","code":"EventLoopPromise.futureResult"},{"type":"text","text":"), use of "},{"type":"codeVoice","code":"hopTo"},{"type":"text","text":" is "},{"type":"strong","inlineContent":[{"type":"text","text":"strongly encouraged"}]},{"type":"text","text":" to help guarantee thread-safety. It"},{"type":"text","text":" "},{"type":"text","text":"should only be elided when thread-safety is provably not needed."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The “thread affinity” of "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":"s is critical to writing safe, performant concurrent code without"},{"type":"text","text":" "},{"type":"text","text":"boilerplate. It allows you to avoid needing to write or use locks in your own code, instead using the natural"},{"type":"text","text":" "},{"type":"text","text":"synchronization of the "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" to manage your thread-safety. In general, if any of your "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"s"},{"type":"text","text":" "},{"type":"text","text":"or "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" callbacks need to invoke a lock (either directly or in the form of "},{"type":"codeVoice","code":"DispatchQueue"},{"type":"text","text":") this"},{"type":"text","text":" "},{"type":"text","text":"should be considered a code smell worth investigating: the "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":"-based synchronization guarantees of"},{"type":"text","text":" "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" should be sufficient to guarantee thread-safety."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/nio\/eventloopfuture"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/org.swift.docc\/SQ"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Holder for a result that will be provided later."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFuture"}],"title":"EventLoopFuture","roleHeading":"Class","role":"symbol","symbolKind":"class","externalID":"s:3NIO15EventLoopFutureC","modules":[{"name":"NIO"}],"navigatorTitle":[{"kind":"identifier","text":"EventLoopFuture"}]},"hierarchy":{"paths":[["doc:\/\/org.swift.docc\/documentation\/NIO"]]},"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/eventLoop"]},{"title":"Instance Methods","identifiers":["doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/always(_:)","doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/and(_:file:line:)","doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/and(value:file:line:)","doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/cascade(to:)","doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/cascadeFailure(to:)","doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/cascadeSuccess(to:)","doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/flatMap(file:line:_:)","doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/flatMapBlocking(onto:_:)","doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/flatMapError(file:line:_:)","doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/flatMapErrorThrowing(file:line:_:)","doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/flatMapResult(file:line:_:)","doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/flatMapThrowing(file:line:_:)","doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/fold(_:with:)","doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/hop(to:)","doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/map(file:line:_:)","doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/recover(file:line:_:)","doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/unwrap(orElse:)","doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/unwrap(orError:)","doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/unwrap(orReplace:)","doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/wait(file:line:)","doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/whenComplete(_:)","doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/whenCompleteBlocking(onto:_:)","doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/whenFailure(_:)","doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/whenFailureBlocking(onto:_:)","doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/whenSuccess(_:)","doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/whenSuccessBlocking(onto:_:)"]},{"title":"Type Methods","identifiers":["doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/andAllComplete(_:on:)","doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/andAllComplete(_:promise:)","doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/andAllSucceed(_:on:)","doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/andAllSucceed(_:promise:)","doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/reduce(_:_:on:_:)","doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/reduce(into:_:on:_:)","doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/whenAllComplete(_:on:)","doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/whenAllComplete(_:promise:)","doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/whenAllSucceed(_:on:)","doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/whenAllSucceed(_:promise:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/Equatable-Implementations"],"generated":true}],"references":{"doc://org.swift.docc/documentation/NIO/EventLoopFuture/reduce(_:_:on:_:)":{"role":"symbol","title":"reduce(_:_:on:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reduce"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"InputValue"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:3NIO15EventLoopFutureC5Valuexmfp"},{"kind":"text","text":", ["},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:3NIO15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"InputValue","preciseIdentifier":"s:3NIO15EventLoopFutureC6reduce__2on_ACyxGx_SayACyqd__GGAA0bC0_pxx_qd__tctlFZ10InputValueL_qd__mfp"},{"kind":"text","text":">], "},{"kind":"externalParam","text":"on"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoop","preciseIdentifier":"s:3NIO9EventLoopP"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:3NIO15EventLoopFutureC5Valuexmfp"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"InputValue","preciseIdentifier":"s:3NIO15EventLoopFutureC6reduce__2on_ACyxGx_SayACyqd__GGAA0bC0_pxx_qd__tctlFZ10InputValueL_qd__mfp"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:3NIO15EventLoopFutureC5Valuexmfp"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:3NIO15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:3NIO15EventLoopFutureC5Valuexmfp"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Returns a new "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" that fires only when all the provided futures complete."},{"type":"text","text":" "},{"type":"text","text":"The new "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" contains the result of reducing the "},{"type":"codeVoice","code":"initialResult"},{"type":"text","text":" with the"},{"type":"text","text":" "},{"type":"text","text":"values of the "},{"type":"codeVoice","code":"[EventLoopFuture<NewValue>]"},{"type":"text","text":"."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/reduce(_:_:on:_:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/eventloopfuture\/reduce(_:_:on:_:)"},"doc://org.swift.docc/documentation/NIO":{"role":"collection","title":"NIO","abstract":[],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO","kind":"symbol","type":"topic","url":"\/documentation\/nio"},"doc://org.swift.docc/documentation/NIO/EventLoopFuture":{"role":"symbol","title":"EventLoopFuture","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFuture"}],"abstract":[{"type":"text","text":"Holder for a result that will be provided later."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EventLoopFuture"}],"url":"\/documentation\/nio\/eventloopfuture"},"doc://org.swift.docc/documentation/NIO/EventLoopFuture/flatMapError(file:line:_:)":{"role":"symbol","title":"flatMapError(file:line:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"flatMapError"},{"kind":"text","text":"("},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:3NIO15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:3NIO15EventLoopFutureC5Valuexmfp"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:3NIO15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:3NIO15EventLoopFutureC5Valuexmfp"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"When the current "},{"type":"codeVoice","code":"EventLoopFuture<Value>"},{"type":"text","text":" is in an error state, run the provided callback, which"},{"type":"text","text":" "},{"type":"text","text":"may recover from the error by returning an "},{"type":"codeVoice","code":"EventLoopFuture<NewValue>"},{"type":"text","text":". The callback is intended to potentially"},{"type":"text","text":" "},{"type":"text","text":"recover from the error by returning a new "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" that will eventually contain the recovered"},{"type":"text","text":" "},{"type":"text","text":"result."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/flatMapError(file:line:_:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/eventloopfuture\/flatmaperror(file:line:_:)"},"doc://org.swift.docc/documentation/NIO/EventLoopFuture/whenAllComplete(_:promise:)":{"role":"symbol","title":"whenAllComplete(_:promise:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"whenAllComplete"},{"kind":"text","text":"(["},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:3NIO15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:3NIO15EventLoopFutureC5Valuexmfp"},{"kind":"text","text":">], "},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoopPromise","preciseIdentifier":"s:3NIO16EventLoopPromiseV"},{"kind":"text","text":"<["},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:3NIO15EventLoopFutureC5Valuexmfp"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":">]>)"}],"abstract":[{"type":"text","text":"Completes a "},{"type":"codeVoice","code":"promise"},{"type":"text","text":" with the results of all provided "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":"s."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/whenAllComplete(_:promise:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/eventloopfuture\/whenallcomplete(_:promise:)"},"doc://org.swift.docc/documentation/NIO/EventLoopFuture/whenSuccessBlocking(onto:_:)":{"role":"symbol","title":"whenSuccessBlocking(onto:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"whenSuccessBlocking"},{"kind":"text","text":"("},{"kind":"externalParam","text":"onto"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"DispatchQueue","preciseIdentifier":"c:objc(cs)OS_dispatch_queue"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:3NIO15EventLoopFutureC5Valuexmfp"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Adds an observer callback to this "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" that is called when the"},{"type":"text","text":" "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" has a success result. The observer callback is permitted to block."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/whenSuccessBlocking(onto:_:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/eventloopfuture\/whensuccessblocking(onto:_:)"},"doc://org.swift.docc/documentation/NIO/EventLoopFuture/cascadeFailure(to:)":{"role":"symbol","title":"cascadeFailure(to:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cascadeFailure"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewValue"},{"kind":"text","text":">("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoopPromise","preciseIdentifier":"s:3NIO16EventLoopPromiseV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"NewValue","preciseIdentifier":"s:3NIO15EventLoopFutureC14cascadeFailure2toyAA0bC7PromiseVyqd__GSg_tlF8NewValueL_qd__mfp"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Fails the given "},{"type":"codeVoice","code":"EventLoopPromise"},{"type":"text","text":" with the error from this "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" if encountered."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/cascadeFailure(to:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/eventloopfuture\/cascadefailure(to:)"},"doc://org.swift.docc/documentation/NIO/EventLoopFuture/and(value:file:line:)":{"role":"symbol","title":"and(value:file:line:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"and"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"OtherValue"},{"kind":"text","text":">("},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OtherValue","preciseIdentifier":"s:3NIO15EventLoopFutureC3and5value4file4lineACyx_qd__tGqd___s12StaticStringVSutlF10OtherValueL_qd__mfp"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:3NIO15EventLoopFutureC"},{"kind":"text","text":"<("},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:3NIO15EventLoopFutureC5Valuexmfp"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"OtherValue","preciseIdentifier":"s:3NIO15EventLoopFutureC3and5value4file4lineACyx_qd__tGqd___s12StaticStringVSutlF10OtherValueL_qd__mfp"},{"kind":"text","text":")>"}],"abstract":[{"type":"text","text":"Return a new EventLoopFuture that contains this “and” another value."},{"type":"text","text":" "},{"type":"text","text":"This is just syntactic sugar for "},{"type":"codeVoice","code":"future.and(loop.makeSucceedFuture(value))"},{"type":"text","text":"."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/and(value:file:line:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/eventloopfuture\/and(value:file:line:)"},"doc://org.swift.docc/documentation/NIO/EventLoopFuture/whenComplete(_:)":{"role":"symbol","title":"whenComplete(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"whenComplete"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:3NIO15EventLoopFutureC5Valuexmfp"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Adds an observer callback to this "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" that is called when the"},{"type":"text","text":" "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" has any result."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/whenComplete(_:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/eventloopfuture\/whencomplete(_:)"},"doc://org.swift.docc/documentation/NIO/EventLoopFuture/flatMapResult(file:line:_:)":{"role":"symbol","title":"flatMapResult(file:line:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"flatMapResult"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewValue"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"SomeError"},{"kind":"text","text":">("},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:3NIO15EventLoopFutureC5Valuexmfp"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"NewValue","preciseIdentifier":"s:3NIO15EventLoopFutureC13flatMapResult4file4line_ACyqd__Gs12StaticStringV_Sus0G0Oyqd__qd_0_Gxcts5ErrorRd_0_r0_lF8NewValueL_qd__mfp"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"SomeError","preciseIdentifier":"s:3NIO15EventLoopFutureC13flatMapResult4file4line_ACyqd__Gs12StaticStringV_Sus0G0Oyqd__qd_0_Gxcts5ErrorRd_0_r0_lF04SomeL0L_qd_0_mfp"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:3NIO15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"NewValue","preciseIdentifier":"s:3NIO15EventLoopFutureC13flatMapResult4file4line_ACyqd__Gs12StaticStringV_Sus0G0Oyqd__qd_0_Gxcts5ErrorRd_0_r0_lF8NewValueL_qd__mfp"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"When the current "},{"type":"codeVoice","code":"EventLoopFuture<Value>"},{"type":"text","text":" is fulfilled, run the provided callback, which"},{"type":"text","text":" "},{"type":"text","text":"performs a synchronous computation and returns either a new value (of type "},{"type":"codeVoice","code":"NewValue"},{"type":"text","text":") or"},{"type":"text","text":" "},{"type":"text","text":"an error depending on the "},{"type":"codeVoice","code":"Result"},{"type":"text","text":" returned by the closure."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/flatMapResult(file:line:_:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/eventloopfuture\/flatmapresult(file:line:_:)"},"doc://org.swift.docc/documentation/NIO/EventLoopFuture/Equatable-Implementations":{"role":"collectionGroup","title":"Equatable Implementations","abstract":[],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/Equatable-Implementations","kind":"article","type":"topic","url":"\/documentation\/nio\/eventloopfuture\/equatable-implementations"},"doc://org.swift.docc/documentation/NIO/EventLoopFuture/flatMapThrowing(file:line:_:)":{"role":"symbol","title":"flatMapThrowing(file:line:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"flatMapThrowing"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewValue"},{"kind":"text","text":">("},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:3NIO15EventLoopFutureC5Valuexmfp"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"NewValue","preciseIdentifier":"s:3NIO15EventLoopFutureC15flatMapThrowing4file4line_ACyqd__Gs12StaticStringV_Suqd__xKctlF8NewValueL_qd__mfp"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:3NIO15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"NewValue","preciseIdentifier":"s:3NIO15EventLoopFutureC15flatMapThrowing4file4line_ACyqd__Gs12StaticStringV_Suqd__xKctlF8NewValueL_qd__mfp"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"When the current "},{"type":"codeVoice","code":"EventLoopFuture<Value>"},{"type":"text","text":" is fulfilled, run the provided callback, which"},{"type":"text","text":" "},{"type":"text","text":"performs a synchronous computation and returns a new value of type "},{"type":"codeVoice","code":"NewValue"},{"type":"text","text":". The provided"},{"type":"text","text":" "},{"type":"text","text":"callback may optionally "},{"type":"codeVoice","code":"throw"},{"type":"text","text":"."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/flatMapThrowing(file:line:_:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/eventloopfuture\/flatmapthrowing(file:line:_:)"},"doc://org.swift.docc/documentation/NIO/EventLoopFuture/whenFailureBlocking(onto:_:)":{"role":"symbol","title":"whenFailureBlocking(onto:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"whenFailureBlocking"},{"kind":"text","text":"("},{"kind":"externalParam","text":"onto"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"DispatchQueue","preciseIdentifier":"c:objc(cs)OS_dispatch_queue"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Adds an observer callback to this "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" that is called when the"},{"type":"text","text":" "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" has a failure result. The observer callback is permitted to block."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/whenFailureBlocking(onto:_:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/eventloopfuture\/whenfailureblocking(onto:_:)"},"doc://org.swift.docc/documentation/NIO/EventLoopFuture/and(_:file:line:)":{"role":"symbol","title":"and(_:file:line:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"and"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"OtherValue"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:3NIO15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"OtherValue","preciseIdentifier":"s:3NIO15EventLoopFutureC3and_4file4lineACyx_qd__tGACyqd__G_s12StaticStringVSutlF10OtherValueL_qd__mfp"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:3NIO15EventLoopFutureC"},{"kind":"text","text":"<("},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:3NIO15EventLoopFutureC5Valuexmfp"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"OtherValue","preciseIdentifier":"s:3NIO15EventLoopFutureC3and_4file4lineACyx_qd__tGACyqd__G_s12StaticStringVSutlF10OtherValueL_qd__mfp"},{"kind":"text","text":")>"}],"abstract":[{"type":"text","text":"Return a new "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" that succeeds when this “and” another"},{"type":"text","text":" "},{"type":"text","text":"provided "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" both succeed. It then provides the pair"},{"type":"text","text":" "},{"type":"text","text":"of results. If either one fails, the combined "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" will fail with"},{"type":"text","text":" "},{"type":"text","text":"the first error encountered."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/and(_:file:line:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/eventloopfuture\/and(_:file:line:)"},"doc://org.swift.docc/documentation/NIO/EventLoopFuture/eventLoop":{"role":"symbol","title":"eventLoop","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"eventLoop"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoop","preciseIdentifier":"s:3NIO9EventLoopP"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" which is tied to the "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" and is used to notify all registered callbacks."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/eventLoop","kind":"symbol","type":"topic","url":"\/documentation\/nio\/eventloopfuture\/eventloop"},"doc://org.swift.docc/documentation/NIO/EventLoopFuture/whenAllSucceed(_:promise:)":{"role":"symbol","title":"whenAllSucceed(_:promise:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"whenAllSucceed"},{"kind":"text","text":"(["},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:3NIO15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:3NIO15EventLoopFutureC5Valuexmfp"},{"kind":"text","text":">], "},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoopPromise","preciseIdentifier":"s:3NIO16EventLoopPromiseV"},{"kind":"text","text":"<["},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:3NIO15EventLoopFutureC5Valuexmfp"},{"kind":"text","text":"]>)"}],"abstract":[{"type":"text","text":"Completes the "},{"type":"codeVoice","code":"promise"},{"type":"text","text":" with the values of all "},{"type":"codeVoice","code":"futures"},{"type":"text","text":" if all provided futures succeed. If"},{"type":"text","text":" "},{"type":"text","text":"any of the provided futures fail then "},{"type":"codeVoice","code":"promise"},{"type":"text","text":" will be failed."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/whenAllSucceed(_:promise:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/eventloopfuture\/whenallsucceed(_:promise:)"},"doc://org.swift.docc/documentation/NIO/EventLoopFuture/cascade(to:)":{"role":"symbol","title":"cascade(to:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cascade"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoopPromise","preciseIdentifier":"s:3NIO16EventLoopPromiseV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:3NIO15EventLoopFutureC5Valuexmfp"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Fulfills the given "},{"type":"codeVoice","code":"EventLoopPromise"},{"type":"text","text":" with the results from this "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":"."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/cascade(to:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/eventloopfuture\/cascade(to:)"},"doc://org.swift.docc/documentation/NIO/EventLoopFuture/fold(_:with:)":{"role":"symbol","title":"fold(_:with:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fold"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"OtherValue"},{"kind":"text","text":">(["},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:3NIO15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"OtherValue","preciseIdentifier":"s:3NIO15EventLoopFutureC4fold_4withACyxGSayACyqd__GG_AFx_qd__tctlF10OtherValueL_qd__mfp"},{"kind":"text","text":">], "},{"kind":"externalParam","text":"with"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:3NIO15EventLoopFutureC5Valuexmfp"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"OtherValue","preciseIdentifier":"s:3NIO15EventLoopFutureC4fold_4withACyxGSayACyqd__GG_AFx_qd__tctlF10OtherValueL_qd__mfp"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:3NIO15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:3NIO15EventLoopFutureC5Valuexmfp"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:3NIO15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:3NIO15EventLoopFutureC5Valuexmfp"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Returns a new "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" that fires only when this "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" and"},{"type":"text","text":" "},{"type":"text","text":"all the provided "},{"type":"codeVoice","code":"futures"},{"type":"text","text":" complete. It then provides the result of folding the value of this"},{"type":"text","text":" "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" with the values of all the provided "},{"type":"codeVoice","code":"futures"},{"type":"text","text":"."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/fold(_:with:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/eventloopfuture\/fold(_:with:)"},"doc://org.swift.docc/SQ":{"type":"unresolvable","title":"Swift.Equatable","identifier":"doc:\/\/org.swift.docc\/SQ"},"http://docs.scala-lang.org/overviews/core/futures.html":{"title":"Scala","titleInlineContent":[{"type":"text","text":"Scala"}],"type":"link","identifier":"http:\/\/docs.scala-lang.org\/overviews\/core\/futures.html","url":"http:\/\/docs.scala-lang.org\/overviews\/core\/futures.html"},"doc://org.swift.docc/documentation/NIO/EventLoopFuture/flatMap(file:line:_:)":{"role":"symbol","title":"flatMap(file:line:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"flatMap"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewValue"},{"kind":"text","text":">("},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:3NIO15EventLoopFutureC5Valuexmfp"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:3NIO15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"NewValue","preciseIdentifier":"s:3NIO15EventLoopFutureC7flatMap4file4line_ACyqd__Gs12StaticStringV_SuAGxctlF8NewValueL_qd__mfp"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:3NIO15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"NewValue","preciseIdentifier":"s:3NIO15EventLoopFutureC7flatMap4file4line_ACyqd__Gs12StaticStringV_SuAGxctlF8NewValueL_qd__mfp"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"When the current "},{"type":"codeVoice","code":"EventLoopFuture<Value>"},{"type":"text","text":" is fulfilled, run the provided callback,"},{"type":"text","text":" "},{"type":"text","text":"which will provide a new "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":"."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/flatMap(file:line:_:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/eventloopfuture\/flatmap(file:line:_:)"},"doc://org.swift.docc/documentation/NIO/EventLoopFuture/flatMapErrorThrowing(file:line:_:)":{"role":"symbol","title":"flatMapErrorThrowing(file:line:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"flatMapErrorThrowing"},{"kind":"text","text":"("},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:3NIO15EventLoopFutureC5Valuexmfp"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:3NIO15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:3NIO15EventLoopFutureC5Valuexmfp"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"When the current "},{"type":"codeVoice","code":"EventLoopFuture<Value>"},{"type":"text","text":" is in an error state, run the provided callback, which"},{"type":"text","text":" "},{"type":"text","text":"may recover from the error and returns a new value of type "},{"type":"codeVoice","code":"Value"},{"type":"text","text":". The provided callback may optionally "},{"type":"codeVoice","code":"throw"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"in which case the "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" will be in a failed state with the new thrown error."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/flatMapErrorThrowing(file:line:_:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/eventloopfuture\/flatmaperrorthrowing(file:line:_:)"},"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Using_promises":{"title":"Javascript","titleInlineContent":[{"type":"text","text":"Javascript"}],"type":"link","identifier":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/JavaScript\/Guide\/Using_promises","url":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/JavaScript\/Guide\/Using_promises"},"doc://org.swift.docc/documentation/NIO/EventLoopFuture/always(_:)":{"role":"symbol","title":"always(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"always"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:3NIO15EventLoopFutureC5Valuexmfp"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:3NIO15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:3NIO15EventLoopFutureC5Valuexmfp"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Adds an observer callback to this "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" that is called when the"},{"type":"text","text":" "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" has any result."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/always(_:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/eventloopfuture\/always(_:)"},"doc://org.swift.docc/documentation/NIO/EventLoopFuture/whenAllSucceed(_:on:)":{"role":"symbol","title":"whenAllSucceed(_:on:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"whenAllSucceed"},{"kind":"text","text":"(["},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:3NIO15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:3NIO15EventLoopFutureC5Valuexmfp"},{"kind":"text","text":">], "},{"kind":"externalParam","text":"on"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoop","preciseIdentifier":"s:3NIO9EventLoopP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:3NIO15EventLoopFutureC"},{"kind":"text","text":"<["},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:3NIO15EventLoopFutureC5Valuexmfp"},{"kind":"text","text":"]>"}],"abstract":[{"type":"text","text":"Returns a new "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" that succeeds only if all of the provided futures succeed."},{"type":"text","text":" "},{"type":"text","text":"The new "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" will contain all of the values fulfilled by the futures."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/whenAllSucceed(_:on:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/eventloopfuture\/whenallsucceed(_:on:)"},"doc://org.swift.docc/documentation/NIO/EventLoopFuture/recover(file:line:_:)":{"role":"symbol","title":"recover(file:line:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"recover"},{"kind":"text","text":"("},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:3NIO15EventLoopFutureC5Valuexmfp"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:3NIO15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:3NIO15EventLoopFutureC5Valuexmfp"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"When the current "},{"type":"codeVoice","code":"EventLoopFuture<Value>"},{"type":"text","text":" is in an error state, run the provided callback, which"},{"type":"text","text":" "},{"type":"text","text":"can recover from the error and return a new value of type "},{"type":"codeVoice","code":"Value"},{"type":"text","text":". The provided callback may not "},{"type":"codeVoice","code":"throw"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"so this function should be used when the error is always recoverable."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/recover(file:line:_:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/eventloopfuture\/recover(file:line:_:)"},"doc://org.swift.docc/documentation/NIO/EventLoopFuture/hop(to:)":{"role":"symbol","title":"hop(to:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hop"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoop","preciseIdentifier":"s:3NIO9EventLoopP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:3NIO15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:3NIO15EventLoopFutureC5Valuexmfp"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Returns an "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" that fires when this future completes, but executes its callbacks on the"},{"type":"text","text":" "},{"type":"text","text":"target event loop instead of the original one."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/hop(to:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/eventloopfuture\/hop(to:)"},"doc://org.swift.docc/documentation/NIO/EventLoopFuture/andAllSucceed(_:promise:)":{"role":"symbol","title":"andAllSucceed(_:promise:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"andAllSucceed"},{"kind":"text","text":"(["},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:3NIO15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:3NIO15EventLoopFutureC5Valuexmfp"},{"kind":"text","text":">], "},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoopPromise","preciseIdentifier":"s:3NIO16EventLoopPromiseV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Succeeds the promise if all of the provided futures succeed. If any of the provided"},{"type":"text","text":" "},{"type":"text","text":"futures fail then the "},{"type":"codeVoice","code":"promise"},{"type":"text","text":" will be failed – even if some futures are yet to complete."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/andAllSucceed(_:promise:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/eventloopfuture\/andallsucceed(_:promise:)"},"doc://org.swift.docc/documentation/NIO/EventLoopFuture/andAllSucceed(_:on:)":{"role":"symbol","title":"andAllSucceed(_:on:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"andAllSucceed"},{"kind":"text","text":"(["},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:3NIO15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:3NIO15EventLoopFutureC5Valuexmfp"},{"kind":"text","text":">], "},{"kind":"externalParam","text":"on"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoop","preciseIdentifier":"s:3NIO9EventLoopP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:3NIO15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Returns a new "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" that succeeds only if all of the provided futures succeed."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/andAllSucceed(_:on:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/eventloopfuture\/andallsucceed(_:on:)"},"doc://org.swift.docc/documentation/NIO/EventLoopFuture/unwrap(orElse:)":{"role":"symbol","title":"unwrap(orElse:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unwrap"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewValue"},{"kind":"text","text":">("},{"kind":"externalParam","text":"orElse"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"NewValue","preciseIdentifier":"s:3NIO15EventLoopFutureC6unwrap6orElseACyqd__Gqd__yc_tqd__SgRszlF8NewValueL_qd__mfp"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:3NIO15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"NewValue","preciseIdentifier":"s:3NIO15EventLoopFutureC6unwrap6orElseACyqd__Gqd__yc_tqd__SgRszlF8NewValueL_qd__mfp"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Unwrap an "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" where its type parameter is an "},{"type":"codeVoice","code":"Optional"},{"type":"text","text":"."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/unwrap(orElse:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/eventloopfuture\/unwrap(orelse:)"},"doc://org.swift.docc/documentation/NIO/EventLoopFuture/unwrap(orReplace:)":{"role":"symbol","title":"unwrap(orReplace:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unwrap"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewValue"},{"kind":"text","text":">("},{"kind":"externalParam","text":"orReplace"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NewValue","preciseIdentifier":"s:3NIO15EventLoopFutureC6unwrap9orReplaceACyqd__Gqd___tqd__SgRszlF8NewValueL_qd__mfp"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:3NIO15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"NewValue","preciseIdentifier":"s:3NIO15EventLoopFutureC6unwrap9orReplaceACyqd__Gqd___tqd__SgRszlF8NewValueL_qd__mfp"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Unwrap an "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" where its type parameter is an "},{"type":"codeVoice","code":"Optional"},{"type":"text","text":"."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/unwrap(orReplace:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/eventloopfuture\/unwrap(orreplace:)"},"doc://org.swift.docc/documentation/NIO/EventLoopFuture/map(file:line:_:)":{"role":"symbol","title":"map(file:line:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"map"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewValue"},{"kind":"text","text":">("},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:3NIO15EventLoopFutureC5Valuexmfp"},{"kind":"text","text":") -> ("},{"kind":"typeIdentifier","text":"NewValue","preciseIdentifier":"s:3NIO15EventLoopFutureC3map4file4line_ACyqd__Gs12StaticStringV_Suqd__xctlF8NewValueL_qd__mfp"},{"kind":"text","text":")) -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:3NIO15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"NewValue","preciseIdentifier":"s:3NIO15EventLoopFutureC3map4file4line_ACyqd__Gs12StaticStringV_Suqd__xctlF8NewValueL_qd__mfp"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"When the current "},{"type":"codeVoice","code":"EventLoopFuture<Value>"},{"type":"text","text":" is fulfilled, run the provided callback, which"},{"type":"text","text":" "},{"type":"text","text":"performs a synchronous computation and returns a new value of type "},{"type":"codeVoice","code":"NewValue"},{"type":"text","text":"."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/map(file:line:_:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/eventloopfuture\/map(file:line:_:)"},"doc://org.swift.docc/documentation/NIO/EventLoopFuture/wait(file:line:)":{"role":"symbol","title":"wait(file:line:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"wait"},{"kind":"text","text":"("},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:3NIO15EventLoopFutureC5Valuexmfp"}],"abstract":[{"type":"text","text":"Wait for the resolution of this "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" by blocking the current thread until it"},{"type":"text","text":" "},{"type":"text","text":"resolves."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/wait(file:line:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/eventloopfuture\/wait(file:line:)"},"doc://org.swift.docc/documentation/NIO/EventLoopFuture/whenFailure(_:)":{"role":"symbol","title":"whenFailure(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"whenFailure"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Adds an observer callback to this "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" that is called when the"},{"type":"text","text":" "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" has a failure result."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/whenFailure(_:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/eventloopfuture\/whenfailure(_:)"},"doc://org.swift.docc/documentation/NIO/EventLoopFuture/whenSuccess(_:)":{"role":"symbol","title":"whenSuccess(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"whenSuccess"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:3NIO15EventLoopFutureC5Valuexmfp"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Adds an observer callback to this "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" that is called when the"},{"type":"text","text":" "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" has a success result."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/whenSuccess(_:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/eventloopfuture\/whensuccess(_:)"},"doc://org.swift.docc/documentation/NIO/EventLoopFuture/flatMapBlocking(onto:_:)":{"role":"symbol","title":"flatMapBlocking(onto:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"flatMapBlocking"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewValue"},{"kind":"text","text":">("},{"kind":"externalParam","text":"onto"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"DispatchQueue","preciseIdentifier":"c:objc(cs)OS_dispatch_queue"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:3NIO15EventLoopFutureC5Valuexmfp"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"NewValue","preciseIdentifier":"s:3NIO15EventLoopFutureC15flatMapBlocking4onto_ACyqd__GSo17OS_dispatch_queueC_qd__xKctlF8NewValueL_qd__mfp"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:3NIO15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"NewValue","preciseIdentifier":"s:3NIO15EventLoopFutureC15flatMapBlocking4onto_ACyqd__GSo17OS_dispatch_queueC_qd__xKctlF8NewValueL_qd__mfp"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Chain an "},{"type":"codeVoice","code":"EventLoopFuture<NewValue>"},{"type":"text","text":" providing the result of a IO \/ task that may block. For example:"}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/flatMapBlocking(onto:_:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/eventloopfuture\/flatmapblocking(onto:_:)"},"doc://org.swift.docc/documentation/NIO/EventLoopFuture/whenAllComplete(_:on:)":{"role":"symbol","title":"whenAllComplete(_:on:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"whenAllComplete"},{"kind":"text","text":"(["},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:3NIO15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:3NIO15EventLoopFutureC5Valuexmfp"},{"kind":"text","text":">], "},{"kind":"externalParam","text":"on"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoop","preciseIdentifier":"s:3NIO9EventLoopP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:3NIO15EventLoopFutureC"},{"kind":"text","text":"<["},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:3NIO15EventLoopFutureC5Valuexmfp"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":">]>"}],"abstract":[{"type":"text","text":"Returns a new "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" that succeeds when all of the provided "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":"s complete."},{"type":"text","text":" "},{"type":"text","text":"The new "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" will contain an array of results, maintaining ordering for each of the "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":"s."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/whenAllComplete(_:on:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/eventloopfuture\/whenallcomplete(_:on:)"},"doc://org.swift.docc/documentation/NIO/EventLoopFuture/whenCompleteBlocking(onto:_:)":{"role":"symbol","title":"whenCompleteBlocking(onto:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"whenCompleteBlocking"},{"kind":"text","text":"("},{"kind":"externalParam","text":"onto"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"DispatchQueue","preciseIdentifier":"c:objc(cs)OS_dispatch_queue"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:3NIO15EventLoopFutureC5Valuexmfp"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Adds an observer callback to this "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" that is called when the"},{"type":"text","text":" "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" has any result. The observer callback is permitted to block."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/whenCompleteBlocking(onto:_:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/eventloopfuture\/whencompleteblocking(onto:_:)"},"https://docs.google.com/document/d/10WOZgLQaYNpOrag-eTbUm-JUCCfdyfravZ4qSOQPg1M/edit":{"title":"Python","titleInlineContent":[{"type":"text","text":"Python"}],"type":"link","identifier":"https:\/\/docs.google.com\/document\/d\/10WOZgLQaYNpOrag-eTbUm-JUCCfdyfravZ4qSOQPg1M\/edit","url":"https:\/\/docs.google.com\/document\/d\/10WOZgLQaYNpOrag-eTbUm-JUCCfdyfravZ4qSOQPg1M\/edit"},"doc://org.swift.docc/documentation/NIO/EventLoopFuture/andAllComplete(_:promise:)":{"role":"symbol","title":"andAllComplete(_:promise:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"andAllComplete"},{"kind":"text","text":"(["},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:3NIO15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:3NIO15EventLoopFutureC5Valuexmfp"},{"kind":"text","text":">], "},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoopPromise","preciseIdentifier":"s:3NIO16EventLoopPromiseV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Completes a "},{"type":"codeVoice","code":"promise"},{"type":"text","text":" when all of the provided "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":"s have completed."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/andAllComplete(_:promise:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/eventloopfuture\/andallcomplete(_:promise:)"},"doc://org.swift.docc/documentation/NIO/EventLoopFuture/reduce(into:_:on:_:)":{"role":"symbol","title":"reduce(into:_:on:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reduce"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"InputValue"},{"kind":"text","text":">("},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:3NIO15EventLoopFutureC5Valuexmfp"},{"kind":"text","text":", ["},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:3NIO15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"InputValue","preciseIdentifier":"s:3NIO15EventLoopFutureC6reduce4into_2on_ACyxGx_SayACyqd__GGAA0bC0_pyxz_qd__tctlFZ10InputValueL_qd__mfp"},{"kind":"text","text":">], "},{"kind":"externalParam","text":"on"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoop","preciseIdentifier":"s:3NIO9EventLoopP"},{"kind":"text","text":", ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:3NIO15EventLoopFutureC5Valuexmfp"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"InputValue","preciseIdentifier":"s:3NIO15EventLoopFutureC6reduce4into_2on_ACyxGx_SayACyqd__GGAA0bC0_pyxz_qd__tctlFZ10InputValueL_qd__mfp"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:3NIO15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:3NIO15EventLoopFutureC5Valuexmfp"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Returns a new "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" that fires only when all the provided futures complete."},{"type":"text","text":" "},{"type":"text","text":"The new "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" contains the result of combining the "},{"type":"codeVoice","code":"initialResult"},{"type":"text","text":" with the"},{"type":"text","text":" "},{"type":"text","text":"values of the "},{"type":"codeVoice","code":"[EventLoopFuture<NewValue>]"},{"type":"text","text":". This function is analogous to the standard library’s"},{"type":"text","text":" "},{"type":"codeVoice","code":"reduce(into:)"},{"type":"text","text":", which does not make copies of the result type for each "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":"."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/reduce(into:_:on:_:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/eventloopfuture\/reduce(into:_:on:_:)"},"doc://org.swift.docc/documentation/NIO/EventLoopFuture/andAllComplete(_:on:)":{"role":"symbol","title":"andAllComplete(_:on:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"andAllComplete"},{"kind":"text","text":"(["},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:3NIO15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:3NIO15EventLoopFutureC5Valuexmfp"},{"kind":"text","text":">], "},{"kind":"externalParam","text":"on"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoop","preciseIdentifier":"s:3NIO9EventLoopP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:3NIO15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Returns a new "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" that succeeds when all of the provided "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":"s complete."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/andAllComplete(_:on:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/eventloopfuture\/andallcomplete(_:on:)"},"doc://org.swift.docc/documentation/NIO/EventLoopFuture/cascadeSuccess(to:)":{"role":"symbol","title":"cascadeSuccess(to:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cascadeSuccess"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoopPromise","preciseIdentifier":"s:3NIO16EventLoopPromiseV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:3NIO15EventLoopFutureC5Valuexmfp"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Fulfills the given "},{"type":"codeVoice","code":"EventLoopPromise"},{"type":"text","text":" only when this "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" succeeds."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/cascadeSuccess(to:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/eventloopfuture\/cascadesuccess(to:)"},"doc://org.swift.docc/documentation/NIO/EventLoopFuture/unwrap(orError:)":{"role":"symbol","title":"unwrap(orError:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unwrap"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewValue"},{"kind":"text","text":">("},{"kind":"externalParam","text":"orError"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:3NIO15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"NewValue","preciseIdentifier":"s:3NIO15EventLoopFutureC6unwrap7orErrorACyqd__Gs0G0_p_tqd__SgRszlF8NewValueL_qd__mfp"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Unwrap an "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" where its type parameter is an "},{"type":"codeVoice","code":"Optional"},{"type":"text","text":"."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopFuture\/unwrap(orError:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/eventloopfuture\/unwrap(orerror:)"}}}