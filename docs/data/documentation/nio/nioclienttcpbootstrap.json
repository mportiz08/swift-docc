{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOClientTCPBootstrap"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Usually, to bootstrap a connection with SwiftNIO, you have to match the right "},{"type":"codeVoice","code":"EventLoopGroup"},{"type":"text","text":", the right bootstrap,"},{"type":"text","text":" "},{"type":"text","text":"and the right TLS implementation. Typical choices involve:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"MultiThreadedEventLoopGroup"},{"type":"text","text":", "},{"type":"codeVoice","code":"ClientBootstrap"},{"type":"text","text":", and "},{"type":"codeVoice","code":"NIOSSLClientHandler"},{"type":"text","text":" (from"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/apple\/swift-nio-ssl"},{"type":"text","text":") for NIO on BSD sockets."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"NIOTSEventLoopGroup"},{"type":"text","text":", "},{"type":"codeVoice","code":"NIOTSConnectionBootstrap"},{"type":"text","text":", and the Network.framework TLS implementation (all from"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/apple\/swift-nio-transport-services"},{"type":"text","text":"."}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Bootstrapping connections that way works but is quite tedious for packages that support multiple ways of"},{"type":"text","text":" "},{"type":"text","text":"bootstrapping. The idea behind "},{"type":"codeVoice","code":"NIOClientTCPBootstrap"},{"type":"text","text":" is to do all configuration in one place (when you initialize"},{"type":"text","text":" "},{"type":"text","text":"a "},{"type":"codeVoice","code":"NIOClientTCPBootstrap"},{"type":"text","text":") and then have a common API that works for all use-cases."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Example:"}]},{"type":"codeListing","syntax":"markdown","code":["\/\/ This function combines the right pieces and returns you a \"universal client bootstrap\"","\/\/ (`NIOClientTCPBootstrap`). This allows you to bootstrap connections (with or without TLS) using either the","\/\/ NIO on sockets (`NIO`) or NIO on Network.framework (`NIOTransportServices`) stacks.","\/\/ The remainder of the code should be platform-independent.","func makeUniversalBootstrap(serverHostname: String) throws -> (NIOClientTCPBootstrap, EventLoopGroup) {","    func useNIOOnSockets() throws -> (NIOClientTCPBootstrap, EventLoopGroup) {","        let group = MultiThreadedEventLoopGroup(numberOfThreads: 1)","        let sslContext = try NIOSSLContext(configuration: TLSConfiguration.forClient())","        let bootstrap = try NIOClientTCPBootstrap(ClientBootstrap(group: group),","                                                  tls: NIOSSLClientTLSProvider(context: sslContext,","                                                                               serverHostname: serverHostname))","        return (bootstrap, group)","    }","","    #if canImport(Network)","    if #available(macOS 10.14, iOS 12, tvOS 12, watchOS 3, *) {","        \/\/ We run on a new-enough Darwin so we can use Network.framework","","        let group = NIOTSEventLoopGroup()","        let bootstrap = NIOClientTCPBootstrap(NIOTSConnectionBootstrap(group: group),","                                              tls: NIOTSClientTLSProvider())","        return (bootstrap, group)","    } else {","        \/\/ We're on Darwin but not new enough for Network.framework, so we fall back on NIO on BSD sockets.","        return try useNIOOnSockets()","    }","    #else","    \/\/ We are on a non-Darwin platform, so we'll use BSD sockets.","    return try useNIOOnSockets()","    #endif","}","","let (bootstrap, group) = try makeUniversalBootstrap(serverHostname: \"example.com\")","let connection = try bootstrap","        .channelInitializer { channel in","            channel.pipeline.addHandler(PrintEverythingHandler { _ in })","        }","        .enableTLS()","        .connect(host: \"example.com\", port: 443)","        .wait()"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/nio\/nioclienttcpbootstrap"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/org.swift.docc\/documentation\/NIO\/NIOClientTCPBootstrap","interfaceLanguage":"swift"},"abstract":[{"type":"codeVoice","code":"NIOClientTCPBootstrap"},{"type":"text","text":" is a bootstrap that allows you to bootstrap client TCP connections using NIO on BSD Sockets,"},{"type":"text","text":" "},{"type":"text","text":"NIO Transport Services, or other ways."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOClientTCPBootstrap"}],"title":"NIOClientTCPBootstrap","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:3NIO21NIOClientTCPBootstrapV","modules":[{"name":"NIO"}],"navigatorTitle":[{"kind":"identifier","text":"NIOClientTCPBootstrap"}]},"hierarchy":{"paths":[["doc:\/\/org.swift.docc\/documentation\/NIO"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/org.swift.docc\/documentation\/NIO\/NIOClientTCPBootstrap\/init(_:tls:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/org.swift.docc\/documentation\/NIO\/NIOClientTCPBootstrap\/underlyingBootstrap"]},{"title":"Instance Methods","identifiers":["doc:\/\/org.swift.docc\/documentation\/NIO\/NIOClientTCPBootstrap\/channelConvenienceOptions(_:)","doc:\/\/org.swift.docc\/documentation\/NIO\/NIOClientTCPBootstrap\/channelInitializer(_:)","doc:\/\/org.swift.docc\/documentation\/NIO\/NIOClientTCPBootstrap\/channelOption(_:value:)","doc:\/\/org.swift.docc\/documentation\/NIO\/NIOClientTCPBootstrap\/connect(host:port:)","doc:\/\/org.swift.docc\/documentation\/NIO\/NIOClientTCPBootstrap\/connect(to:)","doc:\/\/org.swift.docc\/documentation\/NIO\/NIOClientTCPBootstrap\/connect(unixDomainSocketPath:)","doc:\/\/org.swift.docc\/documentation\/NIO\/NIOClientTCPBootstrap\/connectTimeout(_:)","doc:\/\/org.swift.docc\/documentation\/NIO\/NIOClientTCPBootstrap\/enableTLS()"]}],"references":{"doc://org.swift.docc/documentation/NIO/NIOClientTCPBootstrap/channelOption(_:value:)":{"role":"symbol","title":"channelOption(_:value:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"channelOption"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Option"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Option","preciseIdentifier":"s:3NIO21NIOClientTCPBootstrapV13channelOption_5valueACx_5ValueQztAA07ChannelE0RzlF0E0L_xmfp"},{"kind":"text","text":", "},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Option","preciseIdentifier":"s:3NIO21NIOClientTCPBootstrapV13channelOption_5valueACx_5ValueQztAA07ChannelE0RzlF0E0L_xmfp"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:3NIO13ChannelOptionP5ValueQa"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"NIOClientTCPBootstrap","preciseIdentifier":"s:3NIO21NIOClientTCPBootstrapV"}],"abstract":[{"type":"text","text":"Specifies a "},{"type":"codeVoice","code":"ChannelOption"},{"type":"text","text":" to be applied to the "},{"type":"codeVoice","code":"SocketChannel"},{"type":"text","text":"."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/NIOClientTCPBootstrap\/channelOption(_:value:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/nioclienttcpbootstrap\/channeloption(_:value:)"},"https://github.com/apple/swift-nio-ssl":{"title":"swift-nio-ssl","titleInlineContent":[{"type":"codeVoice","code":"swift-nio-ssl"}],"type":"link","identifier":"https:\/\/github.com\/apple\/swift-nio-ssl","url":"https:\/\/github.com\/apple\/swift-nio-ssl"},"doc://org.swift.docc/documentation/NIO/NIOClientTCPBootstrap":{"role":"symbol","title":"NIOClientTCPBootstrap","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOClientTCPBootstrap"}],"abstract":[{"type":"codeVoice","code":"NIOClientTCPBootstrap"},{"type":"text","text":" is a bootstrap that allows you to bootstrap client TCP connections using NIO on BSD Sockets,"},{"type":"text","text":" "},{"type":"text","text":"NIO Transport Services, or other ways."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/NIOClientTCPBootstrap","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"NIOClientTCPBootstrap"}],"url":"\/documentation\/nio\/nioclienttcpbootstrap"},"doc://org.swift.docc/documentation/NIO/NIOClientTCPBootstrap/connect(to:)":{"role":"symbol","title":"connect(to:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"connect"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SocketAddress","preciseIdentifier":"s:3NIO13SocketAddressO"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:3NIO15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Channel","preciseIdentifier":"s:3NIO7ChannelP"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Specify the "},{"type":"codeVoice","code":"address"},{"type":"text","text":" to connect to for the TCP "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" that will be established."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/NIOClientTCPBootstrap\/connect(to:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/nioclienttcpbootstrap\/connect(to:)"},"doc://org.swift.docc/documentation/NIO/NIOClientTCPBootstrap/connect(unixDomainSocketPath:)":{"role":"symbol","title":"connect(unixDomainSocketPath:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"connect"},{"kind":"text","text":"("},{"kind":"externalParam","text":"unixDomainSocketPath"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:3NIO15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Channel","preciseIdentifier":"s:3NIO7ChannelP"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Specify the "},{"type":"codeVoice","code":"unixDomainSocket"},{"type":"text","text":" path to connect to for the UDS "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" that will be established."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/NIOClientTCPBootstrap\/connect(unixDomainSocketPath:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/nioclienttcpbootstrap\/connect(unixdomainsocketpath:)"},"doc://org.swift.docc/documentation/NIO/NIOClientTCPBootstrap/channelConvenienceOptions(_:)":{"role":"symbol","title":"channelConvenienceOptions(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"channelConvenienceOptions"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"ChannelOptions","preciseIdentifier":"s:3NIO14ChannelOptionsV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"TCPConvenienceOptions","preciseIdentifier":"s:3NIO14ChannelOptionsV014TCPConvenienceC0V"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"NIOClientTCPBootstrap","preciseIdentifier":"s:3NIO21NIOClientTCPBootstrapV"}],"abstract":[{"type":"text","text":"Specifies some "},{"type":"codeVoice","code":"TCPConvenienceOption"},{"type":"text","text":"s to be applied to the channel."},{"type":"text","text":" "},{"type":"text","text":"These are preferred over regular channel options as they are easier to use and restrict"},{"type":"text","text":" "},{"type":"text","text":"options to those which a normal user would consider."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/NIOClientTCPBootstrap\/channelConvenienceOptions(_:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/nioclienttcpbootstrap\/channelconvenienceoptions(_:)"},"doc://org.swift.docc/documentation/NIO/NIOClientTCPBootstrap/channelInitializer(_:)":{"role":"symbol","title":"channelInitializer(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"channelInitializer"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Channel","preciseIdentifier":"s:3NIO7ChannelP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:3NIO15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"NIOClientTCPBootstrap","preciseIdentifier":"s:3NIO21NIOClientTCPBootstrapV"}],"abstract":[{"type":"text","text":"Initialize the connected "},{"type":"codeVoice","code":"SocketChannel"},{"type":"text","text":" with "},{"type":"codeVoice","code":"initializer"},{"type":"text","text":". The most common task in initializer is to add"},{"type":"text","text":" "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"s to the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/NIOClientTCPBootstrap\/channelInitializer(_:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/nioclienttcpbootstrap\/channelinitializer(_:)"},"doc://org.swift.docc/documentation/NIO/NIOClientTCPBootstrap/init(_:tls:)":{"role":"symbol","title":"init(_:tls:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Bootstrap"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"TLS"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Bootstrap","preciseIdentifier":"s:3NIO21NIOClientTCPBootstrapV_3tlsACx_q_tcAA0bC8ProtocolRz9BootstrapQy_RszAA0B11TLSProviderR_r0_lufcAFL_xmfp"},{"kind":"text","text":", "},{"kind":"externalParam","text":"tls"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TLS","preciseIdentifier":"s:3NIO21NIOClientTCPBootstrapV_3tlsACx_q_tcAA0bC8ProtocolRz9BootstrapQy_RszAA0B11TLSProviderR_r0_lufc3TLSL_q_mfp"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Initialize a "},{"type":"codeVoice","code":"NIOClientTCPBootstrap"},{"type":"text","text":" using the underlying "},{"type":"codeVoice","code":"Bootstrap"},{"type":"text","text":" alongside a compatible "},{"type":"codeVoice","code":"TLS"},{"type":"text","text":" "},{"type":"text","text":"implementation."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/NIOClientTCPBootstrap\/init(_:tls:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/nioclienttcpbootstrap\/init(_:tls:)"},"doc://org.swift.docc/documentation/NIO/NIOClientTCPBootstrap/connect(host:port:)":{"role":"symbol","title":"connect(host:port:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"connect"},{"kind":"text","text":"("},{"kind":"externalParam","text":"host"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"port"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:3NIO15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Channel","preciseIdentifier":"s:3NIO7ChannelP"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Specify the "},{"type":"codeVoice","code":"host"},{"type":"text","text":" and "},{"type":"codeVoice","code":"port"},{"type":"text","text":" to connect to for the TCP "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" that will be established."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/NIOClientTCPBootstrap\/connect(host:port:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/nioclienttcpbootstrap\/connect(host:port:)"},"doc://org.swift.docc/documentation/NIO/NIOClientTCPBootstrap/enableTLS()":{"role":"symbol","title":"enableTLS()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"enableTLS"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"NIOClientTCPBootstrap","preciseIdentifier":"s:3NIO21NIOClientTCPBootstrapV"}],"abstract":[],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/NIOClientTCPBootstrap\/enableTLS()","kind":"symbol","type":"topic","url":"\/documentation\/nio\/nioclienttcpbootstrap\/enabletls()"},"doc://org.swift.docc/documentation/NIO":{"role":"collection","title":"NIO","abstract":[],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO","kind":"symbol","type":"topic","url":"\/documentation\/nio"},"https://github.com/apple/swift-nio-transport-services":{"title":"swift-nio-transport-services","titleInlineContent":[{"type":"codeVoice","code":"swift-nio-transport-services"}],"type":"link","identifier":"https:\/\/github.com\/apple\/swift-nio-transport-services","url":"https:\/\/github.com\/apple\/swift-nio-transport-services"},"doc://org.swift.docc/documentation/NIO/NIOClientTCPBootstrap/underlyingBootstrap":{"role":"symbol","title":"underlyingBootstrap","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"underlyingBootstrap"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NIOClientTCPBootstrapProtocol","preciseIdentifier":"s:3NIO29NIOClientTCPBootstrapProtocolP"}],"abstract":[],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/NIOClientTCPBootstrap\/underlyingBootstrap","kind":"symbol","type":"topic","url":"\/documentation\/nio\/nioclienttcpbootstrap\/underlyingbootstrap"},"doc://org.swift.docc/documentation/NIO/NIOClientTCPBootstrap/connectTimeout(_:)":{"role":"symbol","title":"connectTimeout(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"connectTimeout"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"TimeAmount","preciseIdentifier":"s:3NIO10TimeAmountV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"NIOClientTCPBootstrap","preciseIdentifier":"s:3NIO21NIOClientTCPBootstrapV"}],"abstract":[],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/NIOClientTCPBootstrap\/connectTimeout(_:)","kind":"symbol","type":"topic","url":"\/documentation\/nio\/nioclienttcpbootstrap\/connecttimeout(_:)"}}}