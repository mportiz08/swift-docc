{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"mutating"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"clear"},{"kind":"text","text":"("},{"kind":"externalParam","text":"minimumCapacity"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt32","preciseIdentifier":"s:s6UInt32V"},{"kind":"text","text":")"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"minimumCapacity","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The minimum capacity that will be (re)allocated for this buffer"}]}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This method will allocate if the underlying storage is referenced by another "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":". Even if an"},{"type":"text","text":" "},{"type":"text","text":"allocation is necessary this will be cheaper as the copy of the storage is elided."}]}],"type":"aside","name":"Note"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/nio\/bytebuffer\/clear(minimumcapacity:)-5xy68"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/org.swift.docc\/documentation\/NIO\/ByteBuffer\/clear(minimumCapacity:)-5xy68","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Set both reader index and writer index to "},{"type":"codeVoice","code":"0"},{"type":"text","text":". This will reset the state of this "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" to the state"},{"type":"text","text":" "},{"type":"text","text":"of a freshly allocated one, if possible without allocations. This is the cheapest way to recycle a "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" "},{"type":"text","text":"for a new use-case."}],"kind":"symbol","metadata":{"role":"symbol","title":"clear(minimumCapacity:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"clear"},{"kind":"text","text":"("},{"kind":"externalParam","text":"minimumCapacity"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt32","preciseIdentifier":"s:s6UInt32V"},{"kind":"text","text":")"}],"symbolKind":"method","externalID":"s:3NIO10ByteBufferV5clear15minimumCapacityys6UInt32V_tF","modules":[{"name":"NIO"}],"platforms":[]},"hierarchy":{"paths":[["doc:\/\/org.swift.docc\/documentation\/NIO","doc:\/\/org.swift.docc\/documentation\/NIO\/ByteBuffer"]]},"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use an `Int` as the argument"}]}],"references":{"doc://org.swift.docc/documentation/NIO/ByteBuffer":{"role":"symbol","title":"ByteBuffer","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteBuffer"}],"abstract":[{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or"},{"type":"text","text":" "},{"type":"text","text":"more bytes (octets)."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/ByteBuffer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ByteBuffer"}],"url":"\/documentation\/nio\/bytebuffer"},"doc://org.swift.docc/documentation/NIO":{"role":"collection","title":"NIO","abstract":[],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO","kind":"symbol","type":"topic","url":"\/documentation\/nio"},"doc://org.swift.docc/documentation/NIO/ByteBuffer/clear(minimumCapacity:)-5xy68":{"role":"symbol","title":"clear(minimumCapacity:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"clear"},{"kind":"text","text":"("},{"kind":"externalParam","text":"minimumCapacity"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt32","preciseIdentifier":"s:s6UInt32V"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Set both reader index and writer index to "},{"type":"codeVoice","code":"0"},{"type":"text","text":". This will reset the state of this "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" to the state"},{"type":"text","text":" "},{"type":"text","text":"of a freshly allocated one, if possible without allocations. This is the cheapest way to recycle a "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" "},{"type":"text","text":"for a new use-case."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/ByteBuffer\/clear(minimumCapacity:)-5xy68","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/nio\/bytebuffer\/clear(minimumcapacity:)-5xy68"}}}