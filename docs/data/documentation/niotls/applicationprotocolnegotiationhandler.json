{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ApplicationProtocolNegotiationHandler"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The standard pattern used by applications that want to use ALPN is to select"},{"type":"text","text":" "},{"type":"text","text":"an application protocol based on the result, optionally falling back to some"},{"type":"text","text":" "},{"type":"text","text":"default protocol. To do this in SwiftNIO requires that the channel pipeline be"},{"type":"text","text":" "},{"type":"text","text":"reconfigured based on the result of the ALPN negotiation. This channel handler"},{"type":"text","text":" "},{"type":"text","text":"encapsulates that logic in a generic form that doesnâ€™t depend on the specific"},{"type":"text","text":" "},{"type":"text","text":"TLS implementation in use by using "},{"type":"codeVoice","code":"TLSUserEvent"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The user of this channel handler provides a single closure that is called with"},{"type":"text","text":" "},{"type":"text","text":"an "},{"type":"codeVoice","code":"ALPNResult"},{"type":"text","text":" when the ALPN negotiation is complete. Based on that result"},{"type":"text","text":" "},{"type":"text","text":"the user is free to reconfigure the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" as required, and should"},{"type":"text","text":" "},{"type":"text","text":"return an "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" that will complete when the pipeline is reconfigured."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Until the "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" completes, this channel handler will buffer inbound"},{"type":"text","text":" "},{"type":"text","text":"data. When the "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" completes, the buffered data will be replayed"},{"type":"text","text":" "},{"type":"text","text":"down the channel. Then, finally, this channel handler will automatically remove"},{"type":"text","text":" "},{"type":"text","text":"itself from the channel pipeline, leaving the pipeline in its final"},{"type":"text","text":" "},{"type":"text","text":"configuration."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/niotls\/applicationprotocolnegotiationhandler"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelHandler","doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelInboundHandler","doc:\/\/org.swift.docc\/documentation\/NIO\/RemovableChannelHandler"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/org.swift.docc\/documentation\/NIOTLS\/ApplicationProtocolNegotiationHandler","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A helper "},{"type":"codeVoice","code":"ChannelInboundHandler"},{"type":"text","text":" that makes it easy to swap channel pipelines"},{"type":"text","text":" "},{"type":"text","text":"based on the result of an ALPN negotiation."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ApplicationProtocolNegotiationHandler"}],"title":"ApplicationProtocolNegotiationHandler","roleHeading":"Class","role":"symbol","symbolKind":"class","externalID":"s:6NIOTLS37ApplicationProtocolNegotiationHandlerC","modules":[{"name":"NIOTLS"}],"navigatorTitle":[{"kind":"identifier","text":"ApplicationProtocolNegotiationHandler"}]},"hierarchy":{"paths":[["doc:\/\/org.swift.docc\/documentation\/NIOTLS"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/org.swift.docc\/documentation\/NIOTLS\/ApplicationProtocolNegotiationHandler\/init(alpnCompleteHandler:)-1d0b5","doc:\/\/org.swift.docc\/documentation\/NIOTLS\/ApplicationProtocolNegotiationHandler\/init(alpnCompleteHandler:)-1j1fl"]},{"title":"Instance Methods","identifiers":["doc:\/\/org.swift.docc\/documentation\/NIOTLS\/ApplicationProtocolNegotiationHandler\/channelRead(context:data:)","doc:\/\/org.swift.docc\/documentation\/NIOTLS\/ApplicationProtocolNegotiationHandler\/userInboundEventTriggered(context:event:)"]},{"title":"Type Aliases","identifiers":["doc:\/\/org.swift.docc\/documentation\/NIOTLS\/ApplicationProtocolNegotiationHandler\/InboundIn","doc:\/\/org.swift.docc\/documentation\/NIOTLS\/ApplicationProtocolNegotiationHandler\/InboundOut"]},{"title":"Default Implementations","identifiers":["doc:\/\/org.swift.docc\/documentation\/NIOTLS\/ApplicationProtocolNegotiationHandler\/ChannelHandler-Implementations","doc:\/\/org.swift.docc\/documentation\/NIOTLS\/ApplicationProtocolNegotiationHandler\/ChannelInboundHandler-Implementations","doc:\/\/org.swift.docc\/documentation\/NIOTLS\/ApplicationProtocolNegotiationHandler\/RemovableChannelHandler-Implementations"],"generated":true}],"references":{"doc://org.swift.docc/documentation/NIOTLS/ApplicationProtocolNegotiationHandler/userInboundEventTriggered(context:event:)":{"role":"symbol","title":"userInboundEventTriggered(context:event:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"userInboundEventTriggered"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:3NIO21ChannelHandlerContextC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"event"},{"kind":"text","text":": "},{"kind":"keyword","text":"Any"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Called when a user inbound event has been triggered."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIOTLS\/ApplicationProtocolNegotiationHandler\/userInboundEventTriggered(context:event:)","kind":"symbol","type":"topic","url":"\/documentation\/niotls\/applicationprotocolnegotiationhandler\/userinboundeventtriggered(context:event:)"},"doc://org.swift.docc/documentation/NIOTLS/ApplicationProtocolNegotiationHandler/InboundIn":{"role":"symbol","title":"ApplicationProtocolNegotiationHandler.InboundIn","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"InboundIn"}],"abstract":[{"type":"text","text":"The type of the inbound data which is wrapped in "},{"type":"codeVoice","code":"NIOAny"},{"type":"text","text":"."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIOTLS\/ApplicationProtocolNegotiationHandler\/InboundIn","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"InboundIn"}],"url":"\/documentation\/niotls\/applicationprotocolnegotiationhandler\/inboundin"},"doc://org.swift.docc/documentation/NIOTLS/ApplicationProtocolNegotiationHandler/InboundOut":{"role":"symbol","title":"ApplicationProtocolNegotiationHandler.InboundOut","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"InboundOut"}],"abstract":[{"type":"text","text":"The type of the inbound data which will be forwarded to the next "},{"type":"codeVoice","code":"ChannelInboundHandler"},{"type":"text","text":" in the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIOTLS\/ApplicationProtocolNegotiationHandler\/InboundOut","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"InboundOut"}],"url":"\/documentation\/niotls\/applicationprotocolnegotiationhandler\/inboundout"},"doc://org.swift.docc/documentation/NIOTLS/ApplicationProtocolNegotiationHandler/ChannelHandler-Implementations":{"role":"collectionGroup","title":"ChannelHandler Implementations","abstract":[],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIOTLS\/ApplicationProtocolNegotiationHandler\/ChannelHandler-Implementations","kind":"article","type":"topic","url":"\/documentation\/niotls\/applicationprotocolnegotiationhandler\/channelhandler-implementations"},"doc://org.swift.docc/documentation/NIO/ChannelInboundHandler":{"role":"symbol","title":"ChannelInboundHandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelInboundHandler"}],"abstract":[{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" which handles inbound I\/O events for a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelInboundHandler","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ChannelInboundHandler"}],"url":"\/documentation\/nio\/channelinboundhandler"},"doc://org.swift.docc/documentation/NIOTLS/ApplicationProtocolNegotiationHandler/channelRead(context:data:)":{"role":"symbol","title":"channelRead(context:data:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"channelRead"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:3NIO21ChannelHandlerContextC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NIOAny","preciseIdentifier":"s:3NIO6NIOAnyV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Called when some data has been read from the remote peer."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIOTLS\/ApplicationProtocolNegotiationHandler\/channelRead(context:data:)","kind":"symbol","type":"topic","url":"\/documentation\/niotls\/applicationprotocolnegotiationhandler\/channelread(context:data:)"},"doc://org.swift.docc/documentation/NIOTLS/ApplicationProtocolNegotiationHandler/init(alpnCompleteHandler:)-1d0b5":{"role":"symbol","title":"init(alpnCompleteHandler:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"alpnCompleteHandler"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"ALPNResult","preciseIdentifier":"s:6NIOTLS10ALPNResultO"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:3NIO15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Create an "},{"type":"codeVoice","code":"ApplicationProtocolNegotiationHandler"},{"type":"text","text":" with the given completion"},{"type":"text","text":" "},{"type":"text","text":"callback."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIOTLS\/ApplicationProtocolNegotiationHandler\/init(alpnCompleteHandler:)-1d0b5","kind":"symbol","type":"topic","url":"\/documentation\/niotls\/applicationprotocolnegotiationhandler\/init(alpncompletehandler:)-1d0b5"},"doc://org.swift.docc/documentation/NIOTLS/ApplicationProtocolNegotiationHandler/init(alpnCompleteHandler:)-1j1fl":{"role":"symbol","title":"init(alpnCompleteHandler:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"alpnCompleteHandler"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"ALPNResult","preciseIdentifier":"s:6NIOTLS10ALPNResultO"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Channel","preciseIdentifier":"s:3NIO7ChannelP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:3NIO15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Create an "},{"type":"codeVoice","code":"ApplicationProtocolNegotiationHandler"},{"type":"text","text":" with the given completion"},{"type":"text","text":" "},{"type":"text","text":"callback."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIOTLS\/ApplicationProtocolNegotiationHandler\/init(alpnCompleteHandler:)-1j1fl","kind":"symbol","type":"topic","url":"\/documentation\/niotls\/applicationprotocolnegotiationhandler\/init(alpncompletehandler:)-1j1fl"},"doc://org.swift.docc/documentation/NIO/ChannelHandler":{"role":"symbol","title":"ChannelHandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelHandler"}],"abstract":[{"type":"text","text":"You should "},{"type":"emphasis","inlineContent":[{"type":"text","text":"never"}]},{"type":"text","text":" implement this protocol directly. Please implement one of its sub-protocols."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelHandler","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ChannelHandler"}],"url":"\/documentation\/nio\/channelhandler"},"doc://org.swift.docc/documentation/NIOTLS/ApplicationProtocolNegotiationHandler":{"role":"symbol","title":"ApplicationProtocolNegotiationHandler","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ApplicationProtocolNegotiationHandler"}],"abstract":[{"type":"text","text":"A helper "},{"type":"codeVoice","code":"ChannelInboundHandler"},{"type":"text","text":" that makes it easy to swap channel pipelines"},{"type":"text","text":" "},{"type":"text","text":"based on the result of an ALPN negotiation."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIOTLS\/ApplicationProtocolNegotiationHandler","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ApplicationProtocolNegotiationHandler"}],"url":"\/documentation\/niotls\/applicationprotocolnegotiationhandler"},"doc://org.swift.docc/documentation/NIOTLS/ApplicationProtocolNegotiationHandler/RemovableChannelHandler-Implementations":{"role":"collectionGroup","title":"RemovableChannelHandler Implementations","abstract":[],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIOTLS\/ApplicationProtocolNegotiationHandler\/RemovableChannelHandler-Implementations","kind":"article","type":"topic","url":"\/documentation\/niotls\/applicationprotocolnegotiationhandler\/removablechannelhandler-implementations"},"doc://org.swift.docc/documentation/NIO/RemovableChannelHandler":{"role":"symbol","title":"RemovableChannelHandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RemovableChannelHandler"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"RemovableChannelHandler"},{"type":"text","text":" is a "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" that can be dynamically removed from a "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" whilst"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" is operating normally."},{"type":"text","text":" "},{"type":"text","text":"A "},{"type":"codeVoice","code":"RemovableChannelHandler"},{"type":"text","text":" is required to remove itself from the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" (using"},{"type":"text","text":" "},{"type":"codeVoice","code":"ChannelHandlerContext.removeHandler"},{"type":"text","text":") as soon as possible."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/RemovableChannelHandler","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"RemovableChannelHandler"}],"url":"\/documentation\/nio\/removablechannelhandler"},"doc://org.swift.docc/documentation/NIOTLS":{"role":"collection","title":"NIOTLS","abstract":[],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIOTLS","kind":"symbol","type":"topic","url":"\/documentation\/niotls"},"doc://org.swift.docc/documentation/NIOTLS/ApplicationProtocolNegotiationHandler/ChannelInboundHandler-Implementations":{"role":"collectionGroup","title":"ChannelInboundHandler Implementations","abstract":[],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIOTLS\/ApplicationProtocolNegotiationHandler\/ChannelInboundHandler-Implementations","kind":"article","type":"topic","url":"\/documentation\/niotls\/applicationprotocolnegotiationhandler\/channelinboundhandler-implementations"}}}