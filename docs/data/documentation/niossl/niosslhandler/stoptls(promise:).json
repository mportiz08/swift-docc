{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"stopTLS"},{"kind":"text","text":"("},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopPromise","preciseIdentifier":"s:3NIO16EventLoopPromiseV","text":"EventLoopPromise"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">?)"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"promise","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An "},{"type":"codeVoice","code":"EventLoopPromise"},{"type":"text","text":" that will be completed when the unwrapping has"},{"type":"text","text":" "},{"type":"text","text":"completed."}]}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This will send a CLOSE_NOTIFY and wait for the corresponding CLOSE_NOTIFY. When that next"},{"type":"text","text":" "},{"type":"text","text":"CLOSE_NOTIFY is received, this handler will pass on all pending writes and remove itself"},{"type":"text","text":" "},{"type":"text","text":"from the channel pipeline. If the shutdown times out then an error will fire down the"},{"type":"text","text":" "},{"type":"text","text":"pipeline, this handler will remove itself from the pipeline, but the channel will not be"},{"type":"text","text":" "},{"type":"text","text":"automatically closed."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This function "},{"type":"strong","inlineContent":[{"type":"text","text":"is not thread-safe"}]},{"type":"text","text":": you "},{"type":"strong","inlineContent":[{"type":"text","text":"must"}]},{"type":"text","text":" call it from the correct event"},{"type":"text","text":" "},{"type":"text","text":"loop thread."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/niossl\/niosslhandler\/stoptls(promise:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/org.swift.docc\/documentation\/NIOSSL\/NIOSSLHandler\/stopTLS(promise:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Called to instruct this handler to perform an orderly TLS shutdown and then remove itself"},{"type":"text","text":" "},{"type":"text","text":"from the pipeline. This will leave the connection established, but remove the TLS wrapper"},{"type":"text","text":" "},{"type":"text","text":"from it."}],"kind":"symbol","metadata":{"role":"symbol","title":"stopTLS(promise:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"stopTLS"},{"kind":"text","text":"("},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoopPromise","preciseIdentifier":"s:3NIO16EventLoopPromiseV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">?)"}],"symbolKind":"method","externalID":"s:6NIOSSL13NIOSSLHandlerC7stopTLS7promisey3NIO16EventLoopPromiseVyytGSg_tF","extendedModule":"NIOSSL","modules":[{"name":"NIOSSL"}]},"hierarchy":{"paths":[["doc:\/\/org.swift.docc\/documentation\/NIOSSL","doc:\/\/org.swift.docc\/documentation\/NIOSSL\/NIOSSLHandler"]]},"references":{"doc://org.swift.docc/documentation/NIOSSL/NIOSSLHandler/stopTLS(promise:)":{"role":"symbol","title":"stopTLS(promise:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"stopTLS"},{"kind":"text","text":"("},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoopPromise","preciseIdentifier":"s:3NIO16EventLoopPromiseV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Called to instruct this handler to perform an orderly TLS shutdown and then remove itself"},{"type":"text","text":" "},{"type":"text","text":"from the pipeline. This will leave the connection established, but remove the TLS wrapper"},{"type":"text","text":" "},{"type":"text","text":"from it."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIOSSL\/NIOSSLHandler\/stopTLS(promise:)","kind":"symbol","type":"topic","url":"\/documentation\/niossl\/niosslhandler\/stoptls(promise:)"},"doc://org.swift.docc/documentation/NIOSSL/NIOSSLHandler":{"role":"symbol","title":"NIOSSLHandler","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOSSLHandler"}],"abstract":[{"type":"text","text":"The base class for all NIOSSL handlers. This class cannot actually be instantiated by"},{"type":"text","text":" "},{"type":"text","text":"users directly: instead, users must select which mode they would like their handler to"},{"type":"text","text":" "},{"type":"text","text":"operate in, client or server."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIOSSL\/NIOSSLHandler","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"NIOSSLHandler"}],"url":"\/documentation\/niossl\/niosslhandler"},"doc://org.swift.docc/documentation/NIO/EventLoopPromise":{"role":"symbol","title":"EventLoopPromise","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopPromise"}],"abstract":[{"type":"text","text":"A promise to provide a result later."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/EventLoopPromise","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EventLoopPromise"}],"url":"\/documentation\/nio\/eventlooppromise"},"doc://org.swift.docc/documentation/NIOSSL":{"role":"collection","title":"NIOSSL","abstract":[],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIOSSL","kind":"symbol","type":"topic","url":"\/documentation\/niossl"}}}