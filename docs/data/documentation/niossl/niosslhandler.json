{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOSSLHandler"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This class exists to deal with the reality that for almost the entirety of the lifetime"},{"type":"text","text":" "},{"type":"text","text":"of a TLS connection there is no meaningful distinction between a server and a client."},{"type":"text","text":" "},{"type":"text","text":"For this reason almost the entirety of the implementation for the channel and server"},{"type":"text","text":" "},{"type":"text","text":"handlers in NIOSSL is shared, in the form of this parent class."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/niossl\/niosslhandler"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/org.swift.docc\/documentation\/NIOSSL\/NIOSSLClientHandler","doc:\/\/org.swift.docc\/documentation\/NIOSSL\/NIOSSLServerHandler"],"kind":"relationships","title":"Inherited By","type":"inheritedBy"},{"identifiers":["doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelHandler","doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelInboundHandler","doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelOutboundHandler","doc:\/\/org.swift.docc\/documentation\/NIO\/RemovableChannelHandler"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/org.swift.docc\/documentation\/NIOSSL\/NIOSSLHandler","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"The base class for all NIOSSL handlers. This class cannot actually be instantiated by"},{"type":"text","text":" "},{"type":"text","text":"users directly: instead, users must select which mode they would like their handler to"},{"type":"text","text":" "},{"type":"text","text":"operate in, client or server."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOSSLHandler"}],"title":"NIOSSLHandler","roleHeading":"Class","role":"symbol","symbolKind":"class","externalID":"s:6NIOSSL13NIOSSLHandlerC","modules":[{"name":"NIOSSL"}],"navigatorTitle":[{"kind":"identifier","text":"NIOSSLHandler"}]},"hierarchy":{"paths":[["doc:\/\/org.swift.docc\/documentation\/NIOSSL"]]},"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/org.swift.docc\/documentation\/NIOSSL\/NIOSSLHandler\/channelActive(context:)","doc:\/\/org.swift.docc\/documentation\/NIOSSL\/NIOSSLHandler\/channelInactive(context:)","doc:\/\/org.swift.docc\/documentation\/NIOSSL\/NIOSSLHandler\/channelRead(context:data:)","doc:\/\/org.swift.docc\/documentation\/NIOSSL\/NIOSSLHandler\/channelReadComplete(context:)","doc:\/\/org.swift.docc\/documentation\/NIOSSL\/NIOSSLHandler\/close(context:mode:promise:)","doc:\/\/org.swift.docc\/documentation\/NIOSSL\/NIOSSLHandler\/flush(context:)","doc:\/\/org.swift.docc\/documentation\/NIOSSL\/NIOSSLHandler\/handlerAdded(context:)","doc:\/\/org.swift.docc\/documentation\/NIOSSL\/NIOSSLHandler\/handlerRemoved(context:)","doc:\/\/org.swift.docc\/documentation\/NIOSSL\/NIOSSLHandler\/stopTLS(promise:)","doc:\/\/org.swift.docc\/documentation\/NIOSSL\/NIOSSLHandler\/write(context:data:promise:)"]},{"title":"Type Aliases","identifiers":["doc:\/\/org.swift.docc\/documentation\/NIOSSL\/NIOSSLHandler\/InboundIn","doc:\/\/org.swift.docc\/documentation\/NIOSSL\/NIOSSLHandler\/InboundOut","doc:\/\/org.swift.docc\/documentation\/NIOSSL\/NIOSSLHandler\/OutboundIn","doc:\/\/org.swift.docc\/documentation\/NIOSSL\/NIOSSLHandler\/OutboundOut"]},{"title":"Default Implementations","identifiers":["doc:\/\/org.swift.docc\/documentation\/NIOSSL\/NIOSSLHandler\/ChannelInboundHandler-Implementations","doc:\/\/org.swift.docc\/documentation\/NIOSSL\/NIOSSLHandler\/ChannelOutboundHandler-Implementations","doc:\/\/org.swift.docc\/documentation\/NIOSSL\/NIOSSLHandler\/RemovableChannelHandler-Implementations"],"generated":true}],"references":{"doc://org.swift.docc/documentation/NIO/ChannelOutboundHandler":{"role":"symbol","title":"ChannelOutboundHandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelOutboundHandler"}],"abstract":[{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" which handles outbound I\/O events or intercept an outbound I\/O operation for a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelOutboundHandler","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ChannelOutboundHandler"}],"url":"\/documentation\/nio\/channeloutboundhandler"},"doc://org.swift.docc/documentation/NIOSSL/NIOSSLHandler":{"role":"symbol","title":"NIOSSLHandler","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOSSLHandler"}],"abstract":[{"type":"text","text":"The base class for all NIOSSL handlers. This class cannot actually be instantiated by"},{"type":"text","text":" "},{"type":"text","text":"users directly: instead, users must select which mode they would like their handler to"},{"type":"text","text":" "},{"type":"text","text":"operate in, client or server."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIOSSL\/NIOSSLHandler","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"NIOSSLHandler"}],"url":"\/documentation\/niossl\/niosslhandler"},"doc://org.swift.docc/documentation/NIOSSL/NIOSSLHandler/InboundIn":{"role":"symbol","title":"NIOSSLHandler.InboundIn","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"InboundIn"}],"abstract":[{"type":"text","text":"The type of the inbound data which is wrapped in "},{"type":"codeVoice","code":"NIOAny"},{"type":"text","text":"."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIOSSL\/NIOSSLHandler\/InboundIn","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"InboundIn"}],"url":"\/documentation\/niossl\/niosslhandler\/inboundin"},"doc://org.swift.docc/documentation/NIOSSL/NIOSSLHandler/channelReadComplete(context:)":{"role":"symbol","title":"channelReadComplete(context:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"channelReadComplete"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:3NIO21ChannelHandlerContextC"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Called when the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" has completed its current read loop, either because no more data is available to read from the transport at this time, or because the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" needs to yield to the event loop to process other I\/O events for other "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"s."},{"type":"text","text":" "},{"type":"text","text":"If "},{"type":"codeVoice","code":"ChannelOptions.autoRead"},{"type":"text","text":" is "},{"type":"codeVoice","code":"false"},{"type":"text","text":" no further read attempt will be made until "},{"type":"codeVoice","code":"ChannelHandlerContext.read"},{"type":"text","text":" or "},{"type":"codeVoice","code":"Channel.read"},{"type":"text","text":" is explicitly called."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIOSSL\/NIOSSLHandler\/channelReadComplete(context:)","kind":"symbol","type":"topic","url":"\/documentation\/niossl\/niosslhandler\/channelreadcomplete(context:)"},"doc://org.swift.docc/documentation/NIOSSL/NIOSSLHandler/handlerRemoved(context:)":{"role":"symbol","title":"handlerRemoved(context:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"handlerRemoved"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:3NIO21ChannelHandlerContextC"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Called when this "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" is removed from the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIOSSL\/NIOSSLHandler\/handlerRemoved(context:)","kind":"symbol","type":"topic","url":"\/documentation\/niossl\/niosslhandler\/handlerremoved(context:)"},"doc://org.swift.docc/documentation/NIOSSL/NIOSSLHandler/InboundOut":{"role":"symbol","title":"NIOSSLHandler.InboundOut","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"InboundOut"}],"abstract":[{"type":"text","text":"The type of the inbound data which will be forwarded to the next "},{"type":"codeVoice","code":"ChannelInboundHandler"},{"type":"text","text":" in the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIOSSL\/NIOSSLHandler\/InboundOut","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"InboundOut"}],"url":"\/documentation\/niossl\/niosslhandler\/inboundout"},"doc://org.swift.docc/documentation/NIOSSL/NIOSSLServerHandler":{"role":"symbol","title":"NIOSSLServerHandler","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOSSLServerHandler"}],"abstract":[{"type":"text","text":"A channel handler that wraps a channel in TLS using NIOSSL. This"},{"type":"text","text":" "},{"type":"text","text":"handler can be used in channels that are acting as the server in"},{"type":"text","text":" "},{"type":"text","text":"the TLS dialog. For client connections, use the "},{"type":"codeVoice","code":"NIOSSLClientHandler"},{"type":"text","text":"."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIOSSL\/NIOSSLServerHandler","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"NIOSSLServerHandler"}],"url":"\/documentation\/niossl\/niosslserverhandler"},"doc://org.swift.docc/documentation/NIOSSL/NIOSSLHandler/OutboundOut":{"role":"symbol","title":"NIOSSLHandler.OutboundOut","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"OutboundOut"}],"abstract":[{"type":"text","text":"The type of the outbound data which will be forwarded to the next "},{"type":"codeVoice","code":"ChannelOutboundHandler"},{"type":"text","text":" in the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIOSSL\/NIOSSLHandler\/OutboundOut","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"OutboundOut"}],"url":"\/documentation\/niossl\/niosslhandler\/outboundout"},"doc://org.swift.docc/documentation/NIOSSL/NIOSSLHandler/flush(context:)":{"role":"symbol","title":"flush(context:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"flush"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:3NIO21ChannelHandlerContextC"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Called to request that the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" flush all pending writes. The flush operation will try to flush out all previous written messages"},{"type":"text","text":" "},{"type":"text","text":"that are pending."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIOSSL\/NIOSSLHandler\/flush(context:)","kind":"symbol","type":"topic","url":"\/documentation\/niossl\/niosslhandler\/flush(context:)"},"doc://org.swift.docc/documentation/NIO/ChannelInboundHandler":{"role":"symbol","title":"ChannelInboundHandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelInboundHandler"}],"abstract":[{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" which handles inbound I\/O events for a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelInboundHandler","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ChannelInboundHandler"}],"url":"\/documentation\/nio\/channelinboundhandler"},"doc://org.swift.docc/documentation/NIOSSL":{"role":"collection","title":"NIOSSL","abstract":[],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIOSSL","kind":"symbol","type":"topic","url":"\/documentation\/niossl"},"doc://org.swift.docc/documentation/NIO/RemovableChannelHandler":{"role":"symbol","title":"RemovableChannelHandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RemovableChannelHandler"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"RemovableChannelHandler"},{"type":"text","text":" is a "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" that can be dynamically removed from a "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" whilst"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" is operating normally."},{"type":"text","text":" "},{"type":"text","text":"A "},{"type":"codeVoice","code":"RemovableChannelHandler"},{"type":"text","text":" is required to remove itself from the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" (using"},{"type":"text","text":" "},{"type":"codeVoice","code":"ChannelHandlerContext.removeHandler"},{"type":"text","text":") as soon as possible."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/RemovableChannelHandler","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"RemovableChannelHandler"}],"url":"\/documentation\/nio\/removablechannelhandler"},"doc://org.swift.docc/documentation/NIOSSL/NIOSSLHandler/OutboundIn":{"role":"symbol","title":"NIOSSLHandler.OutboundIn","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"OutboundIn"}],"abstract":[{"type":"text","text":"The type of the outbound data which is wrapped in "},{"type":"codeVoice","code":"NIOAny"},{"type":"text","text":"."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIOSSL\/NIOSSLHandler\/OutboundIn","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"OutboundIn"}],"url":"\/documentation\/niossl\/niosslhandler\/outboundin"},"doc://org.swift.docc/documentation/NIOSSL/NIOSSLHandler/channelActive(context:)":{"role":"symbol","title":"channelActive(context:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"channelActive"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:3NIO21ChannelHandlerContextC"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Called when the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" has become active, and is able to send and receive data."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIOSSL\/NIOSSLHandler\/channelActive(context:)","kind":"symbol","type":"topic","url":"\/documentation\/niossl\/niosslhandler\/channelactive(context:)"},"doc://org.swift.docc/documentation/NIOSSL/NIOSSLHandler/channelRead(context:data:)":{"role":"symbol","title":"channelRead(context:data:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"channelRead"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:3NIO21ChannelHandlerContextC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NIOAny","preciseIdentifier":"s:3NIO6NIOAnyV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Called when some data has been read from the remote peer."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIOSSL\/NIOSSLHandler\/channelRead(context:data:)","kind":"symbol","type":"topic","url":"\/documentation\/niossl\/niosslhandler\/channelread(context:data:)"},"doc://org.swift.docc/documentation/NIOSSL/NIOSSLHandler/write(context:data:promise:)":{"role":"symbol","title":"write(context:data:promise:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"write"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:3NIO21ChannelHandlerContextC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NIOAny","preciseIdentifier":"s:3NIO6NIOAnyV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoopPromise","preciseIdentifier":"s:3NIO16EventLoopPromiseV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Called to request a write operation. The write operation will write the messages through the"},{"type":"text","text":" "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":". Those are then ready to be flushed to the actual "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" when"},{"type":"text","text":" "},{"type":"codeVoice","code":"Channel.flush"},{"type":"text","text":" or "},{"type":"codeVoice","code":"ChannelHandlerContext.flush"},{"type":"text","text":" is called."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIOSSL\/NIOSSLHandler\/write(context:data:promise:)","kind":"symbol","type":"topic","url":"\/documentation\/niossl\/niosslhandler\/write(context:data:promise:)"},"doc://org.swift.docc/documentation/NIO/ChannelHandler":{"role":"symbol","title":"ChannelHandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelHandler"}],"abstract":[{"type":"text","text":"You should "},{"type":"emphasis","inlineContent":[{"type":"text","text":"never"}]},{"type":"text","text":" implement this protocol directly. Please implement one of its sub-protocols."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIO\/ChannelHandler","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ChannelHandler"}],"url":"\/documentation\/nio\/channelhandler"},"doc://org.swift.docc/documentation/NIOSSL/NIOSSLHandler/ChannelInboundHandler-Implementations":{"role":"collectionGroup","title":"ChannelInboundHandler Implementations","abstract":[],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIOSSL\/NIOSSLHandler\/ChannelInboundHandler-Implementations","kind":"article","type":"topic","url":"\/documentation\/niossl\/niosslhandler\/channelinboundhandler-implementations"},"doc://org.swift.docc/documentation/NIOSSL/NIOSSLHandler/handlerAdded(context:)":{"role":"symbol","title":"handlerAdded(context:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"handlerAdded"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:3NIO21ChannelHandlerContextC"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Called when this "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" is added to the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIOSSL\/NIOSSLHandler\/handlerAdded(context:)","kind":"symbol","type":"topic","url":"\/documentation\/niossl\/niosslhandler\/handleradded(context:)"},"doc://org.swift.docc/documentation/NIOSSL/NIOSSLHandler/ChannelOutboundHandler-Implementations":{"role":"collectionGroup","title":"ChannelOutboundHandler Implementations","abstract":[],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIOSSL\/NIOSSLHandler\/ChannelOutboundHandler-Implementations","kind":"article","type":"topic","url":"\/documentation\/niossl\/niosslhandler\/channeloutboundhandler-implementations"},"doc://org.swift.docc/documentation/NIOSSL/NIOSSLClientHandler":{"role":"symbol","title":"NIOSSLClientHandler","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOSSLClientHandler"}],"abstract":[{"type":"text","text":"A channel handler that wraps a channel in TLS using NIOSSL."},{"type":"text","text":" "},{"type":"text","text":"This handler can be used in channels that are acting as the client"},{"type":"text","text":" "},{"type":"text","text":"in the TLS dialog. For server connections, use the "},{"type":"codeVoice","code":"NIOSSLServerHandler"},{"type":"text","text":"."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIOSSL\/NIOSSLClientHandler","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"NIOSSLClientHandler"}],"url":"\/documentation\/niossl\/niosslclienthandler"},"doc://org.swift.docc/documentation/NIOSSL/NIOSSLHandler/RemovableChannelHandler-Implementations":{"role":"collectionGroup","title":"RemovableChannelHandler Implementations","abstract":[],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIOSSL\/NIOSSLHandler\/RemovableChannelHandler-Implementations","kind":"article","type":"topic","url":"\/documentation\/niossl\/niosslhandler\/removablechannelhandler-implementations"},"doc://org.swift.docc/documentation/NIOSSL/NIOSSLHandler/stopTLS(promise:)":{"role":"symbol","title":"stopTLS(promise:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"stopTLS"},{"kind":"text","text":"("},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoopPromise","preciseIdentifier":"s:3NIO16EventLoopPromiseV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Called to instruct this handler to perform an orderly TLS shutdown and then remove itself"},{"type":"text","text":" "},{"type":"text","text":"from the pipeline. This will leave the connection established, but remove the TLS wrapper"},{"type":"text","text":" "},{"type":"text","text":"from it."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIOSSL\/NIOSSLHandler\/stopTLS(promise:)","kind":"symbol","type":"topic","url":"\/documentation\/niossl\/niosslhandler\/stoptls(promise:)"},"doc://org.swift.docc/documentation/NIOSSL/NIOSSLHandler/close(context:mode:promise:)":{"role":"symbol","title":"close(context:mode:promise:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"close"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:3NIO21ChannelHandlerContextC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"mode"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CloseMode","preciseIdentifier":"s:3NIO9CloseModeO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoopPromise","preciseIdentifier":"s:3NIO16EventLoopPromiseV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Called to request that the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" close itself down`."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIOSSL\/NIOSSLHandler\/close(context:mode:promise:)","kind":"symbol","type":"topic","url":"\/documentation\/niossl\/niosslhandler\/close(context:mode:promise:)"},"doc://org.swift.docc/documentation/NIOSSL/NIOSSLHandler/channelInactive(context:)":{"role":"symbol","title":"channelInactive(context:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"channelInactive"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:3NIO21ChannelHandlerContextC"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Called when the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" has become inactive and is no longer able to send and receive data`."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/NIOSSL\/NIOSSLHandler\/channelInactive(context:)","kind":"symbol","type":"topic","url":"\/documentation\/niossl\/niosslhandler\/channelinactive(context:)"}}}