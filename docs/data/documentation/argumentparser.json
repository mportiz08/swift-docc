{"variants":[{"paths":["\/documentation\/argumentparser"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"identifier":{"url":"doc:\/\/org.swift.docc\/documentation\/ArgumentParser","interfaceLanguage":"swift"},"topicSections":[{"title":"Protocols","identifiers":["doc:\/\/org.swift.docc\/documentation\/ArgumentParser\/EnumerableFlag","doc:\/\/org.swift.docc\/documentation\/ArgumentParser\/ExpressibleByArgument","doc:\/\/org.swift.docc\/documentation\/ArgumentParser\/ParsableArguments","doc:\/\/org.swift.docc\/documentation\/ArgumentParser\/ParsableCommand"]},{"title":"Structures","identifiers":["doc:\/\/org.swift.docc\/documentation\/ArgumentParser\/Argument","doc:\/\/org.swift.docc\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy","doc:\/\/org.swift.docc\/documentation\/ArgumentParser\/ArgumentHelp","doc:\/\/org.swift.docc\/documentation\/ArgumentParser\/ArrayParsingStrategy","doc:\/\/org.swift.docc\/documentation\/ArgumentParser\/CleanExit","doc:\/\/org.swift.docc\/documentation\/ArgumentParser\/CommandConfiguration","doc:\/\/org.swift.docc\/documentation\/ArgumentParser\/CompletionKind","doc:\/\/org.swift.docc\/documentation\/ArgumentParser\/CompletionShell","doc:\/\/org.swift.docc\/documentation\/ArgumentParser\/ExitCode","doc:\/\/org.swift.docc\/documentation\/ArgumentParser\/Flag","doc:\/\/org.swift.docc\/documentation\/ArgumentParser\/FlagExclusivity","doc:\/\/org.swift.docc\/documentation\/ArgumentParser\/FlagInversion","doc:\/\/org.swift.docc\/documentation\/ArgumentParser\/NameSpecification","doc:\/\/org.swift.docc\/documentation\/ArgumentParser\/Option","doc:\/\/org.swift.docc\/documentation\/ArgumentParser\/OptionGroup","doc:\/\/org.swift.docc\/documentation\/ArgumentParser\/SingleValueParsingStrategy","doc:\/\/org.swift.docc\/documentation\/ArgumentParser\/ValidationError"]}],"kind":"symbol","metadata":{"roleHeading":"Tool","externalID":"ArgumentParser","title":"ArgumentParser","symbolKind":"module","role":"collection","modules":[{"name":"ArgumentParser"}]},"hierarchy":{"paths":[[]]},"references":{"doc://org.swift.docc/documentation/ArgumentParser/ArrayParsingStrategy":{"role":"symbol","title":"ArrayParsingStrategy","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ArrayParsingStrategy"}],"abstract":[{"type":"text","text":"The strategy to use when parsing multiple values from "},{"type":"codeVoice","code":"@Option"},{"type":"text","text":" arguments into an"},{"type":"text","text":" "},{"type":"text","text":"array."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/ArgumentParser\/ArrayParsingStrategy","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ArrayParsingStrategy"}],"url":"\/documentation\/argumentparser\/arrayparsingstrategy"},"doc://org.swift.docc/documentation/ArgumentParser/ArgumentArrayParsingStrategy":{"role":"symbol","title":"ArgumentArrayParsingStrategy","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ArgumentArrayParsingStrategy"}],"abstract":[{"type":"text","text":"The strategy to use when parsing multiple values from positional arguments"},{"type":"text","text":" "},{"type":"text","text":"into an array."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ArgumentArrayParsingStrategy"}],"url":"\/documentation\/argumentparser\/argumentarrayparsingstrategy"},"doc://org.swift.docc/documentation/ArgumentParser/FlagInversion":{"role":"symbol","title":"FlagInversion","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FlagInversion"}],"abstract":[{"type":"text","text":"The options for converting a Boolean flag into a "},{"type":"codeVoice","code":"true"},{"type":"text","text":"\/"},{"type":"codeVoice","code":"false"},{"type":"text","text":" pair."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/ArgumentParser\/FlagInversion","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FlagInversion"}],"url":"\/documentation\/argumentparser\/flaginversion"},"doc://org.swift.docc/documentation/ArgumentParser/EnumerableFlag":{"role":"symbol","title":"EnumerableFlag","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EnumerableFlag"}],"abstract":[{"type":"text","text":"A type that represents the different possible flags to be used by a"},{"type":"text","text":" "},{"type":"codeVoice","code":"@Flag"},{"type":"text","text":" property."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/ArgumentParser\/EnumerableFlag","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EnumerableFlag"}],"url":"\/documentation\/argumentparser\/enumerableflag"},"doc://org.swift.docc/documentation/ArgumentParser/ValidationError":{"role":"symbol","title":"ValidationError","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValidationError"}],"abstract":[{"type":"text","text":"An error type that is presented to the user as an error with parsing their"},{"type":"text","text":" "},{"type":"text","text":"command-line input."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/ArgumentParser\/ValidationError","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ValidationError"}],"url":"\/documentation\/argumentparser\/validationerror"},"doc://org.swift.docc/documentation/ArgumentParser/OptionGroup":{"role":"symbol","title":"OptionGroup","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OptionGroup"}],"abstract":[{"type":"text","text":"A wrapper that transparently includes a parsable type."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/ArgumentParser\/OptionGroup","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"OptionGroup"}],"url":"\/documentation\/argumentparser\/optiongroup"},"doc://org.swift.docc/documentation/ArgumentParser/ExpressibleByArgument":{"role":"symbol","title":"ExpressibleByArgument","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ExpressibleByArgument"}],"abstract":[{"type":"text","text":"A type that can be expressed as a command-line argument."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/ArgumentParser\/ExpressibleByArgument","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ExpressibleByArgument"}],"url":"\/documentation\/argumentparser\/expressiblebyargument"},"doc://org.swift.docc/documentation/ArgumentParser/Option":{"role":"symbol","title":"Option","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Option"}],"abstract":[{"type":"text","text":"A property wrapper that represents a command-line option."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/ArgumentParser\/Option","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Option"}],"url":"\/documentation\/argumentparser\/option"},"doc://org.swift.docc/documentation/ArgumentParser/ExitCode":{"role":"symbol","title":"ExitCode","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ExitCode"}],"abstract":[{"type":"text","text":"An error type that only includes an exit code."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/ArgumentParser\/ExitCode","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ExitCode"}],"url":"\/documentation\/argumentparser\/exitcode"},"doc://org.swift.docc/documentation/ArgumentParser/CompletionShell":{"role":"symbol","title":"CompletionShell","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CompletionShell"}],"abstract":[{"type":"text","text":"A shell for which the parser can generate a completion script."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/ArgumentParser\/CompletionShell","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CompletionShell"}],"url":"\/documentation\/argumentparser\/completionshell"},"doc://org.swift.docc/documentation/ArgumentParser/SingleValueParsingStrategy":{"role":"symbol","title":"SingleValueParsingStrategy","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SingleValueParsingStrategy"}],"abstract":[{"type":"text","text":"The strategy to use when parsing a single value from "},{"type":"codeVoice","code":"@Option"},{"type":"text","text":" arguments."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/ArgumentParser\/SingleValueParsingStrategy","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SingleValueParsingStrategy"}],"url":"\/documentation\/argumentparser\/singlevalueparsingstrategy"},"doc://org.swift.docc/documentation/ArgumentParser/FlagExclusivity":{"role":"symbol","title":"FlagExclusivity","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FlagExclusivity"}],"abstract":[{"type":"text","text":"The options for treating enumeration-based flags as exclusive."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/ArgumentParser\/FlagExclusivity","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FlagExclusivity"}],"url":"\/documentation\/argumentparser\/flagexclusivity"},"doc://org.swift.docc/documentation/ArgumentParser/CompletionKind":{"role":"symbol","title":"CompletionKind","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CompletionKind"}],"abstract":[{"type":"text","text":"The type of completion to use for an argument or option."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/ArgumentParser\/CompletionKind","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CompletionKind"}],"url":"\/documentation\/argumentparser\/completionkind"},"doc://org.swift.docc/documentation/ArgumentParser/NameSpecification":{"role":"symbol","title":"NameSpecification","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"NameSpecification"}],"abstract":[{"type":"text","text":"A specification for how to represent a property as a command-line argument"},{"type":"text","text":" "},{"type":"text","text":"label."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/ArgumentParser\/NameSpecification","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"NameSpecification"}],"url":"\/documentation\/argumentparser\/namespecification"},"doc://org.swift.docc/documentation/ArgumentParser/ArgumentHelp":{"role":"symbol","title":"ArgumentHelp","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ArgumentHelp"}],"abstract":[{"type":"text","text":"Help information for a command-line argument."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/ArgumentParser\/ArgumentHelp","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ArgumentHelp"}],"url":"\/documentation\/argumentparser\/argumenthelp"},"doc://org.swift.docc/documentation/ArgumentParser/Argument":{"role":"symbol","title":"Argument","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Argument"}],"abstract":[{"type":"text","text":"A property wrapper that represents a positional command-line argument."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/ArgumentParser\/Argument","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Argument"}],"url":"\/documentation\/argumentparser\/argument"},"doc://org.swift.docc/documentation/ArgumentParser/Flag":{"role":"symbol","title":"Flag","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Flag"}],"abstract":[{"type":"text","text":"A property wrapper that represents a command-line flag."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/ArgumentParser\/Flag","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Flag"}],"url":"\/documentation\/argumentparser\/flag"},"doc://org.swift.docc/documentation/ArgumentParser/CommandConfiguration":{"role":"symbol","title":"CommandConfiguration","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CommandConfiguration"}],"abstract":[{"type":"text","text":"The configuration for a command."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/ArgumentParser\/CommandConfiguration","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CommandConfiguration"}],"url":"\/documentation\/argumentparser\/commandconfiguration"},"doc://org.swift.docc/documentation/ArgumentParser/ParsableArguments":{"role":"symbol","title":"ParsableArguments","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParsableArguments"}],"abstract":[{"type":"text","text":"A type that can be parsed from a program’s command-line arguments."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/ArgumentParser\/ParsableArguments","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ParsableArguments"}],"url":"\/documentation\/argumentparser\/parsablearguments"},"doc://org.swift.docc/documentation/ArgumentParser/CleanExit":{"role":"symbol","title":"CleanExit","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CleanExit"}],"abstract":[{"type":"text","text":"An error type that represents a clean (i.e. non-error state) exit of the"},{"type":"text","text":" "},{"type":"text","text":"utility."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/ArgumentParser\/CleanExit","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CleanExit"}],"url":"\/documentation\/argumentparser\/cleanexit"},"doc://org.swift.docc/documentation/ArgumentParser/ParsableCommand":{"role":"symbol","title":"ParsableCommand","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParsableCommand"}],"abstract":[{"type":"text","text":"A type that can be executed as part of a nested tree of commands."}],"identifier":"doc:\/\/org.swift.docc\/documentation\/ArgumentParser\/ParsableCommand","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ParsableCommand"}],"url":"\/documentation\/argumentparser\/parsablecommand"},"doc://org.swift.docc/documentation/ArgumentParser":{"role":"collection","title":"ArgumentParser","abstract":[],"identifier":"doc:\/\/org.swift.docc\/documentation\/ArgumentParser","kind":"symbol","type":"topic","url":"\/documentation\/argumentparser"}}}